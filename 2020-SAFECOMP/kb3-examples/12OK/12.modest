//##########Automatically generated Modest file from: "12.fi"
const int B;
property ComputeProbability=Pmax(<>[T<=B]  (Fail==true));
action  act_1  , act_0;
action  dact_1  , dact_0;
action  act_AND_1,dact_AND_1, fail_AND_1, repaired_AND_1;
bool  AND_1 = false;
action  act_FailureOf_A,dact_FailureOf_A, fail_FailureOf_A, repaired_FailureOf_A;
bool  FailureOf_A = false;
action  act_FailureOf_B,dact_FailureOf_B, fail_FailureOf_B, repaired_FailureOf_B;
bool  FailureOf_B = false;
action  act_OR_1,dact_OR_1, fail_OR_1, repaired_OR_1;
bool  OR_1 = false;
action  act_OnDemandFailureOf_B,dact_OnDemandFailureOf_B, fail_OnDemandFailureOf_B, good_OnDemandFailureOf_B, repaired_OnDemandFailureOf_B;
bool  OnDemandFailureOf_B = false;
action  act_UE_1,dact_UE_1, fail_UE_1, repaired_UE_1;
bool  UE_1 = false, Fail=false;
//##########Failure Behavior of "and_gate" named "AND_1"
process AND_1(){
process P0(){alt{::repaired_FailureOf_A;AND_1()::fail_FailureOf_A; P1()::repaired_OR_1;AND_1()::fail_OR_1; P1()}}
process P1() { fail_AND_1; P2() }
process P2(){alt{::repaired_FailureOf_A;P3()::repaired_OR_1;P3()}}
process P3(){repaired_AND_1;P0()}
alt{::fail_FailureOf_A; P0()::fail_OR_1; P0()}}
//##########Activation Behavior of "and_gate" named "AND_1"
process AND_1_Act(){
act_0; dact_0; AND_1_Act()}
//##########Failure Behavior of "f_leaf" named "FailureOf_A"
process FailureOf_A(){
process P1() {alt{::dact_0;FailureOf_A()::rate(0.1) tau{=FailureOf_A=true=}; fail_FailureOf_A; P2()}}
process P2() {alt{::dact_0; alt{::act_0; P2()::rate(0.1) tau{=FailureOf_A=false=}; repaired_FailureOf_A; FailureOf_A()}::rate(0.1) tau{=FailureOf_A=false=}; repaired_FailureOf_A; P1()}}
act_0; P1()}
//##########Activation Behavior of "f_leaf" named "FailureOf_A"
process FailureOf_A_Act(){
act_0; dact_0; FailureOf_A_Act()}
//##########Failure Behavior of "f_leaf" named "FailureOf_B"
process FailureOf_B(){
process P1() {alt{::dact_1;FailureOf_B()::rate(0.5) tau{=FailureOf_B=true=}; fail_FailureOf_B; P2()}}
process P2() {alt{::dact_1; alt{::act_1; P2()::rate(0.1) tau{=FailureOf_B=false=}; repaired_FailureOf_B; FailureOf_B()}::rate(0.1) tau{=FailureOf_B=false=}; repaired_FailureOf_B; P1()}}
act_1; P1()}
//##########Activation Behavior of "f_leaf" named "FailureOf_B"
process FailureOf_B_Act(){
act_1; dact_1; FailureOf_B_Act()}
//##########Failure Behavior of "or_gate" named "OR_1"
process OR_1(){
process P0(){fail_OR_1;P2()}
process P1(){repaired_OR_1;OR_1()}
process P2(){alt{::repaired_OnDemandFailureOf_B;P1()::fail_OnDemandFailureOf_B; P3()::repaired_FailureOf_B;P1()::fail_FailureOf_B; P3()}}
process P3(){alt{::repaired_OnDemandFailureOf_B;P2()::repaired_FailureOf_B;P2()}} 
 alt{::fail_OnDemandFailureOf_B; P0()::fail_FailureOf_B; P0()}}
//##########Activation Behavior of "or_gate" named "OR_1"
process OR_1_Act(){
alt{:: act_0; S1() :: fail_FailureOf_A; S1()} 
process S1()  {alt {:: dact_0; OR_1_Act():: repaired_FailureOf_A; OR_1_Act() :: act_0; S2() :: fail_FailureOf_A; S2()}}
process S2()  {act_1; S3()}
process S3()  {alt {::  dact_0; S4() :: repaired_FailureOf_A; S4()}}
process S4()  {dact_1; S1() }}
//##########Failure Behavior of "i_leaf" named "OnDemandFailureOf_B"
process OnDemandFailureOf_B(){
act_1;P0() 
process P0() {alt{:: dact_1; OnDemandFailureOf_B() :: palt{:0.5: {=OnDemandFailureOf_B = true =}; fail_OnDemandFailureOf_B; P2(): 1 - 0.5:good_OnDemandFailureOf_B;P1()}}}
process P1() {dact_1; OnDemandFailureOf_B()}
process P2() {alt {::dact_1; P3()::rate(0.1) {=OnDemandFailureOf_B = false =}; repaired_OnDemandFailureOf_B; P1()}}
process P3() {alt {::act_1; alt {::dact_1;P3()::rate(0.1)tau{= OnDemandFailureOf_B = false =};repaired_OnDemandFailureOf_B;P0()}::rate(0.1)tau{= OnDemandFailureOf_B = false =}; repaired_OnDemandFailureOf_B; OnDemandFailureOf_B()}}}
//##########Activation Behavior of "i_leaf" named "OnDemandFailureOf_B"
process OnDemandFailureOf_B_Act(){
act_1; dact_1; OnDemandFailureOf_B_Act()}
//##########Failure Behavior of "undes_event" named "UE_1"
process UE_1() {
fail_AND_1 {=  UE_1=true, Fail = true=} ; repaired_AND_1 {=  UE_1=false, Fail = false=}; UE_1()
 }
//##########Activation Behavior of "undes_event" named "UE_1"
process UE_1_Act(){
act_0; when(false) dact_0; UE_1_Act()}
//##########Composition of all files
par
{
::AND_1()  :: AND_1_Act()
::FailureOf_A()  :: FailureOf_A_Act()
::FailureOf_B()  :: FailureOf_B_Act()
::OR_1()  :: OR_1_Act()
::OnDemandFailureOf_B()  :: OnDemandFailureOf_B_Act()
:: UE_1()  :: UE_1_Act()
}