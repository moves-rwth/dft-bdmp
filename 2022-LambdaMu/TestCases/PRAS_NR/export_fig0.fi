STEPS_ORDER
	__ARBRE__;
	default_step;
	initialization;
	propagate_effect_S;
	propagate_effect_required;
	propagate_leaves;
	tops;
GROUP_NAMES
	V3_simu_group;

OBJECT OPTIONS IS_A GLOBAL_TYPE;
	CONSTANT
	  trimming
		DOMAIN BOOLEAN
		= TRUE;
	  trimming_option
		DOMAIN 'according_to_article' 'maximum'
		= 'maximum';
	  repairable_system
		DOMAIN BOOLEAN
		= FALSE;

OBJECT Authentication_with_pwd IS_A or_gate;
	INTERFACE
	  sons
		= Bruteforce Social_engineering;
	  fathers
		= Password_attack_success;
	  triggered_by
		= ph_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF Password_attack_success) OR (NOT S OF ph_1)
		THEN required OF Authentication_with_pwd <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF Password_attack_success AND (NOT S OF
		  Password_attack_success)
		THEN relevant_evt OF Authentication_with_pwd <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Authentication_with_pwd <-- S OF
		  Authentication_with_pwd;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF Bruteforce OR S OF Social_engineering
		THEN S OF Authentication_with_pwd <-- TRUE;

OBJECT Bruteforce IS_A f_leaf;
	INTERFACE
	  fathers
		= Authentication_with_pwd;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0.0001;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF Authentication_with_pwd
		THEN required OF Bruteforce <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF Authentication_with_pwd AND (NOT S OF
		  Authentication_with_pwd)
		THEN relevant_evt OF Bruteforce <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Bruteforce <-- S OF Bruteforce;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF Bruteforce = TRUE
		THEN S OF Bruteforce <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF Bruteforce = FALSE) AND (required OF Bruteforce
		  AND relevant_evt OF Bruteforce)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING failF OF Bruteforce <-- TRUE;

OBJECT Exploit_success IS_A and_gate;
	INTERFACE
	  sons
		= Vulnerability_found_and_exploited ph_2;
	  fathers
		= RAS_access_granted;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF RAS_access_granted
		THEN required OF Exploit_success <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF RAS_access_granted AND (NOT S OF
		  RAS_access_granted)
		THEN relevant_evt OF Exploit_success <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Exploit_success <-- S OF Exploit_success;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF Vulnerability_found_and_exploited AND S OF ph_2
		THEN S OF Exploit_success <-- TRUE;

OBJECT Exploit_vulnerability IS_A f_leaf;
	INTERFACE
	  fathers
		= Vulnerability_found_and_exploited;
	  triggered_by
		= Find_vulnerability;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0.0001;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF Vulnerability_found_and_exploited) OR (NOT
		  S OF Find_vulnerability)
		THEN required OF Exploit_vulnerability <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF Vulnerability_found_and_exploited AND (NOT S
		  OF Vulnerability_found_and_exploited)
		THEN relevant_evt OF Exploit_vulnerability <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Exploit_vulnerability <-- S OF
		  Exploit_vulnerability;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF Exploit_vulnerability = TRUE
		THEN S OF Exploit_vulnerability <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF Exploit_vulnerability = FALSE) AND (required OF
		  Exploit_vulnerability AND relevant_evt OF
		  Exploit_vulnerability)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING failF OF Exploit_vulnerability <-- TRUE;

OBJECT Find_vulnerability IS_A f_leaf;
	INTERFACE
	  fathers
		= Vulnerability_found_and_exploited;
	  triggers
		= Exploit_vulnerability;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0.0001;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF Vulnerability_found_and_exploited
		THEN required OF Find_vulnerability <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF Vulnerability_found_and_exploited AND (NOT
		  S OF Vulnerability_found_and_exploited)) OR (relevant_evt OF
		  Exploit_vulnerability AND (NOT S OF Exploit_vulnerability))
		THEN relevant_evt OF Find_vulnerability <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Find_vulnerability <-- S OF
		  Find_vulnerability;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF Find_vulnerability = TRUE
		THEN S OF Find_vulnerability <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF Find_vulnerability = FALSE) AND (required OF
		  Find_vulnerability AND relevant_evt OF Find_vulnerability)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING failF OF Find_vulnerability <-- TRUE;

OBJECT Logged_into_the_RAS IS_A and_gate;
	INTERFACE
	  sons
		= RAS_access_granted Wardialing;
	  fathers
		= UE_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF UE_1
		THEN required OF Logged_into_the_RAS <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF UE_1 AND (NOT S OF UE_1)
		THEN relevant_evt OF Logged_into_the_RAS <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Logged_into_the_RAS <-- S OF
		  Logged_into_the_RAS;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF RAS_access_granted AND S OF Wardialing
		THEN S OF Logged_into_the_RAS <-- TRUE;

OBJECT Password_attack_success IS_A and_gate;
	INTERFACE
	  sons
		= Authentication_with_pwd ph_1;
	  fathers
		= RAS_access_granted;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF RAS_access_granted
		THEN required OF Password_attack_success <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF RAS_access_granted AND (NOT S OF
		  RAS_access_granted)
		THEN relevant_evt OF Password_attack_success <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Password_attack_success <-- S OF
		  Password_attack_success;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF Authentication_with_pwd AND S OF ph_1
		THEN S OF Password_attack_success <-- TRUE;

OBJECT RAS_access_granted IS_A or_gate;
	INTERFACE
	  sons
		= Exploit_success Password_attack_success;
	  fathers
		= Logged_into_the_RAS;
	  triggered_by
		= Wardialing;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF Logged_into_the_RAS) OR (NOT S OF
		  Wardialing)
		THEN required OF RAS_access_granted <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF Logged_into_the_RAS AND (NOT S OF
		  Logged_into_the_RAS)
		THEN relevant_evt OF RAS_access_granted <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF RAS_access_granted <-- S OF
		  RAS_access_granted;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF Exploit_success OR S OF Password_attack_success
		THEN S OF RAS_access_granted <-- TRUE;

OBJECT Social_engineering IS_A f_leaf;
	INTERFACE
	  fathers
		= Authentication_with_pwd;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0.0001;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF Authentication_with_pwd
		THEN required OF Social_engineering <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF Authentication_with_pwd AND (NOT S OF
		  Authentication_with_pwd)
		THEN relevant_evt OF Social_engineering <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Social_engineering <-- S OF
		  Social_engineering;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF Social_engineering = TRUE
		THEN S OF Social_engineering <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF Social_engineering = FALSE) AND (required OF
		  Social_engineering AND relevant_evt OF Social_engineering)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING failF OF Social_engineering <-- TRUE;

OBJECT UE_1 IS_A undes_event;
	INTERFACE
	  sons
		= Logged_into_the_RAS;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'always_true';
	  force_relevant_events
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  to_be_taken_into_account
		DOMAIN BOOLEAN
		= TRUE;
	INTERACTION
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		THEN relevant_evt OF UE_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF UE_1 <-- S OF UE_1;
	  xx34
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF Logged_into_the_RAS
		THEN S OF UE_1 <-- TRUE;

OBJECT Vulnerability_found_and_exploited IS_A and_gate;
	INTERFACE
	  sons
		= Exploit_vulnerability Find_vulnerability;
	  fathers
		= Exploit_success;
	  triggered_by
		= ph_2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF Exploit_success) OR (NOT S OF ph_2)
		THEN required OF Vulnerability_found_and_exploited <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF Exploit_success AND (NOT S OF
		  Exploit_success)
		THEN relevant_evt OF Vulnerability_found_and_exploited <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Vulnerability_found_and_exploited <-- S OF
		  Vulnerability_found_and_exploited;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF Exploit_vulnerability AND S OF Find_vulnerability
		THEN S OF Vulnerability_found_and_exploited <-- TRUE;

OBJECT Wardialing IS_A f_leaf;
	INTERFACE
	  fathers
		= Logged_into_the_RAS;
	  triggers
		= RAS_access_granted ph_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0.0001;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF Logged_into_the_RAS
		THEN required OF Wardialing <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF Logged_into_the_RAS AND (NOT S OF
		  Logged_into_the_RAS)) OR ((relevant_evt OF
		  RAS_access_granted AND (NOT S OF RAS_access_granted)) OR (
		  relevant_evt OF ph_1 AND (NOT S OF ph_1)))
		THEN relevant_evt OF Wardialing <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Wardialing <-- S OF Wardialing;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF Wardialing = TRUE
		THEN S OF Wardialing <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF Wardialing = FALSE) AND (required OF Wardialing
		  AND relevant_evt OF Wardialing)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0.0001)
		  INDUCING failF OF Wardialing <-- TRUE;

OBJECT logic_1 IS_A logic_link;

OBJECT logic_10 IS_A logic_link;

OBJECT logic_11 IS_A logic_link;

OBJECT logic_12 IS_A logic_link;

OBJECT logic_13 IS_A logic_link;

OBJECT logic_14 IS_A logic_link;

OBJECT logic_15 IS_A logic_link;

OBJECT logic_16 IS_A logic_link;

OBJECT logic_17 IS_A logic_link;

OBJECT logic_2 IS_A logic_link;

OBJECT logic_3 IS_A logic_link;

OBJECT logic_4 IS_A logic_link;

OBJECT logic_5 IS_A logic_link;

OBJECT ph_1 IS_A phase_leaf;
	INTERFACE
	  fathers
		= Password_attack_success;
	  triggered_by
		= Wardialing;
	  triggers
		= Authentication_with_pwd ph_2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'opposite_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  Dist_kind
		DOMAIN 'exponential' 'constant_time'
		= 'exponential';
	  duration
		DOMAIN REAL
		= 10;
	(*FAILURE*)
	ATTRIBUTE
	  in_progress
		LABEL "Phase %OBJECT in progress"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	  start_phase
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF S OF Wardialing
		THEN required OF ph_1 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF Password_attack_success AND (NOT S OF
		  Password_attack_success)) OR ((relevant_evt OF
		  Authentication_with_pwd AND (NOT S OF
		  Authentication_with_pwd)) OR (relevant_evt OF ph_2 AND (NOT
		  S OF ph_2)))
		THEN relevant_evt OF ph_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF ph_1 <-- S OF ph_1;
	  xx44
		GROUP V3_simu_group
		STEP initialization
		THEN S OF ph_1 <-- in_progress OF ph_1;
	  xx45
		GROUP V3_simu_group
		STEP propagate_leaves
		IF ((NOT in_progress OF ph_1) AND (NOT required OF ph_1)) AND
		  already_required OF ph_1
		THEN start_phase OF ph_1 <-- TRUE;
	  xx46
		GROUP V3_simu_group
		STEP tops
		THEN already_required OF ph_1 <-- required OF ph_1;
	OCCURRENCE
	  xx43_a
		GROUP V3_simu_group
		IF in_progress OF ph_1
		MAY_OCCUR
		  TRANSITION end
		  LABEL "End of phase %OBJECT"
		  DIST EXP (0.1)
		  INDUCING in_progress OF ph_1 <-- FALSE;
	  xx47
		GROUP V3_simu_group
		IF start_phase OF ph_1
		MAY_OCCUR
		  TRANSITION start
		  LABEL "start of phase %OBJECT"
		  DIST INS (1)
		  INDUCING in_progress OF ph_1 <-- TRUE,
			start_phase OF ph_1 <-- FALSE;

OBJECT ph_2 IS_A phase_leaf;
	INTERFACE
	  fathers
		= Exploit_success;
	  triggered_by
		= ph_1;
	  triggers
		= Vulnerability_found_and_exploited;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  Dist_kind
		DOMAIN 'exponential' 'constant_time'
		= 'exponential';
	  duration
		DOMAIN REAL
		= 10;
	(*FAILURE*)
	ATTRIBUTE
	  in_progress
		LABEL "Phase %OBJECT in progress"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	  start_phase
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF Exploit_success) OR (NOT S OF ph_1)
		THEN required OF ph_2 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF Exploit_success AND (NOT S OF
		  Exploit_success)) OR (relevant_evt OF
		  Vulnerability_found_and_exploited AND (NOT S OF
		  Vulnerability_found_and_exploited))
		THEN relevant_evt OF ph_2 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF ph_2 <-- S OF ph_2;
	  xx44
		GROUP V3_simu_group
		STEP initialization
		THEN S OF ph_2 <-- in_progress OF ph_2;
	  xx45
		GROUP V3_simu_group
		STEP propagate_leaves
		IF ((NOT in_progress OF ph_2) AND (NOT required OF ph_2)) AND
		  already_required OF ph_2
		THEN start_phase OF ph_2 <-- TRUE;
	  xx46
		GROUP V3_simu_group
		STEP tops
		THEN already_required OF ph_2 <-- required OF ph_2;
	OCCURRENCE
	  xx43_a
		GROUP V3_simu_group
		IF in_progress OF ph_2
		MAY_OCCUR
		  TRANSITION end
		  LABEL "End of phase %OBJECT"
		  DIST EXP (0.1)
		  INDUCING in_progress OF ph_2 <-- FALSE;
	  xx47
		GROUP V3_simu_group
		IF start_phase OF ph_2
		MAY_OCCUR
		  TRANSITION start
		  LABEL "start of phase %OBJECT"
		  DIST INS (1)
		  INDUCING in_progress OF ph_2 <-- TRUE,
			start_phase OF ph_2 <-- FALSE;

OBJECT t_1 IS_A trigger_link;
	INTERFACE
	  target
		= RAS_access_granted;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_5 IS_A trigger_link;
	INTERFACE
	  target
		= Exploit_vulnerability;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_6 IS_A trigger_link;
	INTERFACE
	  target
		= Authentication_with_pwd;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_6_1 IS_A trigger_link;
	INTERFACE
	  target
		= Vulnerability_found_and_exploited;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_7 IS_A trigger_link;
	INTERFACE
	  target
		= ph_2;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_8 IS_A trigger_link;
	INTERFACE
	  target
		= ph_1;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'opposite_to_S_trig';

OBJECT __ARBRE__EIRM IS_A FIGARO;
	CONSTANT
	  Profil1
		DOMAIN BOOLEAN
		= TRUE;
	  nrep
		DOMAIN BOOLEAN
		= TRUE;

