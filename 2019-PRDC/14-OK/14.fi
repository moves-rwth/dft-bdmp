STEPS_ORDER
	__ARBRE__;
	default_step;
	initialization;
	propagate_effect_S;
	propagate_effect_required;
	propagate_leaves;
	tops;
GROUP_NAMES
	V3_simu_group;

OBJECT OPTIONS IS_A GLOBAL_TYPE;
	CONSTANT
	  trimming
		DOMAIN BOOLEAN
		= TRUE;
	  trimming_option
		DOMAIN 'according_to_article' 'maximum'
		= 'maximum';
	  repairable_system
		DOMAIN BOOLEAN
		= FALSE;

OBJECT AND_1 IS_A and_gate;
	INTERFACE
	  sons
		= Primary Secundary;
	  fathers
		= OR_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_1
		THEN required OF AND_1 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_1 AND (NOT S OF OR_1)
		THEN relevant_evt OF AND_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF AND_1 <-- S OF AND_1;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF Primary AND S OF Secundary
		THEN S OF AND_1 <-- TRUE;

OBJECT OR_1 IS_A or_gate;
	INTERFACE
	  sons
		= THEN_1 AND_1;
	  fathers
		= UE_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF UE_1
		THEN required OF OR_1 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF UE_1 AND (NOT S OF UE_1)
		THEN relevant_evt OF OR_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF OR_1 <-- S OF OR_1;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF THEN_1 OR S OF AND_1
		THEN S OF OR_1 <-- TRUE;

OBJECT Primary IS_A f_leaf;
	INTERFACE
	  fathers
		= THEN_1 AND_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0.0001;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "défaillance en fonctionnement %OBJET"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF THEN_1) AND (NOT required OF AND_1)
		THEN required OF Primary <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF THEN_1 AND (NOT S OF THEN_1)) OR (
		  relevant_evt OF AND_1 AND (NOT S OF AND_1))
		THEN relevant_evt OF Primary <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Primary <-- S OF Primary;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF Primary = TRUE
		THEN S OF Primary <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF Primary = FALSE) AND (required OF Primary AND
		  relevant_evt OF Primary)
		MAY_OCCUR
		  FAULT failF
		  LABEL "défaillance en fonctionnement %OBJET"
		  DIST EXP (0.0001)
		  INDUCING failF OF Primary <-- TRUE;

OBJECT Secundary IS_A f_leaf;
	INTERFACE
	  fathers
		= AND_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0.0001;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "défaillance en fonctionnement %OBJET"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF AND_1
		THEN required OF Secundary <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF AND_1 AND (NOT S OF AND_1)
		THEN relevant_evt OF Secundary <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Secundary <-- S OF Secundary;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF Secundary = TRUE
		THEN S OF Secundary <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF Secundary = FALSE) AND (required OF Secundary AND
		  relevant_evt OF Secundary)
		MAY_OCCUR
		  FAULT failF
		  LABEL "défaillance en fonctionnement %OBJET"
		  DIST EXP (0.0001)
		  INDUCING failF OF Secundary <-- TRUE;

OBJECT Switch IS_A f_leaf;
	INTERFACE
	  fathers
		= THEN_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0.0001;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "défaillance en fonctionnement %OBJET"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF THEN_1
		THEN required OF Switch <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF THEN_1 AND (NOT S OF THEN_1)
		THEN relevant_evt OF Switch <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF Switch <-- S OF Switch;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF Switch = TRUE
		THEN S OF Switch <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF Switch = FALSE) AND (required OF Switch AND
		  relevant_evt OF Switch)
		MAY_OCCUR
		  FAULT failF
		  LABEL "défaillance en fonctionnement %OBJET"
		  DIST EXP (0.0001)
		  INDUCING failF OF Switch <-- TRUE;

OBJECT THEN_1 IS_A then_gate;
	INTERFACE
	  fathers
		= OR_1;
	  first
		= Switch;
	  second
		= Primary;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  step_down
		DOMAIN 'rep_first' 'rep_second' 'rep_any' 'rep_all'
		= 'rep_any';
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF OR_1
		THEN required OF THEN_1 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF OR_1 AND (NOT S OF OR_1)
		THEN relevant_evt OF THEN_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF THEN_1 <-- S OF THEN_1;
	  xx25
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF Primary AND S OF Switch) AND already_S OF Switch) AND
		  (NOT already_S OF Primary)
		THEN S OF THEN_1 <-- TRUE;
	  xx26
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF already_S OF THEN_1 AND (S OF Switch AND S OF Primary)
		THEN S OF THEN_1 <-- TRUE;

OBJECT UE_1 IS_A undes_event;
	INTERFACE
	  sons
		= OR_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		THEN relevant_evt OF UE_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF UE_1 <-- S OF UE_1;
	  xx34
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF OR_1
		THEN S OF UE_1 <-- TRUE;

OBJECT first_1 IS_A first_link;

OBJECT l_1 IS_A logic_link;

OBJECT l_2 IS_A logic_link;

OBJECT l_3 IS_A logic_link;

OBJECT l_4 IS_A logic_link;

OBJECT l_5 IS_A logic_link;

OBJECT second_1 IS_A second_link;

OBJECT __ARBRE__EIRM IS_A FIGARO;
	CONSTANT
	  Profil1
		DOMAIN BOOLEAN
		= TRUE;

