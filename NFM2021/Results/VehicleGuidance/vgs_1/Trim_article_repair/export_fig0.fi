STEPS_ORDER
	__ARBRE__;
	default_step;
	initialization;
	propagate_effect_S;
	propagate_effect_required;
	propagate_leaves;
	tops;
GROUP_NAMES
	V3_simu_group;

OBJECT OPTIONS IS_A GLOBAL_TYPE;
	CONSTANT
	  trimming
		DOMAIN BOOLEAN
		= TRUE;
	  trimming_option
		DOMAIN 'according_to_article' 'maximum'
		= 'according_to_article';
	  repairable_system
		DOMAIN BOOLEAN
		= TRUE;

OBJECT A0 IS_A or_gate;
	INTERFACE
	  sons
		= A1 A31 A35 A39 A43 A46 A82;
	  fathers
		= UE_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF UE_1
		THEN required OF A0 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF UE_1 AND (NOT S OF UE_1)
		THEN relevant_evt OF A0 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A0 <-- S OF A0;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((((S OF A1 OR S OF A31) OR S OF A35) OR S OF A39) OR S OF
		  A43) OR S OF A46) OR S OF A82
		THEN S OF A0 <-- TRUE;

OBJECT A1 IS_A or_gate;
	INTERFACE
	  sons
		= A34;
	  fathers
		= A0;
	  triggers
		= i_A69 i_A70 i_A71;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A1 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (((NOT S OF i_A69)
		  OR (NOT S OF i_A70)) OR (NOT S OF i_A71))
		THEN relevant_evt OF A1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A1 <-- S OF A1;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A34
		THEN S OF A1 <-- TRUE;

OBJECT A10 IS_A or_gate;
	INTERFACE
	  sons
		= A137 A50 A54 A9 A93;
	  fathers
		= A79;
	  triggers
		= i_A51 i_A52;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A79
		THEN required OF A10 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A79 AND (NOT S OF A79)) OR ((NOT S OF i_A51)
		   OR (NOT S OF i_A52))
		THEN relevant_evt OF A10 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A10 <-- S OF A10;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A137 OR S OF A50) OR S OF A54) OR S OF A9) OR S OF
		  A93
		THEN S OF A10 <-- TRUE;

OBJECT A100 IS_A f_leaf;
	INTERFACE
	  fathers
		= A104;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A104
		THEN required OF A100 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A104 AND (NOT S OF A104)
		THEN relevant_evt OF A100 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A100 <-- S OF A100;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A100 = TRUE
		THEN S OF A100 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A100 = FALSE) AND (required OF A100 AND
		  relevant_evt OF A100)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A100 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A100 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A100 <-- FALSE;

OBJECT A101 IS_A f_leaf;
	INTERFACE
	  fathers
		= A102;
	  triggers
		= A99;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A102
		THEN required OF A101 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A102 AND (NOT S OF A102)) OR (NOT S OF A99)
		THEN relevant_evt OF A101 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A101 <-- S OF A101;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A101 = TRUE
		THEN S OF A101 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A101 = FALSE) AND (required OF A101 AND
		  relevant_evt OF A101)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A101 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A101 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A101 <-- FALSE;

OBJECT A102 IS_A and_gate;
	INTERFACE
	  sons
		= A101 A99;
	  fathers
		= A104;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A104
		THEN required OF A102 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A104 AND (NOT S OF A104)
		THEN relevant_evt OF A102 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A102 <-- S OF A102;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A101 AND S OF A99
		THEN S OF A102 <-- TRUE;

OBJECT A104 IS_A or_gate;
	INTERFACE
	  sons
		= A100 A102 A95 A97;
	  fathers
		= A13 A16 A19;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((NOT required OF A13) AND (NOT required OF A16)) AND (NOT
		  required OF A19)
		THEN required OF A104 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((relevant_evt OF A13 AND (NOT S OF A13)) OR (relevant_evt
		  OF A16 AND (NOT S OF A16))) OR (relevant_evt OF A19 AND (NOT
		  S OF A19))
		THEN relevant_evt OF A104 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A104 <-- S OF A104;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A100 OR S OF A102) OR S OF A95) OR S OF A97
		THEN S OF A104 <-- TRUE;

OBJECT A105 IS_A f_leaf;
	INTERFACE
	  fathers
		= A108;
	  triggered_by
		= A107;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A107
		THEN required OF A105 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A108 AND (NOT S OF A108)
		THEN relevant_evt OF A105 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A105 <-- S OF A105;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A105 = TRUE
		THEN S OF A105 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A105 = FALSE) AND (required OF A105 AND
		  relevant_evt OF A105)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9e-05)
		  INDUCING failF OF A105 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A105 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A105 <-- FALSE;

OBJECT A106 IS_A f_leaf;
	INTERFACE
	  fathers
		= A115;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A115
		THEN required OF A106 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A115 AND (NOT S OF A115)
		THEN relevant_evt OF A106 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A106 <-- S OF A106;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A106 = TRUE
		THEN S OF A106 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A106 = FALSE) AND (required OF A106 AND
		  relevant_evt OF A106)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A106 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A106 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A106 <-- FALSE;

OBJECT A107 IS_A f_leaf;
	INTERFACE
	  fathers
		= A108;
	  triggers
		= A105;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A108
		THEN required OF A107 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A108 AND (NOT S OF A108)) OR (NOT S OF A105)
		THEN relevant_evt OF A107 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A107 <-- S OF A107;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A107 = TRUE
		THEN S OF A107 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A107 = FALSE) AND (required OF A107 AND
		  relevant_evt OF A107)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A107 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A107 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A107 <-- FALSE;

OBJECT A108 IS_A and_gate;
	INTERFACE
	  sons
		= A105 A107;
	  fathers
		= A115;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A115
		THEN required OF A108 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A115 AND (NOT S OF A115)
		THEN relevant_evt OF A108 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A108 <-- S OF A108;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A105 AND S OF A107
		THEN S OF A108 <-- TRUE;

OBJECT A110 IS_A f_leaf;
	INTERFACE
	  fathers
		= A113;
	  triggered_by
		= A112;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A112
		THEN required OF A110 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A113 AND (NOT S OF A113)
		THEN relevant_evt OF A110 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A110 <-- S OF A110;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A110 = TRUE
		THEN S OF A110 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A110 = FALSE) AND (required OF A110 AND
		  relevant_evt OF A110)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9e-06)
		  INDUCING failF OF A110 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A110 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A110 <-- FALSE;

OBJECT A111 IS_A f_leaf;
	INTERFACE
	  fathers
		= A115;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A115
		THEN required OF A111 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A115 AND (NOT S OF A115)
		THEN relevant_evt OF A111 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A111 <-- S OF A111;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A111 = TRUE
		THEN S OF A111 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A111 = FALSE) AND (required OF A111 AND
		  relevant_evt OF A111)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A111 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A111 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A111 <-- FALSE;

OBJECT A112 IS_A f_leaf;
	INTERFACE
	  fathers
		= A113;
	  triggers
		= A110;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A113
		THEN required OF A112 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A113 AND (NOT S OF A113)) OR (NOT S OF A110)
		THEN relevant_evt OF A112 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A112 <-- S OF A112;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A112 = TRUE
		THEN S OF A112 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A112 = FALSE) AND (required OF A112 AND
		  relevant_evt OF A112)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A112 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A112 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A112 <-- FALSE;

OBJECT A113 IS_A and_gate;
	INTERFACE
	  sons
		= A110 A112;
	  fathers
		= A115;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A115
		THEN required OF A113 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A115 AND (NOT S OF A115)
		THEN relevant_evt OF A113 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A113 <-- S OF A113;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A110 AND S OF A112
		THEN S OF A113 <-- TRUE;

OBJECT A115 IS_A or_gate;
	INTERFACE
	  sons
		= A106 A108 A111 A113;
	  fathers
		= A22 A25 A28;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((NOT required OF A22) AND (NOT required OF A25)) AND (NOT
		  required OF A28)
		THEN required OF A115 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((relevant_evt OF A22 AND (NOT S OF A22)) OR (relevant_evt
		  OF A25 AND (NOT S OF A25))) OR (relevant_evt OF A28 AND (NOT
		  S OF A28))
		THEN relevant_evt OF A115 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A115 <-- S OF A115;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A106 OR S OF A108) OR S OF A111) OR S OF A113
		THEN S OF A115 <-- TRUE;

OBJECT A116 IS_A f_leaf;
	INTERFACE
	  fathers
		= A119;
	  triggered_by
		= A118;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A118
		THEN required OF A116 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A119 AND (NOT S OF A119)
		THEN relevant_evt OF A116 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A116 <-- S OF A116;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A116 = TRUE
		THEN S OF A116 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A116 = FALSE) AND (required OF A116 AND
		  relevant_evt OF A116)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-06)
		  INDUCING failF OF A116 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A116 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A116 <-- FALSE;

OBJECT A117 IS_A f_leaf;
	INTERFACE
	  fathers
		= A126;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A126
		THEN required OF A117 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A126 AND (NOT S OF A126)
		THEN relevant_evt OF A117 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A117 <-- S OF A117;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A117 = TRUE
		THEN S OF A117 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A117 = FALSE) AND (required OF A117 AND
		  relevant_evt OF A117)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A117 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A117 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A117 <-- FALSE;

OBJECT A118 IS_A f_leaf;
	INTERFACE
	  fathers
		= A119;
	  triggers
		= A116;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A119
		THEN required OF A118 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A119 AND (NOT S OF A119)) OR (NOT S OF A116)
		THEN relevant_evt OF A118 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A118 <-- S OF A118;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A118 = TRUE
		THEN S OF A118 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A118 = FALSE) AND (required OF A118 AND
		  relevant_evt OF A118)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A118 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A118 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A118 <-- FALSE;

OBJECT A119 IS_A and_gate;
	INTERFACE
	  sons
		= A116 A118;
	  fathers
		= A126;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A126
		THEN required OF A119 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A126 AND (NOT S OF A126)
		THEN relevant_evt OF A119 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A119 <-- S OF A119;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A116 AND S OF A118
		THEN S OF A119 <-- TRUE;

OBJECT A12 IS_A f_leaf;
	INTERFACE
	  fathers
		= A13;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A13
		THEN required OF A12 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A13 AND (NOT S OF A13)
		THEN relevant_evt OF A12 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A12 <-- S OF A12;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A12 = TRUE
		THEN S OF A12 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A12 = FALSE) AND (required OF A12 AND relevant_evt
		  OF A12)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A12 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A12 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A12 <-- FALSE;

OBJECT A121 IS_A f_leaf;
	INTERFACE
	  fathers
		= A124;
	  triggered_by
		= A123;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A123
		THEN required OF A121 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A124 AND (NOT S OF A124)
		THEN relevant_evt OF A121 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A121 <-- S OF A121;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A121 = TRUE
		THEN S OF A121 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A121 = FALSE) AND (required OF A121 AND
		  relevant_evt OF A121)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-07)
		  INDUCING failF OF A121 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A121 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A121 <-- FALSE;

OBJECT A122 IS_A f_leaf;
	INTERFACE
	  fathers
		= A126;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-08;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A126
		THEN required OF A122 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A126 AND (NOT S OF A126)
		THEN relevant_evt OF A122 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A122 <-- S OF A122;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A122 = TRUE
		THEN S OF A122 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A122 = FALSE) AND (required OF A122 AND
		  relevant_evt OF A122)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-08)
		  INDUCING failF OF A122 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A122 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A122 <-- FALSE;

OBJECT A123 IS_A f_leaf;
	INTERFACE
	  fathers
		= A124;
	  triggers
		= A121;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A124
		THEN required OF A123 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A124 AND (NOT S OF A124)) OR (NOT S OF A121)
		THEN relevant_evt OF A123 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A123 <-- S OF A123;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A123 = TRUE
		THEN S OF A123 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A123 = FALSE) AND (required OF A123 AND
		  relevant_evt OF A123)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A123 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A123 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A123 <-- FALSE;

OBJECT A124 IS_A and_gate;
	INTERFACE
	  sons
		= A121 A123;
	  fathers
		= A126;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A126
		THEN required OF A124 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A126 AND (NOT S OF A126)
		THEN relevant_evt OF A124 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A124 <-- S OF A124;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A121 AND S OF A123
		THEN S OF A124 <-- TRUE;

OBJECT A126 IS_A or_gate;
	INTERFACE
	  sons
		= A117 A119 A122 A124;
	  fathers
		= A31 A35;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A31) AND (NOT required OF A35)
		THEN required OF A126 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A31 AND (NOT S OF A31)) OR (relevant_evt OF
		  A35 AND (NOT S OF A35))
		THEN relevant_evt OF A126 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A126 <-- S OF A126;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A117 OR S OF A119) OR S OF A122) OR S OF A124
		THEN S OF A126 <-- TRUE;

OBJECT A127 IS_A f_leaf;
	INTERFACE
	  fathers
		= A130;
	  triggered_by
		= A129;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A129
		THEN required OF A127 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A130 AND (NOT S OF A130)
		THEN relevant_evt OF A127 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A127 <-- S OF A127;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A127 = TRUE
		THEN S OF A127 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A127 = FALSE) AND (required OF A127 AND
		  relevant_evt OF A127)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-06)
		  INDUCING failF OF A127 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A127 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A127 <-- FALSE;

OBJECT A128 IS_A f_leaf;
	INTERFACE
	  fathers
		= A137;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A137
		THEN required OF A128 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A137 AND (NOT S OF A137)
		THEN relevant_evt OF A128 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A128 <-- S OF A128;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A128 = TRUE
		THEN S OF A128 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A128 = FALSE) AND (required OF A128 AND
		  relevant_evt OF A128)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A128 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A128 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A128 <-- FALSE;

OBJECT A129 IS_A f_leaf;
	INTERFACE
	  fathers
		= A130;
	  triggers
		= A127;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A130
		THEN required OF A129 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A130 AND (NOT S OF A130)) OR (NOT S OF A127)
		THEN relevant_evt OF A129 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A129 <-- S OF A129;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A129 = TRUE
		THEN S OF A129 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A129 = FALSE) AND (required OF A129 AND
		  relevant_evt OF A129)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A129 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A129 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A129 <-- FALSE;

OBJECT A13 IS_A or_gate;
	INTERFACE
	  sons
		= A104 A12 A137 A56 A70;
	  fathers
		= A80;
	  triggers
		= i_A55;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A80
		THEN required OF A13 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A80 AND (NOT S OF A80)) OR (NOT S OF i_A55)
		THEN relevant_evt OF A13 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A13 <-- S OF A13;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A104 OR S OF A12) OR S OF A137) OR S OF A56) OR S OF
		  A70
		THEN S OF A13 <-- TRUE;

OBJECT A130 IS_A and_gate;
	INTERFACE
	  sons
		= A127 A129;
	  fathers
		= A137;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A137
		THEN required OF A130 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A137 AND (NOT S OF A137)
		THEN relevant_evt OF A130 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A130 <-- S OF A130;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A127 AND S OF A129
		THEN S OF A130 <-- TRUE;

OBJECT A132 IS_A f_leaf;
	INTERFACE
	  fathers
		= A135;
	  triggered_by
		= A134;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A134
		THEN required OF A132 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A135 AND (NOT S OF A135)
		THEN relevant_evt OF A132 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A132 <-- S OF A132;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A132 = TRUE
		THEN S OF A132 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A132 = FALSE) AND (required OF A132 AND
		  relevant_evt OF A132)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-07)
		  INDUCING failF OF A132 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A132 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A132 <-- FALSE;

OBJECT A133 IS_A f_leaf;
	INTERFACE
	  fathers
		= A137;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-08;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A137
		THEN required OF A133 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A137 AND (NOT S OF A137)
		THEN relevant_evt OF A133 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A133 <-- S OF A133;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A133 = TRUE
		THEN S OF A133 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A133 = FALSE) AND (required OF A133 AND
		  relevant_evt OF A133)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-08)
		  INDUCING failF OF A133 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A133 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A133 <-- FALSE;

OBJECT A134 IS_A f_leaf;
	INTERFACE
	  fathers
		= A135;
	  triggers
		= A132;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A135
		THEN required OF A134 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A135 AND (NOT S OF A135)) OR (NOT S OF A132)
		THEN relevant_evt OF A134 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A134 <-- S OF A134;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A134 = TRUE
		THEN S OF A134 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A134 = FALSE) AND (required OF A134 AND
		  relevant_evt OF A134)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A134 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A134 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A134 <-- FALSE;

OBJECT A135 IS_A and_gate;
	INTERFACE
	  sons
		= A132 A134;
	  fathers
		= A137;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A137
		THEN required OF A135 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A137 AND (NOT S OF A137)
		THEN relevant_evt OF A135 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A135 <-- S OF A135;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A132 AND S OF A134
		THEN S OF A135 <-- TRUE;

OBJECT A137 IS_A or_gate;
	INTERFACE
	  sons
		= A128 A130 A133 A135;
	  fathers
		= A10 A13 A19 A22 A28 A31 A4 A53 A60 A67;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (((((((((NOT required OF A10) AND (NOT required OF A13)) AND
		  (NOT required OF A19)) AND (NOT required OF A22)) AND (NOT
		  required OF A28)) AND (NOT required OF A31)) AND (NOT
		  required OF A4)) AND (NOT required OF A53)) AND (NOT
		  required OF A60)) AND (NOT required OF A67)
		THEN required OF A137 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (((((((((relevant_evt OF A10 AND (NOT S OF A10)) OR (
		  relevant_evt OF A13 AND (NOT S OF A13))) OR (relevant_evt OF
		  A19 AND (NOT S OF A19))) OR (relevant_evt OF A22 AND (NOT S
		  OF A22))) OR (relevant_evt OF A28 AND (NOT S OF A28))) OR (
		  relevant_evt OF A31 AND (NOT S OF A31))) OR (relevant_evt OF
		  A4 AND (NOT S OF A4))) OR (relevant_evt OF A53 AND (NOT S OF
		  A53))) OR (relevant_evt OF A60 AND (NOT S OF A60))) OR (
		  relevant_evt OF A67 AND (NOT S OF A67))
		THEN relevant_evt OF A137 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A137 <-- S OF A137;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A128 OR S OF A130) OR S OF A133) OR S OF A135
		THEN S OF A137 <-- TRUE;

OBJECT A15 IS_A f_leaf;
	INTERFACE
	  fathers
		= A16;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A16
		THEN required OF A15 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A16 AND (NOT S OF A16)
		THEN relevant_evt OF A15 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A15 <-- S OF A15;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A15 = TRUE
		THEN S OF A15 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A15 = FALSE) AND (required OF A15 AND relevant_evt
		  OF A15)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A15 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A15 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A15 <-- FALSE;

OBJECT A16 IS_A or_gate;
	INTERFACE
	  sons
		= A104 A15 A55 A58;
	  fathers
		= A80;
	  triggers
		= i_A56 i_A57;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A80
		THEN required OF A16 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A80 AND (NOT S OF A80)) OR ((NOT S OF i_A56)
		   OR (NOT S OF i_A57))
		THEN relevant_evt OF A16 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A16 <-- S OF A16;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A104 OR S OF A15) OR S OF A55) OR S OF A58
		THEN S OF A16 <-- TRUE;

OBJECT A18 IS_A f_leaf;
	INTERFACE
	  fathers
		= A19;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A19
		THEN required OF A18 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A19 AND (NOT S OF A19)
		THEN relevant_evt OF A18 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A18 <-- S OF A18;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A18 = TRUE
		THEN S OF A18 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A18 = FALSE) AND (required OF A18 AND relevant_evt
		  OF A18)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A18 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A18 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A18 <-- FALSE;

OBJECT A19 IS_A or_gate;
	INTERFACE
	  sons
		= A104 A137 A18 A57 A61;
	  fathers
		= A80;
	  triggers
		= i_A58 i_A59;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A80
		THEN required OF A19 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A80 AND (NOT S OF A80)) OR ((NOT S OF i_A58)
		   OR (NOT S OF i_A59))
		THEN relevant_evt OF A19 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A19 <-- S OF A19;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A104 OR S OF A137) OR S OF A18) OR S OF A57) OR S OF
		  A61
		THEN S OF A19 <-- TRUE;

OBJECT A21 IS_A f_leaf;
	INTERFACE
	  fathers
		= A22;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A22
		THEN required OF A21 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A22 AND (NOT S OF A22)
		THEN relevant_evt OF A21 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A21 <-- S OF A21;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A21 = TRUE
		THEN S OF A21 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A21 = FALSE) AND (required OF A21 AND relevant_evt
		  OF A21)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A21 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A21 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A21 <-- FALSE;

OBJECT A22 IS_A or_gate;
	INTERFACE
	  sons
		= A115 A137 A21 A63 A71;
	  fathers
		= A81;
	  triggers
		= i_A62;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A81
		THEN required OF A22 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A81 AND (NOT S OF A81)) OR (NOT S OF i_A62)
		THEN relevant_evt OF A22 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A22 <-- S OF A22;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A115 OR S OF A137) OR S OF A21) OR S OF A63) OR S OF
		  A71
		THEN S OF A22 <-- TRUE;

OBJECT A24 IS_A f_leaf;
	INTERFACE
	  fathers
		= A25;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A25
		THEN required OF A24 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A25 AND (NOT S OF A25)
		THEN relevant_evt OF A24 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A24 <-- S OF A24;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A24 = TRUE
		THEN S OF A24 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A24 = FALSE) AND (required OF A24 AND relevant_evt
		  OF A24)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A24 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A24 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A24 <-- FALSE;

OBJECT A25 IS_A or_gate;
	INTERFACE
	  sons
		= A115 A24 A62 A65;
	  fathers
		= A81;
	  triggers
		= i_A63 i_A64;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A81
		THEN required OF A25 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A81 AND (NOT S OF A81)) OR ((NOT S OF i_A63)
		   OR (NOT S OF i_A64))
		THEN relevant_evt OF A25 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A25 <-- S OF A25;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A115 OR S OF A24) OR S OF A62) OR S OF A65
		THEN S OF A25 <-- TRUE;

OBJECT A27 IS_A f_leaf;
	INTERFACE
	  fathers
		= A28;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A28
		THEN required OF A27 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A28 AND (NOT S OF A28)
		THEN relevant_evt OF A27 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A27 <-- S OF A27;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A27 = TRUE
		THEN S OF A27 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A27 = FALSE) AND (required OF A27 AND relevant_evt
		  OF A27)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A27 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A27 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A27 <-- FALSE;

OBJECT A28 IS_A or_gate;
	INTERFACE
	  sons
		= A115 A137 A27 A64 A68;
	  fathers
		= A81;
	  triggers
		= i_A65 i_A66;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A81
		THEN required OF A28 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A81 AND (NOT S OF A81)) OR ((NOT S OF i_A65)
		   OR (NOT S OF i_A66))
		THEN relevant_evt OF A28 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A28 <-- S OF A28;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A115 OR S OF A137) OR S OF A27) OR S OF A64) OR S OF
		  A68
		THEN S OF A28 <-- TRUE;

OBJECT A3 IS_A f_leaf;
	INTERFACE
	  fathers
		= A4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A4
		THEN required OF A3 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A4 AND (NOT S OF A4)
		THEN relevant_evt OF A3 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A3 <-- S OF A3;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A3 = TRUE
		THEN S OF A3 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A3 = FALSE) AND (required OF A3 AND relevant_evt
		  OF A3)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A3 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A3 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A3 <-- FALSE;

OBJECT A30 IS_A f_leaf;
	INTERFACE
	  fathers
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A31
		THEN required OF A30 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A31 AND (NOT S OF A31)
		THEN relevant_evt OF A30 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A30 <-- S OF A30;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A30 = TRUE
		THEN S OF A30 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A30 = FALSE) AND (required OF A30 AND relevant_evt
		  OF A30)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A30 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A30 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A30 <-- FALSE;

OBJECT A31 IS_A or_gate;
	INTERFACE
	  sons
		= A126 A137 A30 A72 A73 A74 A75 A76;
	  fathers
		= A0;
	  triggers
		= i_A54 i_A61 i_A68;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A31 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (((NOT S OF i_A54)
		  OR (NOT S OF i_A61)) OR (NOT S OF i_A68))
		THEN relevant_evt OF A31 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A31 <-- S OF A31;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((((((S OF A126 OR S OF A137) OR S OF A30) OR S OF A72) OR S
		  OF A73) OR S OF A74) OR S OF A75) OR S OF A76
		THEN S OF A31 <-- TRUE;

OBJECT A33 IS_A f_leaf;
	INTERFACE
	  fathers
		= A35;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A35
		THEN required OF A33 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A35 AND (NOT S OF A35)
		THEN relevant_evt OF A33 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A33 <-- S OF A33;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A33 = TRUE
		THEN S OF A33 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A33 = FALSE) AND (required OF A33 AND relevant_evt
		  OF A33)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A33 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A33 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A33 <-- FALSE;

OBJECT A34 IS_A k_out_of_n_gate;
	INTERFACE
	  sons
		= A38 A42 A77 A78;
	  fathers
		= A1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  K
		DOMAIN INTEGER
		= 3;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A1
		THEN required OF A34 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A1 AND (NOT S OF A1)
		THEN relevant_evt OF A34 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A34 <-- S OF A34;
	  xx27
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (AT_LEAST 3 WITHIN (S OF A38, S OF A42, S OF A77, S OF A78))
		THEN S OF A34 <-- TRUE;

OBJECT A35 IS_A or_gate;
	INTERFACE
	  sons
		= A126 A33;
	  fathers
		= A0;
	  triggers
		= i_A72;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A35 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A72)
		THEN relevant_evt OF A35 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A35 <-- S OF A35;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A126 OR S OF A33
		THEN S OF A35 <-- TRUE;

OBJECT A37 IS_A f_leaf;
	INTERFACE
	  fathers
		= A39;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A39
		THEN required OF A37 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A39 AND (NOT S OF A39)
		THEN relevant_evt OF A37 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A37 <-- S OF A37;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A37 = TRUE
		THEN S OF A37 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A37 = FALSE) AND (required OF A37 AND relevant_evt
		  OF A37)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A37 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A37 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A37 <-- FALSE;

OBJECT A38 IS_A f_leaf;
	INTERFACE
	  fathers
		= A34;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A34
		THEN required OF A38 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A34 AND (NOT S OF A34)
		THEN relevant_evt OF A38 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A38 <-- S OF A38;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A38 = TRUE
		THEN S OF A38 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A38 = FALSE) AND (required OF A38 AND relevant_evt
		  OF A38)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A38 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A38 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A38 <-- FALSE;

OBJECT A39 IS_A or_gate;
	INTERFACE
	  sons
		= A37;
	  fathers
		= A0;
	  triggers
		= i_A73;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A39 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A73)
		THEN relevant_evt OF A39 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A39 <-- S OF A39;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A37
		THEN S OF A39 <-- TRUE;

OBJECT A4 IS_A or_gate;
	INTERFACE
	  sons
		= A137 A3 A49 A69 A93;
	  fathers
		= A79;
	  triggers
		= i_A48;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A79
		THEN required OF A4 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A79 AND (NOT S OF A79)) OR (NOT S OF i_A48)
		THEN relevant_evt OF A4 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A4 <-- S OF A4;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A137 OR S OF A3) OR S OF A49) OR S OF A69) OR S OF
		  A93
		THEN S OF A4 <-- TRUE;

OBJECT A41 IS_A f_leaf;
	INTERFACE
	  fathers
		= A43;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A43
		THEN required OF A41 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A43 AND (NOT S OF A43)
		THEN relevant_evt OF A41 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A41 <-- S OF A41;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A41 = TRUE
		THEN S OF A41 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A41 = FALSE) AND (required OF A41 AND relevant_evt
		  OF A41)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A41 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A41 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A41 <-- FALSE;

OBJECT A42 IS_A f_leaf;
	INTERFACE
	  fathers
		= A34;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A34
		THEN required OF A42 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A34 AND (NOT S OF A34)
		THEN relevant_evt OF A42 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A42 <-- S OF A42;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A42 = TRUE
		THEN S OF A42 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A42 = FALSE) AND (required OF A42 AND relevant_evt
		  OF A42)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A42 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A42 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A42 <-- FALSE;

OBJECT A43 IS_A or_gate;
	INTERFACE
	  sons
		= A41;
	  fathers
		= A0;
	  triggers
		= i_A74;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A43 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A74)
		THEN relevant_evt OF A43 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A43 <-- S OF A43;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A41
		THEN S OF A43 <-- TRUE;

OBJECT A45 IS_A f_leaf;
	INTERFACE
	  fathers
		= A46;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A46
		THEN required OF A45 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A46 AND (NOT S OF A46)
		THEN relevant_evt OF A45 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A45 <-- S OF A45;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A45 = TRUE
		THEN S OF A45 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A45 = FALSE) AND (required OF A45 AND relevant_evt
		  OF A45)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A45 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A45 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A45 <-- FALSE;

OBJECT A46 IS_A or_gate;
	INTERFACE
	  sons
		= A45;
	  fathers
		= A0;
	  triggers
		= i_A75;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A46 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A75)
		THEN relevant_evt OF A46 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A46 <-- S OF A46;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A45
		THEN S OF A46 <-- TRUE;

OBJECT A48 IS_A or_gate;
	INTERFACE
	  sons
		= f_A48 i_A48;
	  fathers
		= A7;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A7
		THEN required OF A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A7 AND (NOT S OF A7)
		THEN relevant_evt OF A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A48 <-- S OF A48;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A48 OR S OF i_A48
		THEN S OF A48 <-- TRUE;

OBJECT A49 IS_A or_gate;
	INTERFACE
	  sons
		= f_A49 i_A49;
	  fathers
		= A4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A4
		THEN required OF A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A4 AND (NOT S OF A4)
		THEN relevant_evt OF A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A49 <-- S OF A49;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A49 OR S OF i_A49
		THEN S OF A49 <-- TRUE;

OBJECT A50 IS_A or_gate;
	INTERFACE
	  sons
		= f_A50 i_A50;
	  fathers
		= A10;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A10
		THEN required OF A50 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A10 AND (NOT S OF A10)
		THEN relevant_evt OF A50 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A50 <-- S OF A50;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A50 OR S OF i_A50
		THEN S OF A50 <-- TRUE;

OBJECT A51 IS_A or_gate;
	INTERFACE
	  sons
		= f_A51 i_A51;
	  fathers
		= A7;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A7
		THEN required OF A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A7 AND (NOT S OF A7)
		THEN relevant_evt OF A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A51 <-- S OF A51;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A51 OR S OF i_A51
		THEN S OF A51 <-- TRUE;

OBJECT A52 IS_A or_gate;
	INTERFACE
	  sons
		= f_A52 i_A52;
	  fathers
		= A53;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A53
		THEN required OF A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A53 AND (NOT S OF A53)
		THEN relevant_evt OF A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A52 <-- S OF A52;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A52 OR S OF i_A52
		THEN S OF A52 <-- TRUE;

OBJECT A53 IS_A or_gate;
	INTERFACE
	  sons
		= A137 A52;
	  fathers
		= A76;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A76
		THEN required OF A53 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A76 AND (NOT S OF A76)
		THEN relevant_evt OF A53 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A53 <-- S OF A53;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A137 OR S OF A52
		THEN S OF A53 <-- TRUE;

OBJECT A54 IS_A or_gate;
	INTERFACE
	  sons
		= f_A54 i_A54;
	  fathers
		= A10;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A10
		THEN required OF A54 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A10 AND (NOT S OF A10)
		THEN relevant_evt OF A54 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A54 <-- S OF A54;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A54 OR S OF i_A54
		THEN S OF A54 <-- TRUE;

OBJECT A55 IS_A or_gate;
	INTERFACE
	  sons
		= f_A55 i_A55;
	  fathers
		= A16;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A16
		THEN required OF A55 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A16 AND (NOT S OF A16)
		THEN relevant_evt OF A55 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A55 <-- S OF A55;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A55 OR S OF i_A55
		THEN S OF A55 <-- TRUE;

OBJECT A56 IS_A or_gate;
	INTERFACE
	  sons
		= f_A56 i_A56;
	  fathers
		= A13;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A13
		THEN required OF A56 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A13 AND (NOT S OF A13)
		THEN relevant_evt OF A56 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A56 <-- S OF A56;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A56 OR S OF i_A56
		THEN S OF A56 <-- TRUE;

OBJECT A57 IS_A or_gate;
	INTERFACE
	  sons
		= f_A57 i_A57;
	  fathers
		= A19;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A19
		THEN required OF A57 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A19 AND (NOT S OF A19)
		THEN relevant_evt OF A57 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A57 <-- S OF A57;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A57 OR S OF i_A57
		THEN S OF A57 <-- TRUE;

OBJECT A58 IS_A or_gate;
	INTERFACE
	  sons
		= f_A58 i_A58;
	  fathers
		= A16;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A16
		THEN required OF A58 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A16 AND (NOT S OF A16)
		THEN relevant_evt OF A58 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A58 <-- S OF A58;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A58 OR S OF i_A58
		THEN S OF A58 <-- TRUE;

OBJECT A59 IS_A or_gate;
	INTERFACE
	  sons
		= f_A59 i_A59;
	  fathers
		= A60;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A60
		THEN required OF A59 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A60 AND (NOT S OF A60)
		THEN relevant_evt OF A59 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A59 <-- S OF A59;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A59 OR S OF i_A59
		THEN S OF A59 <-- TRUE;

OBJECT A6 IS_A f_leaf;
	INTERFACE
	  fathers
		= A7;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A7
		THEN required OF A6 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A7 AND (NOT S OF A7)
		THEN relevant_evt OF A6 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A6 <-- S OF A6;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A6 = TRUE
		THEN S OF A6 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A6 = FALSE) AND (required OF A6 AND relevant_evt
		  OF A6)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A6 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A6 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A6 <-- FALSE;

OBJECT A60 IS_A or_gate;
	INTERFACE
	  sons
		= A137 A59;
	  fathers
		= A76;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A76
		THEN required OF A60 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A76 AND (NOT S OF A76)
		THEN relevant_evt OF A60 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A60 <-- S OF A60;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A137 OR S OF A59
		THEN S OF A60 <-- TRUE;

OBJECT A61 IS_A or_gate;
	INTERFACE
	  sons
		= f_A61 i_A61;
	  fathers
		= A19;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A19
		THEN required OF A61 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A19 AND (NOT S OF A19)
		THEN relevant_evt OF A61 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A61 <-- S OF A61;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A61 OR S OF i_A61
		THEN S OF A61 <-- TRUE;

OBJECT A62 IS_A or_gate;
	INTERFACE
	  sons
		= f_A62 i_A62;
	  fathers
		= A25;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A25
		THEN required OF A62 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A25 AND (NOT S OF A25)
		THEN relevant_evt OF A62 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A62 <-- S OF A62;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A62 OR S OF i_A62
		THEN S OF A62 <-- TRUE;

OBJECT A63 IS_A or_gate;
	INTERFACE
	  sons
		= f_A63 i_A63;
	  fathers
		= A22;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A22
		THEN required OF A63 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A22 AND (NOT S OF A22)
		THEN relevant_evt OF A63 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A63 <-- S OF A63;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A63 OR S OF i_A63
		THEN S OF A63 <-- TRUE;

OBJECT A64 IS_A or_gate;
	INTERFACE
	  sons
		= f_A64 i_A64;
	  fathers
		= A28;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A28
		THEN required OF A64 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A28 AND (NOT S OF A28)
		THEN relevant_evt OF A64 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A64 <-- S OF A64;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A64 OR S OF i_A64
		THEN S OF A64 <-- TRUE;

OBJECT A65 IS_A or_gate;
	INTERFACE
	  sons
		= f_A65 i_A65;
	  fathers
		= A25;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A25
		THEN required OF A65 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A25 AND (NOT S OF A25)
		THEN relevant_evt OF A65 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A65 <-- S OF A65;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A65 OR S OF i_A65
		THEN S OF A65 <-- TRUE;

OBJECT A66 IS_A or_gate;
	INTERFACE
	  sons
		= f_A66 i_A66;
	  fathers
		= A67;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A67
		THEN required OF A66 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A67 AND (NOT S OF A67)
		THEN relevant_evt OF A66 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A66 <-- S OF A66;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A66 OR S OF i_A66
		THEN S OF A66 <-- TRUE;

OBJECT A67 IS_A or_gate;
	INTERFACE
	  sons
		= A137 A66;
	  fathers
		= A76;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A76
		THEN required OF A67 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A76 AND (NOT S OF A76)
		THEN relevant_evt OF A67 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A67 <-- S OF A67;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A137 OR S OF A66
		THEN S OF A67 <-- TRUE;

OBJECT A68 IS_A or_gate;
	INTERFACE
	  sons
		= f_A68 i_A68;
	  fathers
		= A28;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A28
		THEN required OF A68 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A28 AND (NOT S OF A28)
		THEN relevant_evt OF A68 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A68 <-- S OF A68;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A68 OR S OF i_A68
		THEN S OF A68 <-- TRUE;

OBJECT A69 IS_A or_gate;
	INTERFACE
	  sons
		= f_A69 i_A69;
	  fathers
		= A4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A4
		THEN required OF A69 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A4 AND (NOT S OF A4)
		THEN relevant_evt OF A69 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A69 <-- S OF A69;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A69 OR S OF i_A69
		THEN S OF A69 <-- TRUE;

OBJECT A7 IS_A or_gate;
	INTERFACE
	  sons
		= A48 A51 A6 A93;
	  fathers
		= A79;
	  triggers
		= i_A49 i_A50;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A79
		THEN required OF A7 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A79 AND (NOT S OF A79)) OR ((NOT S OF i_A49)
		   OR (NOT S OF i_A50))
		THEN relevant_evt OF A7 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A7 <-- S OF A7;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A48 OR S OF A51) OR S OF A6) OR S OF A93
		THEN S OF A7 <-- TRUE;

OBJECT A70 IS_A or_gate;
	INTERFACE
	  sons
		= f_A70 i_A70;
	  fathers
		= A13;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A13
		THEN required OF A70 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A13 AND (NOT S OF A13)
		THEN relevant_evt OF A70 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A70 <-- S OF A70;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A70 OR S OF i_A70
		THEN S OF A70 <-- TRUE;

OBJECT A71 IS_A or_gate;
	INTERFACE
	  sons
		= f_A71 i_A71;
	  fathers
		= A22;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A22
		THEN required OF A71 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A22 AND (NOT S OF A22)
		THEN relevant_evt OF A71 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A71 <-- S OF A71;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A71 OR S OF i_A71
		THEN S OF A71 <-- TRUE;

OBJECT A72 IS_A or_gate;
	INTERFACE
	  sons
		= f_A72 i_A72;
	  fathers
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A31
		THEN required OF A72 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A31 AND (NOT S OF A31)
		THEN relevant_evt OF A72 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A72 <-- S OF A72;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A72 OR S OF i_A72
		THEN S OF A72 <-- TRUE;

OBJECT A73 IS_A or_gate;
	INTERFACE
	  sons
		= f_A73 i_A73;
	  fathers
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A31
		THEN required OF A73 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A31 AND (NOT S OF A31)
		THEN relevant_evt OF A73 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A73 <-- S OF A73;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A73 OR S OF i_A73
		THEN S OF A73 <-- TRUE;

OBJECT A74 IS_A or_gate;
	INTERFACE
	  sons
		= f_A74 i_A74;
	  fathers
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A31
		THEN required OF A74 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A31 AND (NOT S OF A31)
		THEN relevant_evt OF A74 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A74 <-- S OF A74;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A74 OR S OF i_A74
		THEN S OF A74 <-- TRUE;

OBJECT A75 IS_A or_gate;
	INTERFACE
	  sons
		= f_A75 i_A75;
	  fathers
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A31
		THEN required OF A75 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A31 AND (NOT S OF A31)
		THEN relevant_evt OF A75 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A75 <-- S OF A75;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A75 OR S OF i_A75
		THEN S OF A75 <-- TRUE;

OBJECT A76 IS_A k_out_of_n_gate;
	INTERFACE
	  sons
		= A53 A60 A67;
	  fathers
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  K
		DOMAIN INTEGER
		= 2;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A31
		THEN required OF A76 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A31 AND (NOT S OF A31)
		THEN relevant_evt OF A76 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A76 <-- S OF A76;
	  xx27
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (AT_LEAST 2 WITHIN (S OF A53, S OF A60, S OF A67))
		THEN S OF A76 <-- TRUE;

OBJECT A77 IS_A f_leaf;
	INTERFACE
	  fathers
		= A34;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A34
		THEN required OF A77 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A34 AND (NOT S OF A34)
		THEN relevant_evt OF A77 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A77 <-- S OF A77;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A77 = TRUE
		THEN S OF A77 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A77 = FALSE) AND (required OF A77 AND relevant_evt
		  OF A77)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A77 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A77 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A77 <-- FALSE;

OBJECT A78 IS_A f_leaf;
	INTERFACE
	  fathers
		= A34;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A34
		THEN required OF A78 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A34 AND (NOT S OF A34)
		THEN relevant_evt OF A78 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A78 <-- S OF A78;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A78 = TRUE
		THEN S OF A78 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A78 = FALSE) AND (required OF A78 AND relevant_evt
		  OF A78)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A78 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A78 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A78 <-- FALSE;

OBJECT A79 IS_A or_gate;
	INTERFACE
	  sons
		= A10 A4 A7;
	  fathers
		= A82;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A82
		THEN required OF A79 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A82 AND (NOT S OF A82)
		THEN relevant_evt OF A79 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A79 <-- S OF A79;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (S OF A10 OR S OF A4) OR S OF A7
		THEN S OF A79 <-- TRUE;

OBJECT A80 IS_A or_gate;
	INTERFACE
	  sons
		= A13 A16 A19;
	  fathers
		= A82;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A82
		THEN required OF A80 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A82 AND (NOT S OF A82)
		THEN relevant_evt OF A80 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A80 <-- S OF A80;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (S OF A13 OR S OF A16) OR S OF A19
		THEN S OF A80 <-- TRUE;

OBJECT A81 IS_A or_gate;
	INTERFACE
	  sons
		= A22 A25 A28;
	  fathers
		= A82;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A82
		THEN required OF A81 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A82 AND (NOT S OF A82)
		THEN relevant_evt OF A81 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A81 <-- S OF A81;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (S OF A22 OR S OF A25) OR S OF A28
		THEN S OF A81 <-- TRUE;

OBJECT A82 IS_A k_out_of_n_gate;
	INTERFACE
	  sons
		= A79 A80 A81;
	  fathers
		= A0;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  K
		DOMAIN INTEGER
		= 2;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A82 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A0 AND (NOT S OF A0)
		THEN relevant_evt OF A82 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A82 <-- S OF A82;
	  xx27
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (AT_LEAST 2 WITHIN (S OF A79, S OF A80, S OF A81))
		THEN S OF A82 <-- TRUE;

OBJECT A83 IS_A f_leaf;
	INTERFACE
	  fathers
		= A86;
	  triggered_by
		= A85;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A85
		THEN required OF A83 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A86 AND (NOT S OF A86)
		THEN relevant_evt OF A83 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A83 <-- S OF A83;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A83 = TRUE
		THEN S OF A83 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A83 = FALSE) AND (required OF A83 AND relevant_evt
		  OF A83)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9e-05)
		  INDUCING failF OF A83 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A83 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A83 <-- FALSE;

OBJECT A84 IS_A f_leaf;
	INTERFACE
	  fathers
		= A93;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A93
		THEN required OF A84 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A93 AND (NOT S OF A93)
		THEN relevant_evt OF A84 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A84 <-- S OF A84;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A84 = TRUE
		THEN S OF A84 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A84 = FALSE) AND (required OF A84 AND relevant_evt
		  OF A84)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A84 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A84 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A84 <-- FALSE;

OBJECT A85 IS_A f_leaf;
	INTERFACE
	  fathers
		= A86;
	  triggers
		= A83;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A86
		THEN required OF A85 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A86 AND (NOT S OF A86)) OR (NOT S OF A83)
		THEN relevant_evt OF A85 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A85 <-- S OF A85;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A85 = TRUE
		THEN S OF A85 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A85 = FALSE) AND (required OF A85 AND relevant_evt
		  OF A85)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A85 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A85 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A85 <-- FALSE;

OBJECT A86 IS_A and_gate;
	INTERFACE
	  sons
		= A83 A85;
	  fathers
		= A93;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A93
		THEN required OF A86 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A93 AND (NOT S OF A93)
		THEN relevant_evt OF A86 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A86 <-- S OF A86;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A83 AND S OF A85
		THEN S OF A86 <-- TRUE;

OBJECT A88 IS_A f_leaf;
	INTERFACE
	  fathers
		= A91;
	  triggered_by
		= A90;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A90
		THEN required OF A88 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A91 AND (NOT S OF A91)
		THEN relevant_evt OF A88 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A88 <-- S OF A88;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A88 = TRUE
		THEN S OF A88 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A88 = FALSE) AND (required OF A88 AND relevant_evt
		  OF A88)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9e-06)
		  INDUCING failF OF A88 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A88 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A88 <-- FALSE;

OBJECT A89 IS_A f_leaf;
	INTERFACE
	  fathers
		= A93;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A93
		THEN required OF A89 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A93 AND (NOT S OF A93)
		THEN relevant_evt OF A89 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A89 <-- S OF A89;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A89 = TRUE
		THEN S OF A89 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A89 = FALSE) AND (required OF A89 AND relevant_evt
		  OF A89)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A89 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A89 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A89 <-- FALSE;

OBJECT A9 IS_A f_leaf;
	INTERFACE
	  fathers
		= A10;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A10
		THEN required OF A9 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A10 AND (NOT S OF A10)
		THEN relevant_evt OF A9 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A9 <-- S OF A9;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A9 = TRUE
		THEN S OF A9 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A9 = FALSE) AND (required OF A9 AND relevant_evt
		  OF A9)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A9 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A9 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A9 <-- FALSE;

OBJECT A90 IS_A f_leaf;
	INTERFACE
	  fathers
		= A91;
	  triggers
		= A88;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A91
		THEN required OF A90 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A91 AND (NOT S OF A91)) OR (NOT S OF A88)
		THEN relevant_evt OF A90 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A90 <-- S OF A90;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A90 = TRUE
		THEN S OF A90 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A90 = FALSE) AND (required OF A90 AND relevant_evt
		  OF A90)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A90 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A90 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A90 <-- FALSE;

OBJECT A91 IS_A and_gate;
	INTERFACE
	  sons
		= A88 A90;
	  fathers
		= A93;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A93
		THEN required OF A91 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A93 AND (NOT S OF A93)
		THEN relevant_evt OF A91 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A91 <-- S OF A91;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A88 AND S OF A90
		THEN S OF A91 <-- TRUE;

OBJECT A93 IS_A or_gate;
	INTERFACE
	  sons
		= A84 A86 A89 A91;
	  fathers
		= A10 A4 A7;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((NOT required OF A10) AND (NOT required OF A4)) AND (NOT
		  required OF A7)
		THEN required OF A93 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((relevant_evt OF A10 AND (NOT S OF A10)) OR (relevant_evt
		  OF A4 AND (NOT S OF A4))) OR (relevant_evt OF A7 AND (NOT S
		  OF A7))
		THEN relevant_evt OF A93 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A93 <-- S OF A93;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A84 OR S OF A86) OR S OF A89) OR S OF A91
		THEN S OF A93 <-- TRUE;

OBJECT A94 IS_A f_leaf;
	INTERFACE
	  fathers
		= A97;
	  triggered_by
		= A96;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A96
		THEN required OF A94 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A97 AND (NOT S OF A97)
		THEN relevant_evt OF A94 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A94 <-- S OF A94;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A94 = TRUE
		THEN S OF A94 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A94 = FALSE) AND (required OF A94 AND relevant_evt
		  OF A94)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9e-05)
		  INDUCING failF OF A94 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A94 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A94 <-- FALSE;

OBJECT A95 IS_A f_leaf;
	INTERFACE
	  fathers
		= A104;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A104
		THEN required OF A95 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A104 AND (NOT S OF A104)
		THEN relevant_evt OF A95 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A95 <-- S OF A95;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A95 = TRUE
		THEN S OF A95 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A95 = FALSE) AND (required OF A95 AND relevant_evt
		  OF A95)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A95 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A95 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A95 <-- FALSE;

OBJECT A96 IS_A f_leaf;
	INTERFACE
	  fathers
		= A97;
	  triggers
		= A94;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A97
		THEN required OF A96 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A97 AND (NOT S OF A97)) OR (NOT S OF A94)
		THEN relevant_evt OF A96 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A96 <-- S OF A96;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A96 = TRUE
		THEN S OF A96 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A96 = FALSE) AND (required OF A96 AND relevant_evt
		  OF A96)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A96 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A96 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A96 <-- FALSE;

OBJECT A97 IS_A and_gate;
	INTERFACE
	  sons
		= A94 A96;
	  fathers
		= A104;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A104
		THEN required OF A97 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A104 AND (NOT S OF A104)
		THEN relevant_evt OF A97 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A97 <-- S OF A97;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A94 AND S OF A96
		THEN S OF A97 <-- TRUE;

OBJECT A99 IS_A f_leaf;
	INTERFACE
	  fathers
		= A102;
	  triggered_by
		= A101;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A101
		THEN required OF A99 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A102 AND (NOT S OF A102)
		THEN relevant_evt OF A99 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A99 <-- S OF A99;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A99 = TRUE
		THEN S OF A99 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A99 = FALSE) AND (required OF A99 AND relevant_evt
		  OF A99)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9e-06)
		  INDUCING failF OF A99 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A99 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A99 <-- FALSE;

OBJECT UE_1 IS_A undes_event;
	INTERFACE
	  sons
		= A0;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		THEN relevant_evt OF UE_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF UE_1 <-- S OF UE_1;
	  xx34
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A0
		THEN S OF UE_1 <-- TRUE;

OBJECT f_A48 IS_A f_leaf;
	INTERFACE
	  fathers
		= A48;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A48
		THEN required OF f_A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A48 AND (NOT S OF A48)
		THEN relevant_evt OF f_A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A48 <-- S OF f_A48;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A48 = TRUE
		THEN S OF f_A48 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A48 = FALSE) AND (required OF f_A48 AND
		  relevant_evt OF f_A48)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A48 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A48 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A48 <-- FALSE;

OBJECT f_A49 IS_A f_leaf;
	INTERFACE
	  fathers
		= A49;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A49
		THEN required OF f_A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A49 AND (NOT S OF A49)
		THEN relevant_evt OF f_A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A49 <-- S OF f_A49;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A49 = TRUE
		THEN S OF f_A49 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A49 = FALSE) AND (required OF f_A49 AND
		  relevant_evt OF f_A49)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A49 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A49 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A49 <-- FALSE;

OBJECT f_A50 IS_A f_leaf;
	INTERFACE
	  fathers
		= A50;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A50
		THEN required OF f_A50 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A50 AND (NOT S OF A50)
		THEN relevant_evt OF f_A50 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A50 <-- S OF f_A50;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A50 = TRUE
		THEN S OF f_A50 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A50 = FALSE) AND (required OF f_A50 AND
		  relevant_evt OF f_A50)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A50 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A50 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A50 <-- FALSE;

OBJECT f_A51 IS_A f_leaf;
	INTERFACE
	  fathers
		= A51;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A51
		THEN required OF f_A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A51 AND (NOT S OF A51)
		THEN relevant_evt OF f_A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A51 <-- S OF f_A51;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A51 = TRUE
		THEN S OF f_A51 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A51 = FALSE) AND (required OF f_A51 AND
		  relevant_evt OF f_A51)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A51 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A51 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A51 <-- FALSE;

OBJECT f_A52 IS_A f_leaf;
	INTERFACE
	  fathers
		= A52;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A52
		THEN required OF f_A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A52 AND (NOT S OF A52)
		THEN relevant_evt OF f_A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A52 <-- S OF f_A52;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A52 = TRUE
		THEN S OF f_A52 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A52 = FALSE) AND (required OF f_A52 AND
		  relevant_evt OF f_A52)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A52 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A52 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A52 <-- FALSE;

OBJECT f_A54 IS_A f_leaf;
	INTERFACE
	  fathers
		= A54;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A54
		THEN required OF f_A54 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A54 AND (NOT S OF A54)
		THEN relevant_evt OF f_A54 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A54 <-- S OF f_A54;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A54 = TRUE
		THEN S OF f_A54 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A54 = FALSE) AND (required OF f_A54 AND
		  relevant_evt OF f_A54)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A54 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A54 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A54 <-- FALSE;

OBJECT f_A55 IS_A f_leaf;
	INTERFACE
	  fathers
		= A55;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A55
		THEN required OF f_A55 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A55 AND (NOT S OF A55)
		THEN relevant_evt OF f_A55 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A55 <-- S OF f_A55;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A55 = TRUE
		THEN S OF f_A55 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A55 = FALSE) AND (required OF f_A55 AND
		  relevant_evt OF f_A55)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A55 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A55 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A55 <-- FALSE;

OBJECT f_A56 IS_A f_leaf;
	INTERFACE
	  fathers
		= A56;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A56
		THEN required OF f_A56 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A56 AND (NOT S OF A56)
		THEN relevant_evt OF f_A56 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A56 <-- S OF f_A56;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A56 = TRUE
		THEN S OF f_A56 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A56 = FALSE) AND (required OF f_A56 AND
		  relevant_evt OF f_A56)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A56 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A56 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A56 <-- FALSE;

OBJECT f_A57 IS_A f_leaf;
	INTERFACE
	  fathers
		= A57;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A57
		THEN required OF f_A57 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A57 AND (NOT S OF A57)
		THEN relevant_evt OF f_A57 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A57 <-- S OF f_A57;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A57 = TRUE
		THEN S OF f_A57 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A57 = FALSE) AND (required OF f_A57 AND
		  relevant_evt OF f_A57)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A57 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A57 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A57 <-- FALSE;

OBJECT f_A58 IS_A f_leaf;
	INTERFACE
	  fathers
		= A58;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A58
		THEN required OF f_A58 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A58 AND (NOT S OF A58)
		THEN relevant_evt OF f_A58 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A58 <-- S OF f_A58;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A58 = TRUE
		THEN S OF f_A58 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A58 = FALSE) AND (required OF f_A58 AND
		  relevant_evt OF f_A58)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A58 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A58 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A58 <-- FALSE;

OBJECT f_A59 IS_A f_leaf;
	INTERFACE
	  fathers
		= A59;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A59
		THEN required OF f_A59 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A59 AND (NOT S OF A59)
		THEN relevant_evt OF f_A59 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A59 <-- S OF f_A59;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A59 = TRUE
		THEN S OF f_A59 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A59 = FALSE) AND (required OF f_A59 AND
		  relevant_evt OF f_A59)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A59 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A59 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A59 <-- FALSE;

OBJECT f_A61 IS_A f_leaf;
	INTERFACE
	  fathers
		= A61;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A61
		THEN required OF f_A61 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A61 AND (NOT S OF A61)
		THEN relevant_evt OF f_A61 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A61 <-- S OF f_A61;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A61 = TRUE
		THEN S OF f_A61 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A61 = FALSE) AND (required OF f_A61 AND
		  relevant_evt OF f_A61)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A61 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A61 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A61 <-- FALSE;

OBJECT f_A62 IS_A f_leaf;
	INTERFACE
	  fathers
		= A62;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A62
		THEN required OF f_A62 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A62 AND (NOT S OF A62)
		THEN relevant_evt OF f_A62 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A62 <-- S OF f_A62;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A62 = TRUE
		THEN S OF f_A62 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A62 = FALSE) AND (required OF f_A62 AND
		  relevant_evt OF f_A62)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A62 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A62 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A62 <-- FALSE;

OBJECT f_A63 IS_A f_leaf;
	INTERFACE
	  fathers
		= A63;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A63
		THEN required OF f_A63 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A63 AND (NOT S OF A63)
		THEN relevant_evt OF f_A63 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A63 <-- S OF f_A63;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A63 = TRUE
		THEN S OF f_A63 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A63 = FALSE) AND (required OF f_A63 AND
		  relevant_evt OF f_A63)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A63 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A63 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A63 <-- FALSE;

OBJECT f_A64 IS_A f_leaf;
	INTERFACE
	  fathers
		= A64;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A64
		THEN required OF f_A64 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A64 AND (NOT S OF A64)
		THEN relevant_evt OF f_A64 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A64 <-- S OF f_A64;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A64 = TRUE
		THEN S OF f_A64 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A64 = FALSE) AND (required OF f_A64 AND
		  relevant_evt OF f_A64)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A64 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A64 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A64 <-- FALSE;

OBJECT f_A65 IS_A f_leaf;
	INTERFACE
	  fathers
		= A65;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A65
		THEN required OF f_A65 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A65 AND (NOT S OF A65)
		THEN relevant_evt OF f_A65 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A65 <-- S OF f_A65;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A65 = TRUE
		THEN S OF f_A65 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A65 = FALSE) AND (required OF f_A65 AND
		  relevant_evt OF f_A65)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A65 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A65 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A65 <-- FALSE;

OBJECT f_A66 IS_A f_leaf;
	INTERFACE
	  fathers
		= A66;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A66
		THEN required OF f_A66 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A66 AND (NOT S OF A66)
		THEN relevant_evt OF f_A66 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A66 <-- S OF f_A66;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A66 = TRUE
		THEN S OF f_A66 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A66 = FALSE) AND (required OF f_A66 AND
		  relevant_evt OF f_A66)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A66 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A66 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A66 <-- FALSE;

OBJECT f_A68 IS_A f_leaf;
	INTERFACE
	  fathers
		= A68;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A68
		THEN required OF f_A68 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A68 AND (NOT S OF A68)
		THEN relevant_evt OF f_A68 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A68 <-- S OF f_A68;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A68 = TRUE
		THEN S OF f_A68 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A68 = FALSE) AND (required OF f_A68 AND
		  relevant_evt OF f_A68)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A68 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A68 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A68 <-- FALSE;

OBJECT f_A69 IS_A f_leaf;
	INTERFACE
	  fathers
		= A69;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A69
		THEN required OF f_A69 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A69 AND (NOT S OF A69)
		THEN relevant_evt OF f_A69 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A69 <-- S OF f_A69;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A69 = TRUE
		THEN S OF f_A69 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A69 = FALSE) AND (required OF f_A69 AND
		  relevant_evt OF f_A69)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A69 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A69 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A69 <-- FALSE;

OBJECT f_A70 IS_A f_leaf;
	INTERFACE
	  fathers
		= A70;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A70
		THEN required OF f_A70 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A70 AND (NOT S OF A70)
		THEN relevant_evt OF f_A70 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A70 <-- S OF f_A70;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A70 = TRUE
		THEN S OF f_A70 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A70 = FALSE) AND (required OF f_A70 AND
		  relevant_evt OF f_A70)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A70 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A70 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A70 <-- FALSE;

OBJECT f_A71 IS_A f_leaf;
	INTERFACE
	  fathers
		= A71;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A71
		THEN required OF f_A71 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A71 AND (NOT S OF A71)
		THEN relevant_evt OF f_A71 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A71 <-- S OF f_A71;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A71 = TRUE
		THEN S OF f_A71 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A71 = FALSE) AND (required OF f_A71 AND
		  relevant_evt OF f_A71)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A71 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A71 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A71 <-- FALSE;

OBJECT f_A72 IS_A f_leaf;
	INTERFACE
	  fathers
		= A72;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A72
		THEN required OF f_A72 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A72 AND (NOT S OF A72)
		THEN relevant_evt OF f_A72 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A72 <-- S OF f_A72;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A72 = TRUE
		THEN S OF f_A72 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A72 = FALSE) AND (required OF f_A72 AND
		  relevant_evt OF f_A72)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A72 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A72 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A72 <-- FALSE;

OBJECT f_A73 IS_A f_leaf;
	INTERFACE
	  fathers
		= A73;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A73
		THEN required OF f_A73 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A73 AND (NOT S OF A73)
		THEN relevant_evt OF f_A73 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A73 <-- S OF f_A73;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A73 = TRUE
		THEN S OF f_A73 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A73 = FALSE) AND (required OF f_A73 AND
		  relevant_evt OF f_A73)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A73 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A73 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A73 <-- FALSE;

OBJECT f_A74 IS_A f_leaf;
	INTERFACE
	  fathers
		= A74;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A74
		THEN required OF f_A74 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A74 AND (NOT S OF A74)
		THEN relevant_evt OF f_A74 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A74 <-- S OF f_A74;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A74 = TRUE
		THEN S OF f_A74 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A74 = FALSE) AND (required OF f_A74 AND
		  relevant_evt OF f_A74)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A74 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A74 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A74 <-- FALSE;

OBJECT f_A75 IS_A f_leaf;
	INTERFACE
	  fathers
		= A75;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A75
		THEN required OF f_A75 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A75 AND (NOT S OF A75)
		THEN relevant_evt OF f_A75 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A75 <-- S OF f_A75;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A75 = TRUE
		THEN S OF f_A75 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A75 = FALSE) AND (required OF f_A75 AND
		  relevant_evt OF f_A75)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A75 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A75 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A75 <-- FALSE;

OBJECT i_A48 IS_A i_leaf;
	INTERFACE
	  fathers
		= A48;
	  triggered_by
		= A4;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A48) OR (NOT S OF A4)
		THEN required OF i_A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A48 AND (NOT S OF A48)
		THEN relevant_evt OF i_A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A48 <-- S OF i_A48;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A48 = TRUE
		THEN S OF i_A48 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A48) AND ((NOT already_standby OF i_A48)
		  AND (NOT already_required OF i_A48))
		THEN already_standby OF i_A48 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A48 AND already_standby OF i_A48
		THEN to_be_fired OF i_A48 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A48 = FALSE) AND (to_be_fired OF i_A48 AND
		  relevant_evt OF i_A48)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A48 <-- TRUE,
			already_standby OF i_A48 <-- FALSE,
			already_required OF i_A48 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A48 <-- FALSE,
			already_required OF i_A48 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A48 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A48 <-- FALSE;

OBJECT i_A49 IS_A i_leaf;
	INTERFACE
	  fathers
		= A49;
	  triggered_by
		= A7;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A49) OR (NOT S OF A7)
		THEN required OF i_A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A49 AND (NOT S OF A49)
		THEN relevant_evt OF i_A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A49 <-- S OF i_A49;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A49 = TRUE
		THEN S OF i_A49 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A49) AND ((NOT already_standby OF i_A49)
		  AND (NOT already_required OF i_A49))
		THEN already_standby OF i_A49 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A49 AND already_standby OF i_A49
		THEN to_be_fired OF i_A49 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A49 = FALSE) AND (to_be_fired OF i_A49 AND
		  relevant_evt OF i_A49)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A49 <-- TRUE,
			already_standby OF i_A49 <-- FALSE,
			already_required OF i_A49 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A49 <-- FALSE,
			already_required OF i_A49 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A49 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A49 <-- FALSE;

OBJECT i_A50 IS_A i_leaf;
	INTERFACE
	  fathers
		= A50;
	  triggered_by
		= A7;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A50) OR (NOT S OF A7)
		THEN required OF i_A50 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A50 AND (NOT S OF A50)
		THEN relevant_evt OF i_A50 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A50 <-- S OF i_A50;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A50 = TRUE
		THEN S OF i_A50 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A50) AND ((NOT already_standby OF i_A50)
		  AND (NOT already_required OF i_A50))
		THEN already_standby OF i_A50 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A50 AND already_standby OF i_A50
		THEN to_be_fired OF i_A50 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A50 = FALSE) AND (to_be_fired OF i_A50 AND
		  relevant_evt OF i_A50)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A50 <-- TRUE,
			already_standby OF i_A50 <-- FALSE,
			already_required OF i_A50 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A50 <-- FALSE,
			already_required OF i_A50 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A50 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A50 <-- FALSE;

OBJECT i_A51 IS_A i_leaf;
	INTERFACE
	  fathers
		= A51;
	  triggered_by
		= A10;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A51) OR (NOT S OF A10)
		THEN required OF i_A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A51 AND (NOT S OF A51)
		THEN relevant_evt OF i_A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A51 <-- S OF i_A51;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A51 = TRUE
		THEN S OF i_A51 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A51) AND ((NOT already_standby OF i_A51)
		  AND (NOT already_required OF i_A51))
		THEN already_standby OF i_A51 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A51 AND already_standby OF i_A51
		THEN to_be_fired OF i_A51 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A51 = FALSE) AND (to_be_fired OF i_A51 AND
		  relevant_evt OF i_A51)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A51 <-- TRUE,
			already_standby OF i_A51 <-- FALSE,
			already_required OF i_A51 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A51 <-- FALSE,
			already_required OF i_A51 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A51 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A51 <-- FALSE;

OBJECT i_A52 IS_A i_leaf;
	INTERFACE
	  fathers
		= A52;
	  triggered_by
		= A10;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A52) OR (NOT S OF A10)
		THEN required OF i_A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A52 AND (NOT S OF A52)
		THEN relevant_evt OF i_A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A52 <-- S OF i_A52;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A52 = TRUE
		THEN S OF i_A52 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A52) AND ((NOT already_standby OF i_A52)
		  AND (NOT already_required OF i_A52))
		THEN already_standby OF i_A52 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A52 AND already_standby OF i_A52
		THEN to_be_fired OF i_A52 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A52 = FALSE) AND (to_be_fired OF i_A52 AND
		  relevant_evt OF i_A52)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A52 <-- TRUE,
			already_standby OF i_A52 <-- FALSE,
			already_required OF i_A52 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A52 <-- FALSE,
			already_required OF i_A52 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A52 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A52 <-- FALSE;

OBJECT i_A54 IS_A i_leaf;
	INTERFACE
	  fathers
		= A54;
	  triggered_by
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A54) OR (NOT S OF A31)
		THEN required OF i_A54 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A54 AND (NOT S OF A54)
		THEN relevant_evt OF i_A54 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A54 <-- S OF i_A54;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A54 = TRUE
		THEN S OF i_A54 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A54) AND ((NOT already_standby OF i_A54)
		  AND (NOT already_required OF i_A54))
		THEN already_standby OF i_A54 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A54 AND already_standby OF i_A54
		THEN to_be_fired OF i_A54 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A54 = FALSE) AND (to_be_fired OF i_A54 AND
		  relevant_evt OF i_A54)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A54 <-- TRUE,
			already_standby OF i_A54 <-- FALSE,
			already_required OF i_A54 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A54 <-- FALSE,
			already_required OF i_A54 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A54 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A54 <-- FALSE;

OBJECT i_A55 IS_A i_leaf;
	INTERFACE
	  fathers
		= A55;
	  triggered_by
		= A13;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A55) OR (NOT S OF A13)
		THEN required OF i_A55 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A55 AND (NOT S OF A55)
		THEN relevant_evt OF i_A55 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A55 <-- S OF i_A55;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A55 = TRUE
		THEN S OF i_A55 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A55) AND ((NOT already_standby OF i_A55)
		  AND (NOT already_required OF i_A55))
		THEN already_standby OF i_A55 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A55 AND already_standby OF i_A55
		THEN to_be_fired OF i_A55 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A55 = FALSE) AND (to_be_fired OF i_A55 AND
		  relevant_evt OF i_A55)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A55 <-- TRUE,
			already_standby OF i_A55 <-- FALSE,
			already_required OF i_A55 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A55 <-- FALSE,
			already_required OF i_A55 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A55 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A55 <-- FALSE;

OBJECT i_A56 IS_A i_leaf;
	INTERFACE
	  fathers
		= A56;
	  triggered_by
		= A16;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A56) OR (NOT S OF A16)
		THEN required OF i_A56 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A56 AND (NOT S OF A56)
		THEN relevant_evt OF i_A56 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A56 <-- S OF i_A56;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A56 = TRUE
		THEN S OF i_A56 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A56) AND ((NOT already_standby OF i_A56)
		  AND (NOT already_required OF i_A56))
		THEN already_standby OF i_A56 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A56 AND already_standby OF i_A56
		THEN to_be_fired OF i_A56 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A56 = FALSE) AND (to_be_fired OF i_A56 AND
		  relevant_evt OF i_A56)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A56 <-- TRUE,
			already_standby OF i_A56 <-- FALSE,
			already_required OF i_A56 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A56 <-- FALSE,
			already_required OF i_A56 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A56 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A56 <-- FALSE;

OBJECT i_A57 IS_A i_leaf;
	INTERFACE
	  fathers
		= A57;
	  triggered_by
		= A16;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A57) OR (NOT S OF A16)
		THEN required OF i_A57 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A57 AND (NOT S OF A57)
		THEN relevant_evt OF i_A57 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A57 <-- S OF i_A57;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A57 = TRUE
		THEN S OF i_A57 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A57) AND ((NOT already_standby OF i_A57)
		  AND (NOT already_required OF i_A57))
		THEN already_standby OF i_A57 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A57 AND already_standby OF i_A57
		THEN to_be_fired OF i_A57 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A57 = FALSE) AND (to_be_fired OF i_A57 AND
		  relevant_evt OF i_A57)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A57 <-- TRUE,
			already_standby OF i_A57 <-- FALSE,
			already_required OF i_A57 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A57 <-- FALSE,
			already_required OF i_A57 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A57 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A57 <-- FALSE;

OBJECT i_A58 IS_A i_leaf;
	INTERFACE
	  fathers
		= A58;
	  triggered_by
		= A19;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A58) OR (NOT S OF A19)
		THEN required OF i_A58 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A58 AND (NOT S OF A58)
		THEN relevant_evt OF i_A58 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A58 <-- S OF i_A58;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A58 = TRUE
		THEN S OF i_A58 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A58) AND ((NOT already_standby OF i_A58)
		  AND (NOT already_required OF i_A58))
		THEN already_standby OF i_A58 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A58 AND already_standby OF i_A58
		THEN to_be_fired OF i_A58 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A58 = FALSE) AND (to_be_fired OF i_A58 AND
		  relevant_evt OF i_A58)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A58 <-- TRUE,
			already_standby OF i_A58 <-- FALSE,
			already_required OF i_A58 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A58 <-- FALSE,
			already_required OF i_A58 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A58 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A58 <-- FALSE;

OBJECT i_A59 IS_A i_leaf;
	INTERFACE
	  fathers
		= A59;
	  triggered_by
		= A19;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A59) OR (NOT S OF A19)
		THEN required OF i_A59 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A59 AND (NOT S OF A59)
		THEN relevant_evt OF i_A59 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A59 <-- S OF i_A59;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A59 = TRUE
		THEN S OF i_A59 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A59) AND ((NOT already_standby OF i_A59)
		  AND (NOT already_required OF i_A59))
		THEN already_standby OF i_A59 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A59 AND already_standby OF i_A59
		THEN to_be_fired OF i_A59 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A59 = FALSE) AND (to_be_fired OF i_A59 AND
		  relevant_evt OF i_A59)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A59 <-- TRUE,
			already_standby OF i_A59 <-- FALSE,
			already_required OF i_A59 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A59 <-- FALSE,
			already_required OF i_A59 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A59 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A59 <-- FALSE;

OBJECT i_A61 IS_A i_leaf;
	INTERFACE
	  fathers
		= A61;
	  triggered_by
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A61) OR (NOT S OF A31)
		THEN required OF i_A61 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A61 AND (NOT S OF A61)
		THEN relevant_evt OF i_A61 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A61 <-- S OF i_A61;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A61 = TRUE
		THEN S OF i_A61 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A61) AND ((NOT already_standby OF i_A61)
		  AND (NOT already_required OF i_A61))
		THEN already_standby OF i_A61 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A61 AND already_standby OF i_A61
		THEN to_be_fired OF i_A61 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A61 = FALSE) AND (to_be_fired OF i_A61 AND
		  relevant_evt OF i_A61)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A61 <-- TRUE,
			already_standby OF i_A61 <-- FALSE,
			already_required OF i_A61 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A61 <-- FALSE,
			already_required OF i_A61 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A61 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A61 <-- FALSE;

OBJECT i_A62 IS_A i_leaf;
	INTERFACE
	  fathers
		= A62;
	  triggered_by
		= A22;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A62) OR (NOT S OF A22)
		THEN required OF i_A62 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A62 AND (NOT S OF A62)
		THEN relevant_evt OF i_A62 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A62 <-- S OF i_A62;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A62 = TRUE
		THEN S OF i_A62 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A62) AND ((NOT already_standby OF i_A62)
		  AND (NOT already_required OF i_A62))
		THEN already_standby OF i_A62 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A62 AND already_standby OF i_A62
		THEN to_be_fired OF i_A62 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A62 = FALSE) AND (to_be_fired OF i_A62 AND
		  relevant_evt OF i_A62)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A62 <-- TRUE,
			already_standby OF i_A62 <-- FALSE,
			already_required OF i_A62 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A62 <-- FALSE,
			already_required OF i_A62 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A62 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A62 <-- FALSE;

OBJECT i_A63 IS_A i_leaf;
	INTERFACE
	  fathers
		= A63;
	  triggered_by
		= A25;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A63) OR (NOT S OF A25)
		THEN required OF i_A63 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A63 AND (NOT S OF A63)
		THEN relevant_evt OF i_A63 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A63 <-- S OF i_A63;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A63 = TRUE
		THEN S OF i_A63 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A63) AND ((NOT already_standby OF i_A63)
		  AND (NOT already_required OF i_A63))
		THEN already_standby OF i_A63 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A63 AND already_standby OF i_A63
		THEN to_be_fired OF i_A63 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A63 = FALSE) AND (to_be_fired OF i_A63 AND
		  relevant_evt OF i_A63)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A63 <-- TRUE,
			already_standby OF i_A63 <-- FALSE,
			already_required OF i_A63 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A63 <-- FALSE,
			already_required OF i_A63 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A63 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A63 <-- FALSE;

OBJECT i_A64 IS_A i_leaf;
	INTERFACE
	  fathers
		= A64;
	  triggered_by
		= A25;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A64) OR (NOT S OF A25)
		THEN required OF i_A64 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A64 AND (NOT S OF A64)
		THEN relevant_evt OF i_A64 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A64 <-- S OF i_A64;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A64 = TRUE
		THEN S OF i_A64 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A64) AND ((NOT already_standby OF i_A64)
		  AND (NOT already_required OF i_A64))
		THEN already_standby OF i_A64 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A64 AND already_standby OF i_A64
		THEN to_be_fired OF i_A64 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A64 = FALSE) AND (to_be_fired OF i_A64 AND
		  relevant_evt OF i_A64)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A64 <-- TRUE,
			already_standby OF i_A64 <-- FALSE,
			already_required OF i_A64 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A64 <-- FALSE,
			already_required OF i_A64 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A64 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A64 <-- FALSE;

OBJECT i_A65 IS_A i_leaf;
	INTERFACE
	  fathers
		= A65;
	  triggered_by
		= A28;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A65) OR (NOT S OF A28)
		THEN required OF i_A65 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A65 AND (NOT S OF A65)
		THEN relevant_evt OF i_A65 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A65 <-- S OF i_A65;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A65 = TRUE
		THEN S OF i_A65 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A65) AND ((NOT already_standby OF i_A65)
		  AND (NOT already_required OF i_A65))
		THEN already_standby OF i_A65 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A65 AND already_standby OF i_A65
		THEN to_be_fired OF i_A65 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A65 = FALSE) AND (to_be_fired OF i_A65 AND
		  relevant_evt OF i_A65)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A65 <-- TRUE,
			already_standby OF i_A65 <-- FALSE,
			already_required OF i_A65 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A65 <-- FALSE,
			already_required OF i_A65 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A65 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A65 <-- FALSE;

OBJECT i_A66 IS_A i_leaf;
	INTERFACE
	  fathers
		= A66;
	  triggered_by
		= A28;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A66) OR (NOT S OF A28)
		THEN required OF i_A66 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A66 AND (NOT S OF A66)
		THEN relevant_evt OF i_A66 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A66 <-- S OF i_A66;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A66 = TRUE
		THEN S OF i_A66 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A66) AND ((NOT already_standby OF i_A66)
		  AND (NOT already_required OF i_A66))
		THEN already_standby OF i_A66 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A66 AND already_standby OF i_A66
		THEN to_be_fired OF i_A66 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A66 = FALSE) AND (to_be_fired OF i_A66 AND
		  relevant_evt OF i_A66)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A66 <-- TRUE,
			already_standby OF i_A66 <-- FALSE,
			already_required OF i_A66 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A66 <-- FALSE,
			already_required OF i_A66 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A66 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A66 <-- FALSE;

OBJECT i_A68 IS_A i_leaf;
	INTERFACE
	  fathers
		= A68;
	  triggered_by
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A68) OR (NOT S OF A31)
		THEN required OF i_A68 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A68 AND (NOT S OF A68)
		THEN relevant_evt OF i_A68 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A68 <-- S OF i_A68;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A68 = TRUE
		THEN S OF i_A68 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A68) AND ((NOT already_standby OF i_A68)
		  AND (NOT already_required OF i_A68))
		THEN already_standby OF i_A68 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A68 AND already_standby OF i_A68
		THEN to_be_fired OF i_A68 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A68 = FALSE) AND (to_be_fired OF i_A68 AND
		  relevant_evt OF i_A68)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A68 <-- TRUE,
			already_standby OF i_A68 <-- FALSE,
			already_required OF i_A68 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A68 <-- FALSE,
			already_required OF i_A68 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A68 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A68 <-- FALSE;

OBJECT i_A69 IS_A i_leaf;
	INTERFACE
	  fathers
		= A69;
	  triggered_by
		= A1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A69) OR (NOT S OF A1)
		THEN required OF i_A69 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A69 AND (NOT S OF A69)
		THEN relevant_evt OF i_A69 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A69 <-- S OF i_A69;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A69 = TRUE
		THEN S OF i_A69 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A69) AND ((NOT already_standby OF i_A69)
		  AND (NOT already_required OF i_A69))
		THEN already_standby OF i_A69 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A69 AND already_standby OF i_A69
		THEN to_be_fired OF i_A69 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A69 = FALSE) AND (to_be_fired OF i_A69 AND
		  relevant_evt OF i_A69)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A69 <-- TRUE,
			already_standby OF i_A69 <-- FALSE,
			already_required OF i_A69 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A69 <-- FALSE,
			already_required OF i_A69 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A69 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A69 <-- FALSE;

OBJECT i_A70 IS_A i_leaf;
	INTERFACE
	  fathers
		= A70;
	  triggered_by
		= A1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A70) OR (NOT S OF A1)
		THEN required OF i_A70 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A70 AND (NOT S OF A70)
		THEN relevant_evt OF i_A70 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A70 <-- S OF i_A70;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A70 = TRUE
		THEN S OF i_A70 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A70) AND ((NOT already_standby OF i_A70)
		  AND (NOT already_required OF i_A70))
		THEN already_standby OF i_A70 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A70 AND already_standby OF i_A70
		THEN to_be_fired OF i_A70 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A70 = FALSE) AND (to_be_fired OF i_A70 AND
		  relevant_evt OF i_A70)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A70 <-- TRUE,
			already_standby OF i_A70 <-- FALSE,
			already_required OF i_A70 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A70 <-- FALSE,
			already_required OF i_A70 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A70 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A70 <-- FALSE;

OBJECT i_A71 IS_A i_leaf;
	INTERFACE
	  fathers
		= A71;
	  triggered_by
		= A1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A71) OR (NOT S OF A1)
		THEN required OF i_A71 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A71 AND (NOT S OF A71)
		THEN relevant_evt OF i_A71 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A71 <-- S OF i_A71;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A71 = TRUE
		THEN S OF i_A71 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A71) AND ((NOT already_standby OF i_A71)
		  AND (NOT already_required OF i_A71))
		THEN already_standby OF i_A71 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A71 AND already_standby OF i_A71
		THEN to_be_fired OF i_A71 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A71 = FALSE) AND (to_be_fired OF i_A71 AND
		  relevant_evt OF i_A71)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A71 <-- TRUE,
			already_standby OF i_A71 <-- FALSE,
			already_required OF i_A71 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A71 <-- FALSE,
			already_required OF i_A71 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A71 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A71 <-- FALSE;

OBJECT i_A72 IS_A i_leaf;
	INTERFACE
	  fathers
		= A72;
	  triggered_by
		= A35;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A72) OR (NOT S OF A35)
		THEN required OF i_A72 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A72 AND (NOT S OF A72)
		THEN relevant_evt OF i_A72 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A72 <-- S OF i_A72;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A72 = TRUE
		THEN S OF i_A72 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A72) AND ((NOT already_standby OF i_A72)
		  AND (NOT already_required OF i_A72))
		THEN already_standby OF i_A72 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A72 AND already_standby OF i_A72
		THEN to_be_fired OF i_A72 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A72 = FALSE) AND (to_be_fired OF i_A72 AND
		  relevant_evt OF i_A72)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A72 <-- TRUE,
			already_standby OF i_A72 <-- FALSE,
			already_required OF i_A72 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A72 <-- FALSE,
			already_required OF i_A72 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A72 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A72 <-- FALSE;

OBJECT i_A73 IS_A i_leaf;
	INTERFACE
	  fathers
		= A73;
	  triggered_by
		= A39;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A73) OR (NOT S OF A39)
		THEN required OF i_A73 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A73 AND (NOT S OF A73)
		THEN relevant_evt OF i_A73 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A73 <-- S OF i_A73;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A73 = TRUE
		THEN S OF i_A73 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A73) AND ((NOT already_standby OF i_A73)
		  AND (NOT already_required OF i_A73))
		THEN already_standby OF i_A73 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A73 AND already_standby OF i_A73
		THEN to_be_fired OF i_A73 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A73 = FALSE) AND (to_be_fired OF i_A73 AND
		  relevant_evt OF i_A73)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A73 <-- TRUE,
			already_standby OF i_A73 <-- FALSE,
			already_required OF i_A73 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A73 <-- FALSE,
			already_required OF i_A73 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A73 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A73 <-- FALSE;

OBJECT i_A74 IS_A i_leaf;
	INTERFACE
	  fathers
		= A74;
	  triggered_by
		= A43;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A74) OR (NOT S OF A43)
		THEN required OF i_A74 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A74 AND (NOT S OF A74)
		THEN relevant_evt OF i_A74 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A74 <-- S OF i_A74;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A74 = TRUE
		THEN S OF i_A74 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A74) AND ((NOT already_standby OF i_A74)
		  AND (NOT already_required OF i_A74))
		THEN already_standby OF i_A74 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A74 AND already_standby OF i_A74
		THEN to_be_fired OF i_A74 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A74 = FALSE) AND (to_be_fired OF i_A74 AND
		  relevant_evt OF i_A74)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A74 <-- TRUE,
			already_standby OF i_A74 <-- FALSE,
			already_required OF i_A74 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A74 <-- FALSE,
			already_required OF i_A74 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A74 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A74 <-- FALSE;

OBJECT i_A75 IS_A i_leaf;
	INTERFACE
	  fathers
		= A75;
	  triggered_by
		= A46;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A75) OR (NOT S OF A46)
		THEN required OF i_A75 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A75 AND (NOT S OF A75)
		THEN relevant_evt OF i_A75 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A75 <-- S OF i_A75;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A75 = TRUE
		THEN S OF i_A75 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A75) AND ((NOT already_standby OF i_A75)
		  AND (NOT already_required OF i_A75))
		THEN already_standby OF i_A75 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A75 AND already_standby OF i_A75
		THEN to_be_fired OF i_A75 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A75 = FALSE) AND (to_be_fired OF i_A75 AND
		  relevant_evt OF i_A75)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A75 <-- TRUE,
			already_standby OF i_A75 <-- FALSE,
			already_required OF i_A75 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A75 <-- FALSE,
			already_required OF i_A75 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A75 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A75 <-- FALSE;

OBJECT logic_0 IS_A logic_link;

OBJECT logic_1 IS_A logic_link;

OBJECT logic_10 IS_A logic_link;

OBJECT logic_100 IS_A logic_link;

OBJECT logic_101 IS_A logic_link;

OBJECT logic_102 IS_A logic_link;

OBJECT logic_103 IS_A logic_link;

OBJECT logic_104 IS_A logic_link;

OBJECT logic_105 IS_A logic_link;

OBJECT logic_106 IS_A logic_link;

OBJECT logic_107 IS_A logic_link;

OBJECT logic_108 IS_A logic_link;

OBJECT logic_109 IS_A logic_link;

OBJECT logic_11 IS_A logic_link;

OBJECT logic_110 IS_A logic_link;

OBJECT logic_111 IS_A logic_link;

OBJECT logic_112 IS_A logic_link;

OBJECT logic_113 IS_A logic_link;

OBJECT logic_114 IS_A logic_link;

OBJECT logic_115 IS_A logic_link;

OBJECT logic_116 IS_A logic_link;

OBJECT logic_117 IS_A logic_link;

OBJECT logic_118 IS_A logic_link;

OBJECT logic_119 IS_A logic_link;

OBJECT logic_12 IS_A logic_link;

OBJECT logic_120 IS_A logic_link;

OBJECT logic_121 IS_A logic_link;

OBJECT logic_122 IS_A logic_link;

OBJECT logic_123 IS_A logic_link;

OBJECT logic_124 IS_A logic_link;

OBJECT logic_125 IS_A logic_link;

OBJECT logic_126 IS_A logic_link;

OBJECT logic_127 IS_A logic_link;

OBJECT logic_128 IS_A logic_link;

OBJECT logic_129 IS_A logic_link;

OBJECT logic_13 IS_A logic_link;

OBJECT logic_130 IS_A logic_link;

OBJECT logic_131 IS_A logic_link;

OBJECT logic_132 IS_A logic_link;

OBJECT logic_133 IS_A logic_link;

OBJECT logic_134 IS_A logic_link;

OBJECT logic_135 IS_A logic_link;

OBJECT logic_136 IS_A logic_link;

OBJECT logic_137 IS_A logic_link;

OBJECT logic_138 IS_A logic_link;

OBJECT logic_139 IS_A logic_link;

OBJECT logic_14 IS_A logic_link;

OBJECT logic_140 IS_A logic_link;

OBJECT logic_141 IS_A logic_link;

OBJECT logic_142 IS_A logic_link;

OBJECT logic_143 IS_A logic_link;

OBJECT logic_144 IS_A logic_link;

OBJECT logic_145 IS_A logic_link;

OBJECT logic_146 IS_A logic_link;

OBJECT logic_147 IS_A logic_link;

OBJECT logic_148 IS_A logic_link;

OBJECT logic_149 IS_A logic_link;

OBJECT logic_15 IS_A logic_link;

OBJECT logic_150 IS_A logic_link;

OBJECT logic_151 IS_A logic_link;

OBJECT logic_152 IS_A logic_link;

OBJECT logic_153 IS_A logic_link;

OBJECT logic_154 IS_A logic_link;

OBJECT logic_155 IS_A logic_link;

OBJECT logic_156 IS_A logic_link;

OBJECT logic_157 IS_A logic_link;

OBJECT logic_158 IS_A logic_link;

OBJECT logic_159 IS_A logic_link;

OBJECT logic_16 IS_A logic_link;

OBJECT logic_160 IS_A logic_link;

OBJECT logic_161 IS_A logic_link;

OBJECT logic_162 IS_A logic_link;

OBJECT logic_163 IS_A logic_link;

OBJECT logic_164 IS_A logic_link;

OBJECT logic_165 IS_A logic_link;

OBJECT logic_166 IS_A logic_link;

OBJECT logic_167 IS_A logic_link;

OBJECT logic_168 IS_A logic_link;

OBJECT logic_169 IS_A logic_link;

OBJECT logic_17 IS_A logic_link;

OBJECT logic_170 IS_A logic_link;

OBJECT logic_171 IS_A logic_link;

OBJECT logic_172 IS_A logic_link;

OBJECT logic_173 IS_A logic_link;

OBJECT logic_174 IS_A logic_link;

OBJECT logic_175 IS_A logic_link;

OBJECT logic_176 IS_A logic_link;

OBJECT logic_177 IS_A logic_link;

OBJECT logic_178 IS_A logic_link;

OBJECT logic_18 IS_A logic_link;

OBJECT logic_19 IS_A logic_link;

OBJECT logic_2 IS_A logic_link;

OBJECT logic_20 IS_A logic_link;

OBJECT logic_21 IS_A logic_link;

OBJECT logic_22 IS_A logic_link;

OBJECT logic_23 IS_A logic_link;

OBJECT logic_24 IS_A logic_link;

OBJECT logic_25 IS_A logic_link;

OBJECT logic_26 IS_A logic_link;

OBJECT logic_27 IS_A logic_link;

OBJECT logic_28 IS_A logic_link;

OBJECT logic_29 IS_A logic_link;

OBJECT logic_3 IS_A logic_link;

OBJECT logic_30 IS_A logic_link;

OBJECT logic_31 IS_A logic_link;

OBJECT logic_32 IS_A logic_link;

OBJECT logic_33 IS_A logic_link;

OBJECT logic_34 IS_A logic_link;

OBJECT logic_35 IS_A logic_link;

OBJECT logic_36 IS_A logic_link;

OBJECT logic_37 IS_A logic_link;

OBJECT logic_38 IS_A logic_link;

OBJECT logic_39 IS_A logic_link;

OBJECT logic_4 IS_A logic_link;

OBJECT logic_40 IS_A logic_link;

OBJECT logic_41 IS_A logic_link;

OBJECT logic_42 IS_A logic_link;

OBJECT logic_43 IS_A logic_link;

OBJECT logic_44 IS_A logic_link;

OBJECT logic_45 IS_A logic_link;

OBJECT logic_46 IS_A logic_link;

OBJECT logic_47 IS_A logic_link;

OBJECT logic_48 IS_A logic_link;

OBJECT logic_49 IS_A logic_link;

OBJECT logic_5 IS_A logic_link;

OBJECT logic_50 IS_A logic_link;

OBJECT logic_51 IS_A logic_link;

OBJECT logic_52 IS_A logic_link;

OBJECT logic_53 IS_A logic_link;

OBJECT logic_54 IS_A logic_link;

OBJECT logic_55 IS_A logic_link;

OBJECT logic_56 IS_A logic_link;

OBJECT logic_57 IS_A logic_link;

OBJECT logic_58 IS_A logic_link;

OBJECT logic_59 IS_A logic_link;

OBJECT logic_6 IS_A logic_link;

OBJECT logic_60 IS_A logic_link;

OBJECT logic_61 IS_A logic_link;

OBJECT logic_62 IS_A logic_link;

OBJECT logic_63 IS_A logic_link;

OBJECT logic_64 IS_A logic_link;

OBJECT logic_65 IS_A logic_link;

OBJECT logic_66 IS_A logic_link;

OBJECT logic_67 IS_A logic_link;

OBJECT logic_68 IS_A logic_link;

OBJECT logic_69 IS_A logic_link;

OBJECT logic_7 IS_A logic_link;

OBJECT logic_70 IS_A logic_link;

OBJECT logic_71 IS_A logic_link;

OBJECT logic_72 IS_A logic_link;

OBJECT logic_73 IS_A logic_link;

OBJECT logic_74 IS_A logic_link;

OBJECT logic_75 IS_A logic_link;

OBJECT logic_76 IS_A logic_link;

OBJECT logic_77 IS_A logic_link;

OBJECT logic_78 IS_A logic_link;

OBJECT logic_79 IS_A logic_link;

OBJECT logic_8 IS_A logic_link;

OBJECT logic_80 IS_A logic_link;

OBJECT logic_81 IS_A logic_link;

OBJECT logic_82 IS_A logic_link;

OBJECT logic_83 IS_A logic_link;

OBJECT logic_84 IS_A logic_link;

OBJECT logic_85 IS_A logic_link;

OBJECT logic_86 IS_A logic_link;

OBJECT logic_87 IS_A logic_link;

OBJECT logic_88 IS_A logic_link;

OBJECT logic_89 IS_A logic_link;

OBJECT logic_9 IS_A logic_link;

OBJECT logic_90 IS_A logic_link;

OBJECT logic_91 IS_A logic_link;

OBJECT logic_92 IS_A logic_link;

OBJECT logic_93 IS_A logic_link;

OBJECT logic_94 IS_A logic_link;

OBJECT logic_95 IS_A logic_link;

OBJECT logic_96 IS_A logic_link;

OBJECT logic_97 IS_A logic_link;

OBJECT logic_98 IS_A logic_link;

OBJECT logic_99 IS_A logic_link;

OBJECT t_dep_0 IS_A trigger_link;
	INTERFACE
	  target
		= i_A69;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_1 IS_A trigger_link;
	INTERFACE
	  target
		= i_A70;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_10 IS_A trigger_link;
	INTERFACE
	  target
		= i_A57;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_11 IS_A trigger_link;
	INTERFACE
	  target
		= i_A58;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_12 IS_A trigger_link;
	INTERFACE
	  target
		= i_A59;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_13 IS_A trigger_link;
	INTERFACE
	  target
		= i_A62;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_14 IS_A trigger_link;
	INTERFACE
	  target
		= i_A63;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_15 IS_A trigger_link;
	INTERFACE
	  target
		= i_A64;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_16 IS_A trigger_link;
	INTERFACE
	  target
		= i_A65;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_17 IS_A trigger_link;
	INTERFACE
	  target
		= i_A66;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_18 IS_A trigger_link;
	INTERFACE
	  target
		= i_A54;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_19 IS_A trigger_link;
	INTERFACE
	  target
		= i_A61;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_2 IS_A trigger_link;
	INTERFACE
	  target
		= i_A71;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_20 IS_A trigger_link;
	INTERFACE
	  target
		= i_A68;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_21 IS_A trigger_link;
	INTERFACE
	  target
		= i_A72;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_22 IS_A trigger_link;
	INTERFACE
	  target
		= i_A73;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_23 IS_A trigger_link;
	INTERFACE
	  target
		= i_A74;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_24 IS_A trigger_link;
	INTERFACE
	  target
		= i_A75;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_3 IS_A trigger_link;
	INTERFACE
	  target
		= i_A48;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_4 IS_A trigger_link;
	INTERFACE
	  target
		= i_A49;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_5 IS_A trigger_link;
	INTERFACE
	  target
		= i_A50;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_6 IS_A trigger_link;
	INTERFACE
	  target
		= i_A51;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_7 IS_A trigger_link;
	INTERFACE
	  target
		= i_A52;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_8 IS_A trigger_link;
	INTERFACE
	  target
		= i_A55;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_9 IS_A trigger_link;
	INTERFACE
	  target
		= i_A56;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_seq_0 IS_A trigger_link;
	INTERFACE
	  target
		= A83;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_1 IS_A trigger_link;
	INTERFACE
	  target
		= A88;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_2 IS_A trigger_link;
	INTERFACE
	  target
		= A94;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_3 IS_A trigger_link;
	INTERFACE
	  target
		= A99;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_4 IS_A trigger_link;
	INTERFACE
	  target
		= A105;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_5 IS_A trigger_link;
	INTERFACE
	  target
		= A110;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_6 IS_A trigger_link;
	INTERFACE
	  target
		= A116;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_7 IS_A trigger_link;
	INTERFACE
	  target
		= A121;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_8 IS_A trigger_link;
	INTERFACE
	  target
		= A127;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_9 IS_A trigger_link;
	INTERFACE
	  target
		= A132;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT __ARBRE__EIRM IS_A FIGARO;
	CONSTANT
	  Profil1
		DOMAIN BOOLEAN
		= TRUE;
	  no_trim
		DOMAIN BOOLEAN
		= FALSE;
	  trim_article
		DOMAIN BOOLEAN
		= TRUE;
	  no_repair
		DOMAIN BOOLEAN
		= FALSE;

