STEPS_ORDER
	__ARBRE__;
	default_step;
	initialization;
	propagate_effect_S;
	propagate_effect_required;
	propagate_leaves;
	tops;
GROUP_NAMES
	V3_simu_group;

OBJECT OPTIONS IS_A GLOBAL_TYPE;
	CONSTANT
	  trimming
		DOMAIN BOOLEAN
		= TRUE;
	  trimming_option
		DOMAIN 'according_to_article' 'maximum'
		= 'according_to_article';
	  repairable_system
		DOMAIN BOOLEAN
		= TRUE;

OBJECT A0 IS_A or_gate;
	INTERFACE
	  sons
		= A17 A2 A20 A23 A26 A30 A34 A55;
	  fathers
		= UE_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF UE_1
		THEN required OF A0 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF UE_1 AND (NOT S OF UE_1)
		THEN relevant_evt OF A0 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A0 <-- S OF A0;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((((((S OF A17 OR S OF A2) OR S OF A20) OR S OF A23) OR S OF
		  A26) OR S OF A30) OR S OF A34) OR S OF A55
		THEN S OF A0 <-- TRUE;

OBJECT A1 IS_A f_leaf;
	INTERFACE
	  fathers
		= A54;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A54
		THEN required OF A1 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A54 AND (NOT S OF A54)
		THEN relevant_evt OF A1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A1 <-- S OF A1;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A1 = TRUE
		THEN S OF A1 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A1 = FALSE) AND (required OF A1 AND relevant_evt
		  OF A1)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A1 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A1 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A1 <-- FALSE;

OBJECT A10 IS_A f_leaf;
	INTERFACE
	  fathers
		= A11;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A11
		THEN required OF A10 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A11 AND (NOT S OF A11)
		THEN relevant_evt OF A10 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A10 <-- S OF A10;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A10 = TRUE
		THEN S OF A10 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A10 = FALSE) AND (required OF A10 AND relevant_evt
		  OF A10)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A10 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A10 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A10 <-- FALSE;

OBJECT A100 IS_A f_leaf;
	INTERFACE
	  fathers
		= A101;
	  triggers
		= A98;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A101
		THEN required OF A100 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A101 AND (NOT S OF A101)) OR (NOT S OF A98)
		THEN relevant_evt OF A100 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A100 <-- S OF A100;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A100 = TRUE
		THEN S OF A100 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A100 = FALSE) AND (required OF A100 AND
		  relevant_evt OF A100)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A100 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A100 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A100 <-- FALSE;

OBJECT A101 IS_A and_gate;
	INTERFACE
	  sons
		= A100 A98;
	  fathers
		= A103;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A103
		THEN required OF A101 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A103 AND (NOT S OF A103)
		THEN relevant_evt OF A101 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A101 <-- S OF A101;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A100 AND S OF A98
		THEN S OF A101 <-- TRUE;

OBJECT A103 IS_A or_gate;
	INTERFACE
	  sons
		= A101 A94 A96 A99;
	  fathers
		= A11 A14 A20 A41 A44 A5 A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((((((NOT required OF A11) AND (NOT required OF A14)) AND (
		  NOT required OF A20)) AND (NOT required OF A41)) AND (NOT
		  required OF A44)) AND (NOT required OF A5)) AND (NOT
		  required OF A8)
		THEN required OF A103 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((((((relevant_evt OF A11 AND (NOT S OF A11)) OR (
		  relevant_evt OF A14 AND (NOT S OF A14))) OR (relevant_evt OF
		  A20 AND (NOT S OF A20))) OR (relevant_evt OF A41 AND (NOT S
		  OF A41))) OR (relevant_evt OF A44 AND (NOT S OF A44))) OR (
		  relevant_evt OF A5 AND (NOT S OF A5))) OR (relevant_evt OF
		  A8 AND (NOT S OF A8))
		THEN relevant_evt OF A103 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A103 <-- S OF A103;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A101 OR S OF A94) OR S OF A96) OR S OF A99
		THEN S OF A103 <-- TRUE;

OBJECT A11 IS_A or_gate;
	INTERFACE
	  sons
		= A10 A103 A39 A49 A81;
	  fathers
		= A58;
	  triggers
		= i_A38;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A58
		THEN required OF A11 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A58 AND (NOT S OF A58)) OR (NOT S OF i_A38)
		THEN relevant_evt OF A11 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A11 <-- S OF A11;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A10 OR S OF A103) OR S OF A39) OR S OF A49) OR S OF
		  A81
		THEN S OF A11 <-- TRUE;

OBJECT A13 IS_A f_leaf;
	INTERFACE
	  fathers
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A14
		THEN required OF A13 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A14 AND (NOT S OF A14)
		THEN relevant_evt OF A13 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A13 <-- S OF A13;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A13 = TRUE
		THEN S OF A13 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A13 = FALSE) AND (required OF A13 AND relevant_evt
		  OF A13)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A13 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A13 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A13 <-- FALSE;

OBJECT A14 IS_A or_gate;
	INTERFACE
	  sons
		= A103 A13 A38 A45 A81;
	  fathers
		= A58;
	  triggers
		= i_A39 i_A43;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A58
		THEN required OF A14 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A58 AND (NOT S OF A58)) OR ((NOT S OF i_A39)
		   OR (NOT S OF i_A43))
		THEN relevant_evt OF A14 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A14 <-- S OF A14;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A103 OR S OF A13) OR S OF A38) OR S OF A45) OR S OF
		  A81
		THEN S OF A14 <-- TRUE;

OBJECT A16 IS_A f_leaf;
	INTERFACE
	  fathers
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A17
		THEN required OF A16 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A17 AND (NOT S OF A17)
		THEN relevant_evt OF A16 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A16 <-- S OF A16;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A16 = TRUE
		THEN S OF A16 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A16 = FALSE) AND (required OF A16 AND relevant_evt
		  OF A16)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A16 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A16 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A16 <-- FALSE;

OBJECT A17 IS_A or_gate;
	INTERFACE
	  sons
		= A16 A47 A59 A92;
	  fathers
		= A0;
	  triggers
		= i_A42 i_A45 i_A46;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A17 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (((NOT S OF i_A42)
		  OR (NOT S OF i_A45)) OR (NOT S OF i_A46))
		THEN relevant_evt OF A17 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A17 <-- S OF A17;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A16 OR S OF A47) OR S OF A59) OR S OF A92
		THEN S OF A17 <-- TRUE;

OBJECT A19 IS_A f_leaf;
	INTERFACE
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A19 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A19 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A19 <-- S OF A19;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A19 = TRUE
		THEN S OF A19 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A19 = FALSE) AND (required OF A19 AND relevant_evt
		  OF A19)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A19 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A19 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A19 <-- FALSE;

OBJECT A2 IS_A or_gate;
	INTERFACE
	  sons
		= A54;
	  fathers
		= A0;
	  triggers
		= i_A48 i_A49;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A2 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR ((NOT S OF i_A48)
		  OR (NOT S OF i_A49))
		THEN relevant_evt OF A2 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A2 <-- S OF A2;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A54
		THEN S OF A2 <-- TRUE;

OBJECT A20 IS_A or_gate;
	INTERFACE
	  sons
		= A103 A19 A46 A50 A51 A52 A53 A92;
	  fathers
		= A0;
	  triggers
		= i_A47;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A20 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A47)
		THEN relevant_evt OF A20 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A20 <-- S OF A20;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((((((S OF A103 OR S OF A19) OR S OF A46) OR S OF A50) OR S
		  OF A51) OR S OF A52) OR S OF A53) OR S OF A92
		THEN S OF A20 <-- TRUE;

OBJECT A22 IS_A f_leaf;
	INTERFACE
	  fathers
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A23
		THEN required OF A22 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A23 AND (NOT S OF A23)
		THEN relevant_evt OF A22 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A22 <-- S OF A22;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A22 = TRUE
		THEN S OF A22 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A22 = FALSE) AND (required OF A22 AND relevant_evt
		  OF A22)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A22 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A22 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A22 <-- FALSE;

OBJECT A23 IS_A or_gate;
	INTERFACE
	  sons
		= A22 A92;
	  fathers
		= A0;
	  triggers
		= i_A50;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A23 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A50)
		THEN relevant_evt OF A23 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A23 <-- S OF A23;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A22 OR S OF A92
		THEN S OF A23 <-- TRUE;

OBJECT A25 IS_A f_leaf;
	INTERFACE
	  fathers
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A26
		THEN required OF A25 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A26 AND (NOT S OF A26)
		THEN relevant_evt OF A25 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A25 <-- S OF A25;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A25 = TRUE
		THEN S OF A25 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A25 = FALSE) AND (required OF A25 AND relevant_evt
		  OF A25)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A25 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A25 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A25 <-- FALSE;

OBJECT A26 IS_A or_gate;
	INTERFACE
	  sons
		= A25;
	  fathers
		= A0;
	  triggers
		= i_A51;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A26 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A51)
		THEN relevant_evt OF A26 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A26 <-- S OF A26;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A25
		THEN S OF A26 <-- TRUE;

OBJECT A28 IS_A f_leaf;
	INTERFACE
	  fathers
		= A30;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A30
		THEN required OF A28 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A30 AND (NOT S OF A30)
		THEN relevant_evt OF A28 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A28 <-- S OF A28;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A28 = TRUE
		THEN S OF A28 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A28 = FALSE) AND (required OF A28 AND relevant_evt
		  OF A28)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A28 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A28 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A28 <-- FALSE;

OBJECT A29 IS_A f_leaf;
	INTERFACE
	  fathers
		= A54;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A54
		THEN required OF A29 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A54 AND (NOT S OF A54)
		THEN relevant_evt OF A29 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A29 <-- S OF A29;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A29 = TRUE
		THEN S OF A29 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A29 = FALSE) AND (required OF A29 AND relevant_evt
		  OF A29)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A29 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A29 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A29 <-- FALSE;

OBJECT A30 IS_A or_gate;
	INTERFACE
	  sons
		= A28;
	  fathers
		= A0;
	  triggers
		= i_A52;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A30 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A52)
		THEN relevant_evt OF A30 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A30 <-- S OF A30;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A28
		THEN S OF A30 <-- TRUE;

OBJECT A32 IS_A f_leaf;
	INTERFACE
	  fathers
		= A34;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A34
		THEN required OF A32 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A34 AND (NOT S OF A34)
		THEN relevant_evt OF A32 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A32 <-- S OF A32;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A32 = TRUE
		THEN S OF A32 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A32 = FALSE) AND (required OF A32 AND relevant_evt
		  OF A32)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A32 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A32 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A32 <-- FALSE;

OBJECT A33 IS_A f_leaf;
	INTERFACE
	  fathers
		= A54;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A54
		THEN required OF A33 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A54 AND (NOT S OF A54)
		THEN relevant_evt OF A33 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A33 <-- S OF A33;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A33 = TRUE
		THEN S OF A33 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A33 = FALSE) AND (required OF A33 AND relevant_evt
		  OF A33)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A33 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A33 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A33 <-- FALSE;

OBJECT A34 IS_A or_gate;
	INTERFACE
	  sons
		= A32;
	  fathers
		= A0;
	  triggers
		= i_A53;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A34 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A53)
		THEN relevant_evt OF A34 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A34 <-- S OF A34;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A32
		THEN S OF A34 <-- TRUE;

OBJECT A36 IS_A or_gate;
	INTERFACE
	  sons
		= f_A36 i_A36;
	  fathers
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A8
		THEN required OF A36 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A8 AND (NOT S OF A8)
		THEN relevant_evt OF A36 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A36 <-- S OF A36;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A36 OR S OF i_A36
		THEN S OF A36 <-- TRUE;

OBJECT A37 IS_A or_gate;
	INTERFACE
	  sons
		= f_A37 i_A37;
	  fathers
		= A5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A5
		THEN required OF A37 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A5 AND (NOT S OF A5)
		THEN relevant_evt OF A37 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A37 <-- S OF A37;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A37 OR S OF i_A37
		THEN S OF A37 <-- TRUE;

OBJECT A38 IS_A or_gate;
	INTERFACE
	  sons
		= f_A38 i_A38;
	  fathers
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A14
		THEN required OF A38 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A14 AND (NOT S OF A14)
		THEN relevant_evt OF A38 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A38 <-- S OF A38;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A38 OR S OF i_A38
		THEN S OF A38 <-- TRUE;

OBJECT A39 IS_A or_gate;
	INTERFACE
	  sons
		= f_A39 i_A39;
	  fathers
		= A11;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A11
		THEN required OF A39 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A11 AND (NOT S OF A11)
		THEN relevant_evt OF A39 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A39 <-- S OF A39;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A39 OR S OF i_A39
		THEN S OF A39 <-- TRUE;

OBJECT A4 IS_A f_leaf;
	INTERFACE
	  fathers
		= A5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A5
		THEN required OF A4 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A5 AND (NOT S OF A5)
		THEN relevant_evt OF A4 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A4 <-- S OF A4;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A4 = TRUE
		THEN S OF A4 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A4 = FALSE) AND (required OF A4 AND relevant_evt
		  OF A4)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A4 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A4 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A4 <-- FALSE;

OBJECT A40 IS_A or_gate;
	INTERFACE
	  sons
		= f_A40 i_A40;
	  fathers
		= A41;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A41
		THEN required OF A40 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A41 AND (NOT S OF A41)
		THEN relevant_evt OF A40 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A40 <-- S OF A40;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A40 OR S OF i_A40
		THEN S OF A40 <-- TRUE;

OBJECT A41 IS_A or_gate;
	INTERFACE
	  sons
		= A103 A40;
	  fathers
		= A59;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A59
		THEN required OF A41 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A59 AND (NOT S OF A59)
		THEN relevant_evt OF A41 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A41 <-- S OF A41;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A103 OR S OF A40
		THEN S OF A41 <-- TRUE;

OBJECT A42 IS_A or_gate;
	INTERFACE
	  sons
		= f_A42 i_A42;
	  fathers
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A8
		THEN required OF A42 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A8 AND (NOT S OF A8)
		THEN relevant_evt OF A42 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A42 <-- S OF A42;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A42 OR S OF i_A42
		THEN S OF A42 <-- TRUE;

OBJECT A43 IS_A or_gate;
	INTERFACE
	  sons
		= f_A43 i_A43;
	  fathers
		= A44;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A44
		THEN required OF A43 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A44 AND (NOT S OF A44)
		THEN relevant_evt OF A43 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A43 <-- S OF A43;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A43 OR S OF i_A43
		THEN S OF A43 <-- TRUE;

OBJECT A44 IS_A or_gate;
	INTERFACE
	  sons
		= A103 A43;
	  fathers
		= A59;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A59
		THEN required OF A44 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A59 AND (NOT S OF A59)
		THEN relevant_evt OF A44 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A44 <-- S OF A44;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A103 OR S OF A43
		THEN S OF A44 <-- TRUE;

OBJECT A45 IS_A or_gate;
	INTERFACE
	  sons
		= f_A45 i_A45;
	  fathers
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A14
		THEN required OF A45 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A14 AND (NOT S OF A14)
		THEN relevant_evt OF A45 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A45 <-- S OF A45;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A45 OR S OF i_A45
		THEN S OF A45 <-- TRUE;

OBJECT A46 IS_A or_gate;
	INTERFACE
	  sons
		= f_A46 i_A46;
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A46 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A46 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A46 <-- S OF A46;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A46 OR S OF i_A46
		THEN S OF A46 <-- TRUE;

OBJECT A47 IS_A or_gate;
	INTERFACE
	  sons
		= f_A47 i_A47;
	  fathers
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A17
		THEN required OF A47 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A17 AND (NOT S OF A17)
		THEN relevant_evt OF A47 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A47 <-- S OF A47;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A47 OR S OF i_A47
		THEN S OF A47 <-- TRUE;

OBJECT A48 IS_A or_gate;
	INTERFACE
	  sons
		= f_A48 i_A48;
	  fathers
		= A5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A5
		THEN required OF A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A5 AND (NOT S OF A5)
		THEN relevant_evt OF A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A48 <-- S OF A48;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A48 OR S OF i_A48
		THEN S OF A48 <-- TRUE;

OBJECT A49 IS_A or_gate;
	INTERFACE
	  sons
		= f_A49 i_A49;
	  fathers
		= A11;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A11
		THEN required OF A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A11 AND (NOT S OF A11)
		THEN relevant_evt OF A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A49 <-- S OF A49;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A49 OR S OF i_A49
		THEN S OF A49 <-- TRUE;

OBJECT A5 IS_A or_gate;
	INTERFACE
	  sons
		= A103 A37 A4 A48 A70;
	  fathers
		= A57;
	  triggers
		= i_A36;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A57
		THEN required OF A5 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A57 AND (NOT S OF A57)) OR (NOT S OF i_A36)
		THEN relevant_evt OF A5 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A5 <-- S OF A5;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A103 OR S OF A37) OR S OF A4) OR S OF A48) OR S OF
		  A70
		THEN S OF A5 <-- TRUE;

OBJECT A50 IS_A or_gate;
	INTERFACE
	  sons
		= f_A50 i_A50;
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A50 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A50 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A50 <-- S OF A50;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A50 OR S OF i_A50
		THEN S OF A50 <-- TRUE;

OBJECT A51 IS_A or_gate;
	INTERFACE
	  sons
		= f_A51 i_A51;
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A51 <-- S OF A51;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A51 OR S OF i_A51
		THEN S OF A51 <-- TRUE;

OBJECT A52 IS_A or_gate;
	INTERFACE
	  sons
		= f_A52 i_A52;
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A52 <-- S OF A52;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A52 OR S OF i_A52
		THEN S OF A52 <-- TRUE;

OBJECT A53 IS_A or_gate;
	INTERFACE
	  sons
		= f_A53 i_A53;
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A53 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A53 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A53 <-- S OF A53;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A53 OR S OF i_A53
		THEN S OF A53 <-- TRUE;

OBJECT A54 IS_A k_out_of_n_gate;
	INTERFACE
	  sons
		= A1 A29 A33 A56;
	  fathers
		= A2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  K
		DOMAIN INTEGER
		= 3;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A2
		THEN required OF A54 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A2 AND (NOT S OF A2)
		THEN relevant_evt OF A54 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A54 <-- S OF A54;
	  xx27
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (AT_LEAST 3 WITHIN (S OF A1, S OF A29, S OF A33, S OF A56))
		THEN S OF A54 <-- TRUE;

OBJECT A55 IS_A and_gate;
	INTERFACE
	  sons
		= A57 A58;
	  fathers
		= A0;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A55 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A0 AND (NOT S OF A0)
		THEN relevant_evt OF A55 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A55 <-- S OF A55;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A57 AND S OF A58
		THEN S OF A55 <-- TRUE;

OBJECT A56 IS_A f_leaf;
	INTERFACE
	  fathers
		= A54;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A54
		THEN required OF A56 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A54 AND (NOT S OF A54)
		THEN relevant_evt OF A56 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A56 <-- S OF A56;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A56 = TRUE
		THEN S OF A56 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A56 = FALSE) AND (required OF A56 AND relevant_evt
		  OF A56)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A56 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A56 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A56 <-- FALSE;

OBJECT A57 IS_A or_gate;
	INTERFACE
	  sons
		= A5 A8;
	  fathers
		= A55;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A55
		THEN required OF A57 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A55 AND (NOT S OF A55)
		THEN relevant_evt OF A57 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A57 <-- S OF A57;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A5 OR S OF A8
		THEN S OF A57 <-- TRUE;

OBJECT A58 IS_A or_gate;
	INTERFACE
	  sons
		= A11 A14;
	  fathers
		= A55;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A55
		THEN required OF A58 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A55 AND (NOT S OF A55)
		THEN relevant_evt OF A58 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A58 <-- S OF A58;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A11 OR S OF A14
		THEN S OF A58 <-- TRUE;

OBJECT A59 IS_A and_gate;
	INTERFACE
	  sons
		= A41 A44;
	  fathers
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A17
		THEN required OF A59 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A17 AND (NOT S OF A17)
		THEN relevant_evt OF A59 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A59 <-- S OF A59;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A41 AND S OF A44
		THEN S OF A59 <-- TRUE;

OBJECT A60 IS_A f_leaf;
	INTERFACE
	  fathers
		= A63;
	  triggered_by
		= A62;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 6e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A62
		THEN required OF A60 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A63 AND (NOT S OF A63)
		THEN relevant_evt OF A60 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A60 <-- S OF A60;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A60 = TRUE
		THEN S OF A60 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A60 = FALSE) AND (required OF A60 AND relevant_evt
		  OF A60)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (6e-05)
		  INDUCING failF OF A60 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A60 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A60 <-- FALSE;

OBJECT A61 IS_A f_leaf;
	INTERFACE
	  fathers
		= A70;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 4e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A70
		THEN required OF A61 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A70 AND (NOT S OF A70)
		THEN relevant_evt OF A61 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A61 <-- S OF A61;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A61 = TRUE
		THEN S OF A61 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A61 = FALSE) AND (required OF A61 AND relevant_evt
		  OF A61)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (4e-05)
		  INDUCING failF OF A61 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A61 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A61 <-- FALSE;

OBJECT A62 IS_A f_leaf;
	INTERFACE
	  fathers
		= A63;
	  triggers
		= A60;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A63
		THEN required OF A62 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A63 AND (NOT S OF A63)) OR (NOT S OF A60)
		THEN relevant_evt OF A62 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A62 <-- S OF A62;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A62 = TRUE
		THEN S OF A62 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A62 = FALSE) AND (required OF A62 AND relevant_evt
		  OF A62)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A62 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A62 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A62 <-- FALSE;

OBJECT A63 IS_A and_gate;
	INTERFACE
	  sons
		= A60 A62;
	  fathers
		= A70;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A70
		THEN required OF A63 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A70 AND (NOT S OF A70)
		THEN relevant_evt OF A63 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A63 <-- S OF A63;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A60 AND S OF A62
		THEN S OF A63 <-- TRUE;

OBJECT A65 IS_A f_leaf;
	INTERFACE
	  fathers
		= A68;
	  triggered_by
		= A67;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 6e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A67
		THEN required OF A65 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A68 AND (NOT S OF A68)
		THEN relevant_evt OF A65 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A65 <-- S OF A65;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A65 = TRUE
		THEN S OF A65 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A65 = FALSE) AND (required OF A65 AND relevant_evt
		  OF A65)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (6e-06)
		  INDUCING failF OF A65 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A65 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A65 <-- FALSE;

OBJECT A66 IS_A f_leaf;
	INTERFACE
	  fathers
		= A70;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 4e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A70
		THEN required OF A66 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A70 AND (NOT S OF A70)
		THEN relevant_evt OF A66 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A66 <-- S OF A66;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A66 = TRUE
		THEN S OF A66 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A66 = FALSE) AND (required OF A66 AND relevant_evt
		  OF A66)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (4e-06)
		  INDUCING failF OF A66 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A66 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A66 <-- FALSE;

OBJECT A67 IS_A f_leaf;
	INTERFACE
	  fathers
		= A68;
	  triggers
		= A65;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A68
		THEN required OF A67 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A68 AND (NOT S OF A68)) OR (NOT S OF A65)
		THEN relevant_evt OF A67 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A67 <-- S OF A67;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A67 = TRUE
		THEN S OF A67 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A67 = FALSE) AND (required OF A67 AND relevant_evt
		  OF A67)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A67 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A67 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A67 <-- FALSE;

OBJECT A68 IS_A and_gate;
	INTERFACE
	  sons
		= A65 A67;
	  fathers
		= A70;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A70
		THEN required OF A68 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A70 AND (NOT S OF A70)
		THEN relevant_evt OF A68 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A68 <-- S OF A68;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A65 AND S OF A67
		THEN S OF A68 <-- TRUE;

OBJECT A7 IS_A f_leaf;
	INTERFACE
	  fathers
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A8
		THEN required OF A7 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A8 AND (NOT S OF A8)
		THEN relevant_evt OF A7 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A7 <-- S OF A7;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A7 = TRUE
		THEN S OF A7 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A7 = FALSE) AND (required OF A7 AND relevant_evt
		  OF A7)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A7 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A7 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A7 <-- FALSE;

OBJECT A70 IS_A or_gate;
	INTERFACE
	  sons
		= A61 A63 A66 A68;
	  fathers
		= A5 A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A5) AND (NOT required OF A8)
		THEN required OF A70 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A5 AND (NOT S OF A5)) OR (relevant_evt OF
		  A8 AND (NOT S OF A8))
		THEN relevant_evt OF A70 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A70 <-- S OF A70;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A61 OR S OF A63) OR S OF A66) OR S OF A68
		THEN S OF A70 <-- TRUE;

OBJECT A71 IS_A f_leaf;
	INTERFACE
	  fathers
		= A74;
	  triggered_by
		= A73;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.99e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A73
		THEN required OF A71 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A74 AND (NOT S OF A74)
		THEN relevant_evt OF A71 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A71 <-- S OF A71;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A71 = TRUE
		THEN S OF A71 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A71 = FALSE) AND (required OF A71 AND relevant_evt
		  OF A71)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.99e-05)
		  INDUCING failF OF A71 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A71 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A71 <-- FALSE;

OBJECT A72 IS_A f_leaf;
	INTERFACE
	  fathers
		= A81;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A81
		THEN required OF A72 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A81 AND (NOT S OF A81)
		THEN relevant_evt OF A72 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A72 <-- S OF A72;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A72 = TRUE
		THEN S OF A72 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A72 = FALSE) AND (required OF A72 AND relevant_evt
		  OF A72)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A72 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A72 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A72 <-- FALSE;

OBJECT A73 IS_A f_leaf;
	INTERFACE
	  fathers
		= A74;
	  triggers
		= A71;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A74
		THEN required OF A73 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A74 AND (NOT S OF A74)) OR (NOT S OF A71)
		THEN relevant_evt OF A73 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A73 <-- S OF A73;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A73 = TRUE
		THEN S OF A73 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A73 = FALSE) AND (required OF A73 AND relevant_evt
		  OF A73)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A73 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A73 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A73 <-- FALSE;

OBJECT A74 IS_A and_gate;
	INTERFACE
	  sons
		= A71 A73;
	  fathers
		= A81;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A81
		THEN required OF A74 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A81 AND (NOT S OF A81)
		THEN relevant_evt OF A74 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A74 <-- S OF A74;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A71 AND S OF A73
		THEN S OF A74 <-- TRUE;

OBJECT A76 IS_A f_leaf;
	INTERFACE
	  fathers
		= A79;
	  triggered_by
		= A78;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.99e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A78
		THEN required OF A76 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A79 AND (NOT S OF A79)
		THEN relevant_evt OF A76 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A76 <-- S OF A76;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A76 = TRUE
		THEN S OF A76 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A76 = FALSE) AND (required OF A76 AND relevant_evt
		  OF A76)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.99e-06)
		  INDUCING failF OF A76 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A76 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A76 <-- FALSE;

OBJECT A77 IS_A f_leaf;
	INTERFACE
	  fathers
		= A81;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-08;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A81
		THEN required OF A77 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A81 AND (NOT S OF A81)
		THEN relevant_evt OF A77 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A77 <-- S OF A77;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A77 = TRUE
		THEN S OF A77 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A77 = FALSE) AND (required OF A77 AND relevant_evt
		  OF A77)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-08)
		  INDUCING failF OF A77 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A77 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A77 <-- FALSE;

OBJECT A78 IS_A f_leaf;
	INTERFACE
	  fathers
		= A79;
	  triggers
		= A76;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A79
		THEN required OF A78 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A79 AND (NOT S OF A79)) OR (NOT S OF A76)
		THEN relevant_evt OF A78 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A78 <-- S OF A78;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A78 = TRUE
		THEN S OF A78 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A78 = FALSE) AND (required OF A78 AND relevant_evt
		  OF A78)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A78 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A78 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A78 <-- FALSE;

OBJECT A79 IS_A and_gate;
	INTERFACE
	  sons
		= A76 A78;
	  fathers
		= A81;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A81
		THEN required OF A79 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A81 AND (NOT S OF A81)
		THEN relevant_evt OF A79 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A79 <-- S OF A79;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A76 AND S OF A78
		THEN S OF A79 <-- TRUE;

OBJECT A8 IS_A or_gate;
	INTERFACE
	  sons
		= A103 A36 A42 A7 A70;
	  fathers
		= A57;
	  triggers
		= i_A37 i_A40;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A57
		THEN required OF A8 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A57 AND (NOT S OF A57)) OR ((NOT S OF i_A37)
		   OR (NOT S OF i_A40))
		THEN relevant_evt OF A8 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A8 <-- S OF A8;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A103 OR S OF A36) OR S OF A42) OR S OF A7) OR S OF
		  A70
		THEN S OF A8 <-- TRUE;

OBJECT A81 IS_A or_gate;
	INTERFACE
	  sons
		= A72 A74 A77 A79;
	  fathers
		= A11 A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A11) AND (NOT required OF A14)
		THEN required OF A81 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A11 AND (NOT S OF A11)) OR (relevant_evt OF
		  A14 AND (NOT S OF A14))
		THEN relevant_evt OF A81 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A81 <-- S OF A81;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A72 OR S OF A74) OR S OF A77) OR S OF A79
		THEN S OF A81 <-- TRUE;

OBJECT A82 IS_A f_leaf;
	INTERFACE
	  fathers
		= A85;
	  triggered_by
		= A84;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A84
		THEN required OF A82 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A85 AND (NOT S OF A85)
		THEN relevant_evt OF A82 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A82 <-- S OF A82;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A82 = TRUE
		THEN S OF A82 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A82 = FALSE) AND (required OF A82 AND relevant_evt
		  OF A82)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-06)
		  INDUCING failF OF A82 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A82 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A82 <-- FALSE;

OBJECT A83 IS_A f_leaf;
	INTERFACE
	  fathers
		= A92;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A92
		THEN required OF A83 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A92 AND (NOT S OF A92)
		THEN relevant_evt OF A83 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A83 <-- S OF A83;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A83 = TRUE
		THEN S OF A83 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A83 = FALSE) AND (required OF A83 AND relevant_evt
		  OF A83)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A83 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A83 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A83 <-- FALSE;

OBJECT A84 IS_A f_leaf;
	INTERFACE
	  fathers
		= A85;
	  triggers
		= A82;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A85
		THEN required OF A84 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A85 AND (NOT S OF A85)) OR (NOT S OF A82)
		THEN relevant_evt OF A84 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A84 <-- S OF A84;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A84 = TRUE
		THEN S OF A84 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A84 = FALSE) AND (required OF A84 AND relevant_evt
		  OF A84)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A84 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A84 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A84 <-- FALSE;

OBJECT A85 IS_A and_gate;
	INTERFACE
	  sons
		= A82 A84;
	  fathers
		= A92;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A92
		THEN required OF A85 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A92 AND (NOT S OF A92)
		THEN relevant_evt OF A85 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A85 <-- S OF A85;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A82 AND S OF A84
		THEN S OF A85 <-- TRUE;

OBJECT A87 IS_A f_leaf;
	INTERFACE
	  fathers
		= A90;
	  triggered_by
		= A89;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A89
		THEN required OF A87 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A90 AND (NOT S OF A90)
		THEN relevant_evt OF A87 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A87 <-- S OF A87;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A87 = TRUE
		THEN S OF A87 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A87 = FALSE) AND (required OF A87 AND relevant_evt
		  OF A87)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-07)
		  INDUCING failF OF A87 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A87 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A87 <-- FALSE;

OBJECT A88 IS_A f_leaf;
	INTERFACE
	  fathers
		= A92;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-08;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A92
		THEN required OF A88 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A92 AND (NOT S OF A92)
		THEN relevant_evt OF A88 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A88 <-- S OF A88;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A88 = TRUE
		THEN S OF A88 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A88 = FALSE) AND (required OF A88 AND relevant_evt
		  OF A88)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-08)
		  INDUCING failF OF A88 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A88 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A88 <-- FALSE;

OBJECT A89 IS_A f_leaf;
	INTERFACE
	  fathers
		= A90;
	  triggers
		= A87;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A90
		THEN required OF A89 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A90 AND (NOT S OF A90)) OR (NOT S OF A87)
		THEN relevant_evt OF A89 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A89 <-- S OF A89;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A89 = TRUE
		THEN S OF A89 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A89 = FALSE) AND (required OF A89 AND relevant_evt
		  OF A89)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A89 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A89 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A89 <-- FALSE;

OBJECT A90 IS_A and_gate;
	INTERFACE
	  sons
		= A87 A89;
	  fathers
		= A92;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A92
		THEN required OF A90 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A92 AND (NOT S OF A92)
		THEN relevant_evt OF A90 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A90 <-- S OF A90;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A87 AND S OF A89
		THEN S OF A90 <-- TRUE;

OBJECT A92 IS_A or_gate;
	INTERFACE
	  sons
		= A83 A85 A88 A90;
	  fathers
		= A17 A20 A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((NOT required OF A17) AND (NOT required OF A20)) AND (NOT
		  required OF A23)
		THEN required OF A92 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((relevant_evt OF A17 AND (NOT S OF A17)) OR (relevant_evt
		  OF A20 AND (NOT S OF A20))) OR (relevant_evt OF A23 AND (NOT
		  S OF A23))
		THEN relevant_evt OF A92 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A92 <-- S OF A92;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A83 OR S OF A85) OR S OF A88) OR S OF A90
		THEN S OF A92 <-- TRUE;

OBJECT A93 IS_A f_leaf;
	INTERFACE
	  fathers
		= A96;
	  triggered_by
		= A95;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A95
		THEN required OF A93 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A96 AND (NOT S OF A96)
		THEN relevant_evt OF A93 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A93 <-- S OF A93;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A93 = TRUE
		THEN S OF A93 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A93 = FALSE) AND (required OF A93 AND relevant_evt
		  OF A93)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-06)
		  INDUCING failF OF A93 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A93 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A93 <-- FALSE;

OBJECT A94 IS_A f_leaf;
	INTERFACE
	  fathers
		= A103;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A103
		THEN required OF A94 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A103 AND (NOT S OF A103)
		THEN relevant_evt OF A94 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A94 <-- S OF A94;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A94 = TRUE
		THEN S OF A94 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A94 = FALSE) AND (required OF A94 AND relevant_evt
		  OF A94)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A94 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A94 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A94 <-- FALSE;

OBJECT A95 IS_A f_leaf;
	INTERFACE
	  fathers
		= A96;
	  triggers
		= A93;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A96
		THEN required OF A95 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A96 AND (NOT S OF A96)) OR (NOT S OF A93)
		THEN relevant_evt OF A95 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A95 <-- S OF A95;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A95 = TRUE
		THEN S OF A95 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A95 = FALSE) AND (required OF A95 AND relevant_evt
		  OF A95)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A95 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A95 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A95 <-- FALSE;

OBJECT A96 IS_A and_gate;
	INTERFACE
	  sons
		= A93 A95;
	  fathers
		= A103;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A103
		THEN required OF A96 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A103 AND (NOT S OF A103)
		THEN relevant_evt OF A96 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A96 <-- S OF A96;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A93 AND S OF A95
		THEN S OF A96 <-- TRUE;

OBJECT A98 IS_A f_leaf;
	INTERFACE
	  fathers
		= A101;
	  triggered_by
		= A100;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A100
		THEN required OF A98 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A101 AND (NOT S OF A101)
		THEN relevant_evt OF A98 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A98 <-- S OF A98;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A98 = TRUE
		THEN S OF A98 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A98 = FALSE) AND (required OF A98 AND relevant_evt
		  OF A98)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-07)
		  INDUCING failF OF A98 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A98 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A98 <-- FALSE;

OBJECT A99 IS_A f_leaf;
	INTERFACE
	  fathers
		= A103;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-08;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A103
		THEN required OF A99 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A103 AND (NOT S OF A103)
		THEN relevant_evt OF A99 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A99 <-- S OF A99;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A99 = TRUE
		THEN S OF A99 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A99 = FALSE) AND (required OF A99 AND relevant_evt
		  OF A99)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-08)
		  INDUCING failF OF A99 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A99 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A99 <-- FALSE;

OBJECT UE_1 IS_A undes_event;
	INTERFACE
	  sons
		= A0;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		THEN relevant_evt OF UE_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF UE_1 <-- S OF UE_1;
	  xx34
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A0
		THEN S OF UE_1 <-- TRUE;

OBJECT f_A36 IS_A f_leaf;
	INTERFACE
	  fathers
		= A36;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A36
		THEN required OF f_A36 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A36 AND (NOT S OF A36)
		THEN relevant_evt OF f_A36 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A36 <-- S OF f_A36;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A36 = TRUE
		THEN S OF f_A36 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A36 = FALSE) AND (required OF f_A36 AND
		  relevant_evt OF f_A36)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A36 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A36 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A36 <-- FALSE;

OBJECT f_A37 IS_A f_leaf;
	INTERFACE
	  fathers
		= A37;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A37
		THEN required OF f_A37 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A37 AND (NOT S OF A37)
		THEN relevant_evt OF f_A37 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A37 <-- S OF f_A37;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A37 = TRUE
		THEN S OF f_A37 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A37 = FALSE) AND (required OF f_A37 AND
		  relevant_evt OF f_A37)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A37 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A37 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A37 <-- FALSE;

OBJECT f_A38 IS_A f_leaf;
	INTERFACE
	  fathers
		= A38;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A38
		THEN required OF f_A38 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A38 AND (NOT S OF A38)
		THEN relevant_evt OF f_A38 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A38 <-- S OF f_A38;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A38 = TRUE
		THEN S OF f_A38 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A38 = FALSE) AND (required OF f_A38 AND
		  relevant_evt OF f_A38)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A38 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A38 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A38 <-- FALSE;

OBJECT f_A39 IS_A f_leaf;
	INTERFACE
	  fathers
		= A39;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A39
		THEN required OF f_A39 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A39 AND (NOT S OF A39)
		THEN relevant_evt OF f_A39 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A39 <-- S OF f_A39;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A39 = TRUE
		THEN S OF f_A39 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A39 = FALSE) AND (required OF f_A39 AND
		  relevant_evt OF f_A39)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A39 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A39 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A39 <-- FALSE;

OBJECT f_A40 IS_A f_leaf;
	INTERFACE
	  fathers
		= A40;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A40
		THEN required OF f_A40 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A40 AND (NOT S OF A40)
		THEN relevant_evt OF f_A40 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A40 <-- S OF f_A40;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A40 = TRUE
		THEN S OF f_A40 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A40 = FALSE) AND (required OF f_A40 AND
		  relevant_evt OF f_A40)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A40 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A40 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A40 <-- FALSE;

OBJECT f_A42 IS_A f_leaf;
	INTERFACE
	  fathers
		= A42;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A42
		THEN required OF f_A42 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A42 AND (NOT S OF A42)
		THEN relevant_evt OF f_A42 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A42 <-- S OF f_A42;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A42 = TRUE
		THEN S OF f_A42 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A42 = FALSE) AND (required OF f_A42 AND
		  relevant_evt OF f_A42)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A42 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A42 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A42 <-- FALSE;

OBJECT f_A43 IS_A f_leaf;
	INTERFACE
	  fathers
		= A43;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A43
		THEN required OF f_A43 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A43 AND (NOT S OF A43)
		THEN relevant_evt OF f_A43 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A43 <-- S OF f_A43;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A43 = TRUE
		THEN S OF f_A43 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A43 = FALSE) AND (required OF f_A43 AND
		  relevant_evt OF f_A43)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A43 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A43 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A43 <-- FALSE;

OBJECT f_A45 IS_A f_leaf;
	INTERFACE
	  fathers
		= A45;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A45
		THEN required OF f_A45 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A45 AND (NOT S OF A45)
		THEN relevant_evt OF f_A45 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A45 <-- S OF f_A45;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A45 = TRUE
		THEN S OF f_A45 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A45 = FALSE) AND (required OF f_A45 AND
		  relevant_evt OF f_A45)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A45 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A45 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A45 <-- FALSE;

OBJECT f_A46 IS_A f_leaf;
	INTERFACE
	  fathers
		= A46;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A46
		THEN required OF f_A46 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A46 AND (NOT S OF A46)
		THEN relevant_evt OF f_A46 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A46 <-- S OF f_A46;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A46 = TRUE
		THEN S OF f_A46 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A46 = FALSE) AND (required OF f_A46 AND
		  relevant_evt OF f_A46)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A46 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A46 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A46 <-- FALSE;

OBJECT f_A47 IS_A f_leaf;
	INTERFACE
	  fathers
		= A47;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A47
		THEN required OF f_A47 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A47 AND (NOT S OF A47)
		THEN relevant_evt OF f_A47 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A47 <-- S OF f_A47;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A47 = TRUE
		THEN S OF f_A47 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A47 = FALSE) AND (required OF f_A47 AND
		  relevant_evt OF f_A47)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A47 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A47 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A47 <-- FALSE;

OBJECT f_A48 IS_A f_leaf;
	INTERFACE
	  fathers
		= A48;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A48
		THEN required OF f_A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A48 AND (NOT S OF A48)
		THEN relevant_evt OF f_A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A48 <-- S OF f_A48;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A48 = TRUE
		THEN S OF f_A48 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A48 = FALSE) AND (required OF f_A48 AND
		  relevant_evt OF f_A48)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A48 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A48 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A48 <-- FALSE;

OBJECT f_A49 IS_A f_leaf;
	INTERFACE
	  fathers
		= A49;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A49
		THEN required OF f_A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A49 AND (NOT S OF A49)
		THEN relevant_evt OF f_A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A49 <-- S OF f_A49;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A49 = TRUE
		THEN S OF f_A49 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A49 = FALSE) AND (required OF f_A49 AND
		  relevant_evt OF f_A49)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A49 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A49 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A49 <-- FALSE;

OBJECT f_A50 IS_A f_leaf;
	INTERFACE
	  fathers
		= A50;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A50
		THEN required OF f_A50 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A50 AND (NOT S OF A50)
		THEN relevant_evt OF f_A50 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A50 <-- S OF f_A50;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A50 = TRUE
		THEN S OF f_A50 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A50 = FALSE) AND (required OF f_A50 AND
		  relevant_evt OF f_A50)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A50 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A50 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A50 <-- FALSE;

OBJECT f_A51 IS_A f_leaf;
	INTERFACE
	  fathers
		= A51;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A51
		THEN required OF f_A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A51 AND (NOT S OF A51)
		THEN relevant_evt OF f_A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A51 <-- S OF f_A51;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A51 = TRUE
		THEN S OF f_A51 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A51 = FALSE) AND (required OF f_A51 AND
		  relevant_evt OF f_A51)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A51 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A51 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A51 <-- FALSE;

OBJECT f_A52 IS_A f_leaf;
	INTERFACE
	  fathers
		= A52;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A52
		THEN required OF f_A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A52 AND (NOT S OF A52)
		THEN relevant_evt OF f_A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A52 <-- S OF f_A52;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A52 = TRUE
		THEN S OF f_A52 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A52 = FALSE) AND (required OF f_A52 AND
		  relevant_evt OF f_A52)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A52 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A52 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A52 <-- FALSE;

OBJECT f_A53 IS_A f_leaf;
	INTERFACE
	  fathers
		= A53;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A53
		THEN required OF f_A53 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A53 AND (NOT S OF A53)
		THEN relevant_evt OF f_A53 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A53 <-- S OF f_A53;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A53 = TRUE
		THEN S OF f_A53 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A53 = FALSE) AND (required OF f_A53 AND
		  relevant_evt OF f_A53)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A53 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A53 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A53 <-- FALSE;

OBJECT i_A36 IS_A i_leaf;
	INTERFACE
	  fathers
		= A36;
	  triggered_by
		= A5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A36) OR (NOT S OF A5)
		THEN required OF i_A36 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A36 AND (NOT S OF A36)
		THEN relevant_evt OF i_A36 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A36 <-- S OF i_A36;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A36 = TRUE
		THEN S OF i_A36 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A36) AND ((NOT already_standby OF i_A36)
		  AND (NOT already_required OF i_A36))
		THEN already_standby OF i_A36 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A36 AND already_standby OF i_A36
		THEN to_be_fired OF i_A36 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A36 = FALSE) AND (to_be_fired OF i_A36 AND
		  relevant_evt OF i_A36)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A36 <-- TRUE,
			already_standby OF i_A36 <-- FALSE,
			already_required OF i_A36 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A36 <-- FALSE,
			already_required OF i_A36 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A36 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A36 <-- FALSE;

OBJECT i_A37 IS_A i_leaf;
	INTERFACE
	  fathers
		= A37;
	  triggered_by
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A37) OR (NOT S OF A8)
		THEN required OF i_A37 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A37 AND (NOT S OF A37)
		THEN relevant_evt OF i_A37 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A37 <-- S OF i_A37;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A37 = TRUE
		THEN S OF i_A37 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A37) AND ((NOT already_standby OF i_A37)
		  AND (NOT already_required OF i_A37))
		THEN already_standby OF i_A37 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A37 AND already_standby OF i_A37
		THEN to_be_fired OF i_A37 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A37 = FALSE) AND (to_be_fired OF i_A37 AND
		  relevant_evt OF i_A37)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A37 <-- TRUE,
			already_standby OF i_A37 <-- FALSE,
			already_required OF i_A37 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A37 <-- FALSE,
			already_required OF i_A37 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A37 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A37 <-- FALSE;

OBJECT i_A38 IS_A i_leaf;
	INTERFACE
	  fathers
		= A38;
	  triggered_by
		= A11;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A38) OR (NOT S OF A11)
		THEN required OF i_A38 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A38 AND (NOT S OF A38)
		THEN relevant_evt OF i_A38 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A38 <-- S OF i_A38;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A38 = TRUE
		THEN S OF i_A38 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A38) AND ((NOT already_standby OF i_A38)
		  AND (NOT already_required OF i_A38))
		THEN already_standby OF i_A38 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A38 AND already_standby OF i_A38
		THEN to_be_fired OF i_A38 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A38 = FALSE) AND (to_be_fired OF i_A38 AND
		  relevant_evt OF i_A38)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A38 <-- TRUE,
			already_standby OF i_A38 <-- FALSE,
			already_required OF i_A38 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A38 <-- FALSE,
			already_required OF i_A38 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A38 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A38 <-- FALSE;

OBJECT i_A39 IS_A i_leaf;
	INTERFACE
	  fathers
		= A39;
	  triggered_by
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A39) OR (NOT S OF A14)
		THEN required OF i_A39 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A39 AND (NOT S OF A39)
		THEN relevant_evt OF i_A39 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A39 <-- S OF i_A39;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A39 = TRUE
		THEN S OF i_A39 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A39) AND ((NOT already_standby OF i_A39)
		  AND (NOT already_required OF i_A39))
		THEN already_standby OF i_A39 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A39 AND already_standby OF i_A39
		THEN to_be_fired OF i_A39 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A39 = FALSE) AND (to_be_fired OF i_A39 AND
		  relevant_evt OF i_A39)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A39 <-- TRUE,
			already_standby OF i_A39 <-- FALSE,
			already_required OF i_A39 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A39 <-- FALSE,
			already_required OF i_A39 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A39 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A39 <-- FALSE;

OBJECT i_A40 IS_A i_leaf;
	INTERFACE
	  fathers
		= A40;
	  triggered_by
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A40) OR (NOT S OF A8)
		THEN required OF i_A40 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A40 AND (NOT S OF A40)
		THEN relevant_evt OF i_A40 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A40 <-- S OF i_A40;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A40 = TRUE
		THEN S OF i_A40 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A40) AND ((NOT already_standby OF i_A40)
		  AND (NOT already_required OF i_A40))
		THEN already_standby OF i_A40 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A40 AND already_standby OF i_A40
		THEN to_be_fired OF i_A40 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A40 = FALSE) AND (to_be_fired OF i_A40 AND
		  relevant_evt OF i_A40)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A40 <-- TRUE,
			already_standby OF i_A40 <-- FALSE,
			already_required OF i_A40 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A40 <-- FALSE,
			already_required OF i_A40 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A40 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A40 <-- FALSE;

OBJECT i_A42 IS_A i_leaf;
	INTERFACE
	  fathers
		= A42;
	  triggered_by
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A42) OR (NOT S OF A17)
		THEN required OF i_A42 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A42 AND (NOT S OF A42)
		THEN relevant_evt OF i_A42 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A42 <-- S OF i_A42;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A42 = TRUE
		THEN S OF i_A42 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A42) AND ((NOT already_standby OF i_A42)
		  AND (NOT already_required OF i_A42))
		THEN already_standby OF i_A42 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A42 AND already_standby OF i_A42
		THEN to_be_fired OF i_A42 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A42 = FALSE) AND (to_be_fired OF i_A42 AND
		  relevant_evt OF i_A42)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A42 <-- TRUE,
			already_standby OF i_A42 <-- FALSE,
			already_required OF i_A42 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A42 <-- FALSE,
			already_required OF i_A42 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A42 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A42 <-- FALSE;

OBJECT i_A43 IS_A i_leaf;
	INTERFACE
	  fathers
		= A43;
	  triggered_by
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A43) OR (NOT S OF A14)
		THEN required OF i_A43 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A43 AND (NOT S OF A43)
		THEN relevant_evt OF i_A43 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A43 <-- S OF i_A43;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A43 = TRUE
		THEN S OF i_A43 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A43) AND ((NOT already_standby OF i_A43)
		  AND (NOT already_required OF i_A43))
		THEN already_standby OF i_A43 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A43 AND already_standby OF i_A43
		THEN to_be_fired OF i_A43 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A43 = FALSE) AND (to_be_fired OF i_A43 AND
		  relevant_evt OF i_A43)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A43 <-- TRUE,
			already_standby OF i_A43 <-- FALSE,
			already_required OF i_A43 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A43 <-- FALSE,
			already_required OF i_A43 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A43 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A43 <-- FALSE;

OBJECT i_A45 IS_A i_leaf;
	INTERFACE
	  fathers
		= A45;
	  triggered_by
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A45) OR (NOT S OF A17)
		THEN required OF i_A45 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A45 AND (NOT S OF A45)
		THEN relevant_evt OF i_A45 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A45 <-- S OF i_A45;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A45 = TRUE
		THEN S OF i_A45 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A45) AND ((NOT already_standby OF i_A45)
		  AND (NOT already_required OF i_A45))
		THEN already_standby OF i_A45 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A45 AND already_standby OF i_A45
		THEN to_be_fired OF i_A45 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A45 = FALSE) AND (to_be_fired OF i_A45 AND
		  relevant_evt OF i_A45)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A45 <-- TRUE,
			already_standby OF i_A45 <-- FALSE,
			already_required OF i_A45 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A45 <-- FALSE,
			already_required OF i_A45 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A45 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A45 <-- FALSE;

OBJECT i_A46 IS_A i_leaf;
	INTERFACE
	  fathers
		= A46;
	  triggered_by
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A46) OR (NOT S OF A17)
		THEN required OF i_A46 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A46 AND (NOT S OF A46)
		THEN relevant_evt OF i_A46 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A46 <-- S OF i_A46;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A46 = TRUE
		THEN S OF i_A46 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A46) AND ((NOT already_standby OF i_A46)
		  AND (NOT already_required OF i_A46))
		THEN already_standby OF i_A46 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A46 AND already_standby OF i_A46
		THEN to_be_fired OF i_A46 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A46 = FALSE) AND (to_be_fired OF i_A46 AND
		  relevant_evt OF i_A46)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A46 <-- TRUE,
			already_standby OF i_A46 <-- FALSE,
			already_required OF i_A46 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A46 <-- FALSE,
			already_required OF i_A46 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A46 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A46 <-- FALSE;

OBJECT i_A47 IS_A i_leaf;
	INTERFACE
	  fathers
		= A47;
	  triggered_by
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A47) OR (NOT S OF A20)
		THEN required OF i_A47 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A47 AND (NOT S OF A47)
		THEN relevant_evt OF i_A47 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A47 <-- S OF i_A47;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A47 = TRUE
		THEN S OF i_A47 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A47) AND ((NOT already_standby OF i_A47)
		  AND (NOT already_required OF i_A47))
		THEN already_standby OF i_A47 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A47 AND already_standby OF i_A47
		THEN to_be_fired OF i_A47 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A47 = FALSE) AND (to_be_fired OF i_A47 AND
		  relevant_evt OF i_A47)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A47 <-- TRUE,
			already_standby OF i_A47 <-- FALSE,
			already_required OF i_A47 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A47 <-- FALSE,
			already_required OF i_A47 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A47 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A47 <-- FALSE;

OBJECT i_A48 IS_A i_leaf;
	INTERFACE
	  fathers
		= A48;
	  triggered_by
		= A2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A48) OR (NOT S OF A2)
		THEN required OF i_A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A48 AND (NOT S OF A48)
		THEN relevant_evt OF i_A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A48 <-- S OF i_A48;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A48 = TRUE
		THEN S OF i_A48 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A48) AND ((NOT already_standby OF i_A48)
		  AND (NOT already_required OF i_A48))
		THEN already_standby OF i_A48 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A48 AND already_standby OF i_A48
		THEN to_be_fired OF i_A48 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A48 = FALSE) AND (to_be_fired OF i_A48 AND
		  relevant_evt OF i_A48)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A48 <-- TRUE,
			already_standby OF i_A48 <-- FALSE,
			already_required OF i_A48 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A48 <-- FALSE,
			already_required OF i_A48 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A48 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A48 <-- FALSE;

OBJECT i_A49 IS_A i_leaf;
	INTERFACE
	  fathers
		= A49;
	  triggered_by
		= A2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A49) OR (NOT S OF A2)
		THEN required OF i_A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A49 AND (NOT S OF A49)
		THEN relevant_evt OF i_A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A49 <-- S OF i_A49;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A49 = TRUE
		THEN S OF i_A49 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A49) AND ((NOT already_standby OF i_A49)
		  AND (NOT already_required OF i_A49))
		THEN already_standby OF i_A49 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A49 AND already_standby OF i_A49
		THEN to_be_fired OF i_A49 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A49 = FALSE) AND (to_be_fired OF i_A49 AND
		  relevant_evt OF i_A49)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A49 <-- TRUE,
			already_standby OF i_A49 <-- FALSE,
			already_required OF i_A49 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A49 <-- FALSE,
			already_required OF i_A49 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A49 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A49 <-- FALSE;

OBJECT i_A50 IS_A i_leaf;
	INTERFACE
	  fathers
		= A50;
	  triggered_by
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A50) OR (NOT S OF A23)
		THEN required OF i_A50 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A50 AND (NOT S OF A50)
		THEN relevant_evt OF i_A50 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A50 <-- S OF i_A50;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A50 = TRUE
		THEN S OF i_A50 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A50) AND ((NOT already_standby OF i_A50)
		  AND (NOT already_required OF i_A50))
		THEN already_standby OF i_A50 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A50 AND already_standby OF i_A50
		THEN to_be_fired OF i_A50 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A50 = FALSE) AND (to_be_fired OF i_A50 AND
		  relevant_evt OF i_A50)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A50 <-- TRUE,
			already_standby OF i_A50 <-- FALSE,
			already_required OF i_A50 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A50 <-- FALSE,
			already_required OF i_A50 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A50 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A50 <-- FALSE;

OBJECT i_A51 IS_A i_leaf;
	INTERFACE
	  fathers
		= A51;
	  triggered_by
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A51) OR (NOT S OF A26)
		THEN required OF i_A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A51 AND (NOT S OF A51)
		THEN relevant_evt OF i_A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A51 <-- S OF i_A51;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A51 = TRUE
		THEN S OF i_A51 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A51) AND ((NOT already_standby OF i_A51)
		  AND (NOT already_required OF i_A51))
		THEN already_standby OF i_A51 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A51 AND already_standby OF i_A51
		THEN to_be_fired OF i_A51 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A51 = FALSE) AND (to_be_fired OF i_A51 AND
		  relevant_evt OF i_A51)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A51 <-- TRUE,
			already_standby OF i_A51 <-- FALSE,
			already_required OF i_A51 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A51 <-- FALSE,
			already_required OF i_A51 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A51 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A51 <-- FALSE;

OBJECT i_A52 IS_A i_leaf;
	INTERFACE
	  fathers
		= A52;
	  triggered_by
		= A30;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A52) OR (NOT S OF A30)
		THEN required OF i_A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A52 AND (NOT S OF A52)
		THEN relevant_evt OF i_A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A52 <-- S OF i_A52;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A52 = TRUE
		THEN S OF i_A52 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A52) AND ((NOT already_standby OF i_A52)
		  AND (NOT already_required OF i_A52))
		THEN already_standby OF i_A52 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A52 AND already_standby OF i_A52
		THEN to_be_fired OF i_A52 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A52 = FALSE) AND (to_be_fired OF i_A52 AND
		  relevant_evt OF i_A52)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A52 <-- TRUE,
			already_standby OF i_A52 <-- FALSE,
			already_required OF i_A52 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A52 <-- FALSE,
			already_required OF i_A52 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A52 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A52 <-- FALSE;

OBJECT i_A53 IS_A i_leaf;
	INTERFACE
	  fathers
		= A53;
	  triggered_by
		= A34;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A53) OR (NOT S OF A34)
		THEN required OF i_A53 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A53 AND (NOT S OF A53)
		THEN relevant_evt OF i_A53 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A53 <-- S OF i_A53;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A53 = TRUE
		THEN S OF i_A53 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A53) AND ((NOT already_standby OF i_A53)
		  AND (NOT already_required OF i_A53))
		THEN already_standby OF i_A53 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A53 AND already_standby OF i_A53
		THEN to_be_fired OF i_A53 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A53 = FALSE) AND (to_be_fired OF i_A53 AND
		  relevant_evt OF i_A53)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A53 <-- TRUE,
			already_standby OF i_A53 <-- FALSE,
			already_required OF i_A53 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A53 <-- FALSE,
			already_required OF i_A53 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A53 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A53 <-- FALSE;

OBJECT logic_0 IS_A logic_link;

OBJECT logic_1 IS_A logic_link;

OBJECT logic_10 IS_A logic_link;

OBJECT logic_100 IS_A logic_link;

OBJECT logic_101 IS_A logic_link;

OBJECT logic_102 IS_A logic_link;

OBJECT logic_103 IS_A logic_link;

OBJECT logic_104 IS_A logic_link;

OBJECT logic_105 IS_A logic_link;

OBJECT logic_106 IS_A logic_link;

OBJECT logic_107 IS_A logic_link;

OBJECT logic_108 IS_A logic_link;

OBJECT logic_109 IS_A logic_link;

OBJECT logic_11 IS_A logic_link;

OBJECT logic_110 IS_A logic_link;

OBJECT logic_111 IS_A logic_link;

OBJECT logic_112 IS_A logic_link;

OBJECT logic_113 IS_A logic_link;

OBJECT logic_114 IS_A logic_link;

OBJECT logic_115 IS_A logic_link;

OBJECT logic_116 IS_A logic_link;

OBJECT logic_117 IS_A logic_link;

OBJECT logic_118 IS_A logic_link;

OBJECT logic_119 IS_A logic_link;

OBJECT logic_12 IS_A logic_link;

OBJECT logic_120 IS_A logic_link;

OBJECT logic_121 IS_A logic_link;

OBJECT logic_122 IS_A logic_link;

OBJECT logic_123 IS_A logic_link;

OBJECT logic_124 IS_A logic_link;

OBJECT logic_125 IS_A logic_link;

OBJECT logic_126 IS_A logic_link;

OBJECT logic_13 IS_A logic_link;

OBJECT logic_14 IS_A logic_link;

OBJECT logic_15 IS_A logic_link;

OBJECT logic_16 IS_A logic_link;

OBJECT logic_17 IS_A logic_link;

OBJECT logic_18 IS_A logic_link;

OBJECT logic_19 IS_A logic_link;

OBJECT logic_2 IS_A logic_link;

OBJECT logic_20 IS_A logic_link;

OBJECT logic_21 IS_A logic_link;

OBJECT logic_22 IS_A logic_link;

OBJECT logic_23 IS_A logic_link;

OBJECT logic_24 IS_A logic_link;

OBJECT logic_25 IS_A logic_link;

OBJECT logic_26 IS_A logic_link;

OBJECT logic_27 IS_A logic_link;

OBJECT logic_28 IS_A logic_link;

OBJECT logic_29 IS_A logic_link;

OBJECT logic_3 IS_A logic_link;

OBJECT logic_30 IS_A logic_link;

OBJECT logic_31 IS_A logic_link;

OBJECT logic_32 IS_A logic_link;

OBJECT logic_33 IS_A logic_link;

OBJECT logic_34 IS_A logic_link;

OBJECT logic_35 IS_A logic_link;

OBJECT logic_36 IS_A logic_link;

OBJECT logic_37 IS_A logic_link;

OBJECT logic_38 IS_A logic_link;

OBJECT logic_39 IS_A logic_link;

OBJECT logic_4 IS_A logic_link;

OBJECT logic_40 IS_A logic_link;

OBJECT logic_41 IS_A logic_link;

OBJECT logic_42 IS_A logic_link;

OBJECT logic_43 IS_A logic_link;

OBJECT logic_44 IS_A logic_link;

OBJECT logic_45 IS_A logic_link;

OBJECT logic_46 IS_A logic_link;

OBJECT logic_47 IS_A logic_link;

OBJECT logic_48 IS_A logic_link;

OBJECT logic_49 IS_A logic_link;

OBJECT logic_5 IS_A logic_link;

OBJECT logic_50 IS_A logic_link;

OBJECT logic_51 IS_A logic_link;

OBJECT logic_52 IS_A logic_link;

OBJECT logic_53 IS_A logic_link;

OBJECT logic_54 IS_A logic_link;

OBJECT logic_55 IS_A logic_link;

OBJECT logic_56 IS_A logic_link;

OBJECT logic_57 IS_A logic_link;

OBJECT logic_58 IS_A logic_link;

OBJECT logic_59 IS_A logic_link;

OBJECT logic_6 IS_A logic_link;

OBJECT logic_60 IS_A logic_link;

OBJECT logic_61 IS_A logic_link;

OBJECT logic_62 IS_A logic_link;

OBJECT logic_63 IS_A logic_link;

OBJECT logic_64 IS_A logic_link;

OBJECT logic_65 IS_A logic_link;

OBJECT logic_66 IS_A logic_link;

OBJECT logic_67 IS_A logic_link;

OBJECT logic_68 IS_A logic_link;

OBJECT logic_69 IS_A logic_link;

OBJECT logic_7 IS_A logic_link;

OBJECT logic_70 IS_A logic_link;

OBJECT logic_71 IS_A logic_link;

OBJECT logic_72 IS_A logic_link;

OBJECT logic_73 IS_A logic_link;

OBJECT logic_74 IS_A logic_link;

OBJECT logic_75 IS_A logic_link;

OBJECT logic_76 IS_A logic_link;

OBJECT logic_77 IS_A logic_link;

OBJECT logic_78 IS_A logic_link;

OBJECT logic_79 IS_A logic_link;

OBJECT logic_8 IS_A logic_link;

OBJECT logic_80 IS_A logic_link;

OBJECT logic_81 IS_A logic_link;

OBJECT logic_82 IS_A logic_link;

OBJECT logic_83 IS_A logic_link;

OBJECT logic_84 IS_A logic_link;

OBJECT logic_85 IS_A logic_link;

OBJECT logic_86 IS_A logic_link;

OBJECT logic_87 IS_A logic_link;

OBJECT logic_88 IS_A logic_link;

OBJECT logic_89 IS_A logic_link;

OBJECT logic_9 IS_A logic_link;

OBJECT logic_90 IS_A logic_link;

OBJECT logic_91 IS_A logic_link;

OBJECT logic_92 IS_A logic_link;

OBJECT logic_93 IS_A logic_link;

OBJECT logic_94 IS_A logic_link;

OBJECT logic_95 IS_A logic_link;

OBJECT logic_96 IS_A logic_link;

OBJECT logic_97 IS_A logic_link;

OBJECT logic_98 IS_A logic_link;

OBJECT logic_99 IS_A logic_link;

OBJECT t_dep_0 IS_A trigger_link;
	INTERFACE
	  target
		= i_A48;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_1 IS_A trigger_link;
	INTERFACE
	  target
		= i_A49;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_10 IS_A trigger_link;
	INTERFACE
	  target
		= i_A46;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_11 IS_A trigger_link;
	INTERFACE
	  target
		= i_A47;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_12 IS_A trigger_link;
	INTERFACE
	  target
		= i_A50;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_13 IS_A trigger_link;
	INTERFACE
	  target
		= i_A51;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_14 IS_A trigger_link;
	INTERFACE
	  target
		= i_A52;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_15 IS_A trigger_link;
	INTERFACE
	  target
		= i_A53;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_2 IS_A trigger_link;
	INTERFACE
	  target
		= i_A36;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_3 IS_A trigger_link;
	INTERFACE
	  target
		= i_A37;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_4 IS_A trigger_link;
	INTERFACE
	  target
		= i_A40;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_5 IS_A trigger_link;
	INTERFACE
	  target
		= i_A38;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_6 IS_A trigger_link;
	INTERFACE
	  target
		= i_A39;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_7 IS_A trigger_link;
	INTERFACE
	  target
		= i_A43;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_8 IS_A trigger_link;
	INTERFACE
	  target
		= i_A42;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_9 IS_A trigger_link;
	INTERFACE
	  target
		= i_A45;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_seq_0 IS_A trigger_link;
	INTERFACE
	  target
		= A60;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_1 IS_A trigger_link;
	INTERFACE
	  target
		= A65;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_2 IS_A trigger_link;
	INTERFACE
	  target
		= A71;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_3 IS_A trigger_link;
	INTERFACE
	  target
		= A76;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_4 IS_A trigger_link;
	INTERFACE
	  target
		= A82;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_5 IS_A trigger_link;
	INTERFACE
	  target
		= A87;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_6 IS_A trigger_link;
	INTERFACE
	  target
		= A93;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_7 IS_A trigger_link;
	INTERFACE
	  target
		= A98;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT __ARBRE__EIRM IS_A FIGARO;
	CONSTANT
	  Profil1
		DOMAIN BOOLEAN
		= TRUE;
	  no_trim
		DOMAIN BOOLEAN
		= FALSE;
	  trim_article
		DOMAIN BOOLEAN
		= TRUE;
	  no_repair
		DOMAIN BOOLEAN
		= FALSE;

