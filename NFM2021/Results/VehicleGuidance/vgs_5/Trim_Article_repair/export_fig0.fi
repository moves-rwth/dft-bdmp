STEPS_ORDER
	__ARBRE__;
	default_step;
	initialization;
	propagate_effect_S;
	propagate_effect_required;
	propagate_leaves;
	tops;
GROUP_NAMES
	V3_simu_group;

OBJECT OPTIONS IS_A GLOBAL_TYPE;
	CONSTANT
	  trimming
		DOMAIN BOOLEAN
		= TRUE;
	  trimming_option
		DOMAIN 'according_to_article' 'maximum'
		= 'according_to_article';
	  repairable_system
		DOMAIN BOOLEAN
		= TRUE;

OBJECT A0 IS_A or_gate;
	INTERFACE
	  sons
		= A2 A23 A26 A31 A34 A37 A41 A72;
	  fathers
		= UE_1;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF UE_1
		THEN required OF A0 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF UE_1 AND (NOT S OF UE_1)
		THEN relevant_evt OF A0 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A0 <-- S OF A0;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((((((S OF A2 OR S OF A23) OR S OF A26) OR S OF A31) OR S OF
		  A34) OR S OF A37) OR S OF A41) OR S OF A72
		THEN S OF A0 <-- TRUE;

OBJECT A1 IS_A f_leaf;
	INTERFACE
	  fathers
		= A30;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A30
		THEN required OF A1 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A30 AND (NOT S OF A30)
		THEN relevant_evt OF A1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A1 <-- S OF A1;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A1 = TRUE
		THEN S OF A1 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A1 = FALSE) AND (required OF A1 AND relevant_evt
		  OF A1)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A1 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A1 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A1 <-- FALSE;

OBJECT A10 IS_A f_leaf;
	INTERFACE
	  fathers
		= A11;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A11
		THEN required OF A10 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A11 AND (NOT S OF A11)
		THEN relevant_evt OF A10 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A10 <-- S OF A10;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A10 = TRUE
		THEN S OF A10 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A10 = FALSE) AND (required OF A10 AND relevant_evt
		  OF A10)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A10 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A10 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A10 <-- FALSE;

OBJECT A100 IS_A and_gate;
	INTERFACE
	  sons
		= A97 A99;
	  fathers
		= A107;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A107
		THEN required OF A100 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A107 AND (NOT S OF A107)
		THEN relevant_evt OF A100 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A100 <-- S OF A100;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A97 AND S OF A99
		THEN S OF A100 <-- TRUE;

OBJECT A102 IS_A f_leaf;
	INTERFACE
	  fathers
		= A105;
	  triggered_by
		= A104;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A104
		THEN required OF A102 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A105 AND (NOT S OF A105)
		THEN relevant_evt OF A102 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A102 <-- S OF A102;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A102 = TRUE
		THEN S OF A102 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A102 = FALSE) AND (required OF A102 AND
		  relevant_evt OF A102)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-07)
		  INDUCING failF OF A102 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A102 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A102 <-- FALSE;

OBJECT A103 IS_A f_leaf;
	INTERFACE
	  fathers
		= A107;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-08;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A107
		THEN required OF A103 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A107 AND (NOT S OF A107)
		THEN relevant_evt OF A103 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A103 <-- S OF A103;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A103 = TRUE
		THEN S OF A103 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A103 = FALSE) AND (required OF A103 AND
		  relevant_evt OF A103)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-08)
		  INDUCING failF OF A103 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A103 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A103 <-- FALSE;

OBJECT A104 IS_A f_leaf;
	INTERFACE
	  fathers
		= A105;
	  triggers
		= A102;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A105
		THEN required OF A104 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A105 AND (NOT S OF A105)) OR (NOT S OF A102)
		THEN relevant_evt OF A104 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A104 <-- S OF A104;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A104 = TRUE
		THEN S OF A104 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A104 = FALSE) AND (required OF A104 AND
		  relevant_evt OF A104)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A104 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A104 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A104 <-- FALSE;

OBJECT A105 IS_A and_gate;
	INTERFACE
	  sons
		= A102 A104;
	  fathers
		= A107;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A107
		THEN required OF A105 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A107 AND (NOT S OF A107)
		THEN relevant_evt OF A105 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A105 <-- S OF A105;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A102 AND S OF A104
		THEN S OF A105 <-- TRUE;

OBJECT A107 IS_A or_gate;
	INTERFACE
	  sons
		= A100 A103 A105 A98;
	  fathers
		= A11 A14 A17 A20 A26 A5 A50 A53 A56 A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (((((((((NOT required OF A11) AND (NOT required OF A14)) AND
		  (NOT required OF A17)) AND (NOT required OF A20)) AND (NOT
		  required OF A26)) AND (NOT required OF A5)) AND (NOT
		  required OF A50)) AND (NOT required OF A53)) AND (NOT
		  required OF A56)) AND (NOT required OF A8)
		THEN required OF A107 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (((((((((relevant_evt OF A11 AND (NOT S OF A11)) OR (
		  relevant_evt OF A14 AND (NOT S OF A14))) OR (relevant_evt OF
		  A17 AND (NOT S OF A17))) OR (relevant_evt OF A20 AND (NOT S
		  OF A20))) OR (relevant_evt OF A26 AND (NOT S OF A26))) OR (
		  relevant_evt OF A5 AND (NOT S OF A5))) OR (relevant_evt OF
		  A50 AND (NOT S OF A50))) OR (relevant_evt OF A53 AND (NOT S
		  OF A53))) OR (relevant_evt OF A56 AND (NOT S OF A56))) OR (
		  relevant_evt OF A8 AND (NOT S OF A8))
		THEN relevant_evt OF A107 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A107 <-- S OF A107;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A100 OR S OF A103) OR S OF A105) OR S OF A98
		THEN S OF A107 <-- TRUE;

OBJECT A11 IS_A or_gate;
	INTERFACE
	  sons
		= A10 A107 A46 A61 A85;
	  fathers
		= A70;
	  triggers
		= i_A45;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A70
		THEN required OF A11 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A70 AND (NOT S OF A70)) OR (NOT S OF i_A45)
		THEN relevant_evt OF A11 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A11 <-- S OF A11;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A10 OR S OF A107) OR S OF A46) OR S OF A61) OR S OF
		  A85
		THEN S OF A11 <-- TRUE;

OBJECT A13 IS_A f_leaf;
	INTERFACE
	  fathers
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A14
		THEN required OF A13 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A14 AND (NOT S OF A14)
		THEN relevant_evt OF A13 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A13 <-- S OF A13;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A13 = TRUE
		THEN S OF A13 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A13 = FALSE) AND (required OF A13 AND relevant_evt
		  OF A13)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A13 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A13 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A13 <-- FALSE;

OBJECT A14 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A13 A45 A54 A85;
	  fathers
		= A70;
	  triggers
		= i_A46 i_A52;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A70
		THEN required OF A14 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A70 AND (NOT S OF A70)) OR ((NOT S OF i_A46)
		   OR (NOT S OF i_A52))
		THEN relevant_evt OF A14 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A14 <-- S OF A14;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A107 OR S OF A13) OR S OF A45) OR S OF A54) OR S OF
		  A85
		THEN S OF A14 <-- TRUE;

OBJECT A16 IS_A f_leaf;
	INTERFACE
	  fathers
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A17
		THEN required OF A16 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A17 AND (NOT S OF A17)
		THEN relevant_evt OF A16 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A16 <-- S OF A16;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A16 = TRUE
		THEN S OF A16 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A16 = FALSE) AND (required OF A16 AND relevant_evt
		  OF A16)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A16 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A16 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A16 <-- FALSE;

OBJECT A17 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A16 A48 A62 A85;
	  fathers
		= A40;
	  triggers
		= i_A47;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A40
		THEN required OF A17 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A40 AND (NOT S OF A40)) OR (NOT S OF i_A47)
		THEN relevant_evt OF A17 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A17 <-- S OF A17;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A107 OR S OF A16) OR S OF A48) OR S OF A62) OR S OF
		  A85
		THEN S OF A17 <-- TRUE;

OBJECT A19 IS_A f_leaf;
	INTERFACE
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A19 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A19 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A19 <-- S OF A19;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A19 = TRUE
		THEN S OF A19 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A19 = FALSE) AND (required OF A19 AND relevant_evt
		  OF A19)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A19 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A19 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A19 <-- FALSE;

OBJECT A2 IS_A or_gate;
	INTERFACE
	  sons
		= A30;
	  fathers
		= A0;
	  triggers
		= i_A60 i_A61 i_A62;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A2 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (((NOT S OF i_A60)
		  OR (NOT S OF i_A61)) OR (NOT S OF i_A62))
		THEN relevant_evt OF A2 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A2 <-- S OF A2;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A30
		THEN S OF A2 <-- TRUE;

OBJECT A20 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A19 A47 A57 A85;
	  fathers
		= A40;
	  triggers
		= i_A48 i_A55;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A40
		THEN required OF A20 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A40 AND (NOT S OF A40)) OR ((NOT S OF i_A48)
		   OR (NOT S OF i_A55))
		THEN relevant_evt OF A20 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A20 <-- S OF A20;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A107 OR S OF A19) OR S OF A47) OR S OF A57) OR S OF
		  A85
		THEN S OF A20 <-- TRUE;

OBJECT A22 IS_A f_leaf;
	INTERFACE
	  fathers
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A23
		THEN required OF A22 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A23 AND (NOT S OF A23)
		THEN relevant_evt OF A22 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A22 <-- S OF A22;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A22 = TRUE
		THEN S OF A22 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A22 = FALSE) AND (required OF A22 AND relevant_evt
		  OF A22)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A22 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A22 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A22 <-- FALSE;

OBJECT A23 IS_A or_gate;
	INTERFACE
	  sons
		= A22 A59 A74 A96;
	  fathers
		= A0;
	  triggers
		= i_A51 i_A54 i_A57 i_A58;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A23 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR ((((NOT S OF i_A51)
		   OR (NOT S OF i_A54)) OR (NOT S OF i_A57)) OR (NOT S OF
		  i_A58))
		THEN relevant_evt OF A23 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A23 <-- S OF A23;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A22 OR S OF A59) OR S OF A74) OR S OF A96
		THEN S OF A23 <-- TRUE;

OBJECT A25 IS_A f_leaf;
	INTERFACE
	  fathers
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A26
		THEN required OF A25 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A26 AND (NOT S OF A26)
		THEN relevant_evt OF A25 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A25 <-- S OF A25;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A25 = TRUE
		THEN S OF A25 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A25 = FALSE) AND (required OF A25 AND relevant_evt
		  OF A25)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A25 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A25 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A25 <-- FALSE;

OBJECT A26 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A25 A58 A63 A64 A65 A66 A96;
	  fathers
		= A0;
	  triggers
		= i_A59;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A26 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A59)
		THEN relevant_evt OF A26 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A26 <-- S OF A26;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((((((S OF A107 OR S OF A25) OR S OF A58) OR S OF A63) OR S
		  OF A64) OR S OF A65) OR S OF A66) OR S OF A96
		THEN S OF A26 <-- TRUE;

OBJECT A28 IS_A f_leaf;
	INTERFACE
	  fathers
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A31
		THEN required OF A28 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A31 AND (NOT S OF A31)
		THEN relevant_evt OF A28 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A28 <-- S OF A28;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A28 = TRUE
		THEN S OF A28 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A28 = FALSE) AND (required OF A28 AND relevant_evt
		  OF A28)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A28 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A28 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A28 <-- FALSE;

OBJECT A29 IS_A f_leaf;
	INTERFACE
	  fathers
		= A30;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A30
		THEN required OF A29 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A30 AND (NOT S OF A30)
		THEN relevant_evt OF A29 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A29 <-- S OF A29;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A29 = TRUE
		THEN S OF A29 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A29 = FALSE) AND (required OF A29 AND relevant_evt
		  OF A29)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A29 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A29 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A29 <-- FALSE;

OBJECT A30 IS_A k_out_of_n_gate;
	INTERFACE
	  sons
		= A1 A29 A67 A68;
	  fathers
		= A2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  K
		DOMAIN INTEGER
		= 3;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A2
		THEN required OF A30 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A2 AND (NOT S OF A2)
		THEN relevant_evt OF A30 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A30 <-- S OF A30;
	  xx27
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (AT_LEAST 3 WITHIN (S OF A1, S OF A29, S OF A67, S OF A68))
		THEN S OF A30 <-- TRUE;

OBJECT A31 IS_A or_gate;
	INTERFACE
	  sons
		= A28 A96;
	  fathers
		= A0;
	  triggers
		= i_A63;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A31 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A63)
		THEN relevant_evt OF A31 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A31 <-- S OF A31;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A28 OR S OF A96
		THEN S OF A31 <-- TRUE;

OBJECT A33 IS_A f_leaf;
	INTERFACE
	  fathers
		= A34;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A34
		THEN required OF A33 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A34 AND (NOT S OF A34)
		THEN relevant_evt OF A33 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A33 <-- S OF A33;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A33 = TRUE
		THEN S OF A33 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A33 = FALSE) AND (required OF A33 AND relevant_evt
		  OF A33)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A33 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A33 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A33 <-- FALSE;

OBJECT A34 IS_A or_gate;
	INTERFACE
	  sons
		= A33;
	  fathers
		= A0;
	  triggers
		= i_A64;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A34 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A64)
		THEN relevant_evt OF A34 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A34 <-- S OF A34;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A33
		THEN S OF A34 <-- TRUE;

OBJECT A36 IS_A f_leaf;
	INTERFACE
	  fathers
		= A37;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A37
		THEN required OF A36 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A37 AND (NOT S OF A37)
		THEN relevant_evt OF A36 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A36 <-- S OF A36;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A36 = TRUE
		THEN S OF A36 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A36 = FALSE) AND (required OF A36 AND relevant_evt
		  OF A36)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A36 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A36 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A36 <-- FALSE;

OBJECT A37 IS_A or_gate;
	INTERFACE
	  sons
		= A36;
	  fathers
		= A0;
	  triggers
		= i_A65;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A37 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A65)
		THEN relevant_evt OF A37 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A37 <-- S OF A37;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A36
		THEN S OF A37 <-- TRUE;

OBJECT A39 IS_A f_leaf;
	INTERFACE
	  fathers
		= A41;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 2e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A41
		THEN required OF A39 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A41 AND (NOT S OF A41)
		THEN relevant_evt OF A39 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A39 <-- S OF A39;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A39 = TRUE
		THEN S OF A39 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A39 = FALSE) AND (required OF A39 AND relevant_evt
		  OF A39)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (2e-07)
		  INDUCING failF OF A39 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A39 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A39 <-- FALSE;

OBJECT A4 IS_A f_leaf;
	INTERFACE
	  fathers
		= A5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A5
		THEN required OF A4 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A5 AND (NOT S OF A5)
		THEN relevant_evt OF A4 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A4 <-- S OF A4;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A4 = TRUE
		THEN S OF A4 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A4 = FALSE) AND (required OF A4 AND relevant_evt
		  OF A4)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A4 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A4 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A4 <-- FALSE;

OBJECT A40 IS_A or_gate;
	INTERFACE
	  sons
		= A17 A20;
	  fathers
		= A71;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A71
		THEN required OF A40 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A71 AND (NOT S OF A71)
		THEN relevant_evt OF A40 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A40 <-- S OF A40;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A17 OR S OF A20
		THEN S OF A40 <-- TRUE;

OBJECT A41 IS_A or_gate;
	INTERFACE
	  sons
		= A39;
	  fathers
		= A0;
	  triggers
		= i_A66;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A41 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A0 AND (NOT S OF A0)) OR (NOT S OF i_A66)
		THEN relevant_evt OF A41 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A41 <-- S OF A41;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A39
		THEN S OF A41 <-- TRUE;

OBJECT A43 IS_A or_gate;
	INTERFACE
	  sons
		= f_A43 i_A43;
	  fathers
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A8
		THEN required OF A43 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A8 AND (NOT S OF A8)
		THEN relevant_evt OF A43 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A43 <-- S OF A43;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A43 OR S OF i_A43
		THEN S OF A43 <-- TRUE;

OBJECT A44 IS_A or_gate;
	INTERFACE
	  sons
		= f_A44 i_A44;
	  fathers
		= A5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A5
		THEN required OF A44 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A5 AND (NOT S OF A5)
		THEN relevant_evt OF A44 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A44 <-- S OF A44;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A44 OR S OF i_A44
		THEN S OF A44 <-- TRUE;

OBJECT A45 IS_A or_gate;
	INTERFACE
	  sons
		= f_A45 i_A45;
	  fathers
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A14
		THEN required OF A45 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A14 AND (NOT S OF A14)
		THEN relevant_evt OF A45 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A45 <-- S OF A45;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A45 OR S OF i_A45
		THEN S OF A45 <-- TRUE;

OBJECT A46 IS_A or_gate;
	INTERFACE
	  sons
		= f_A46 i_A46;
	  fathers
		= A11;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A11
		THEN required OF A46 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A11 AND (NOT S OF A11)
		THEN relevant_evt OF A46 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A46 <-- S OF A46;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A46 OR S OF i_A46
		THEN S OF A46 <-- TRUE;

OBJECT A47 IS_A or_gate;
	INTERFACE
	  sons
		= f_A47 i_A47;
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A47 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A47 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A47 <-- S OF A47;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A47 OR S OF i_A47
		THEN S OF A47 <-- TRUE;

OBJECT A48 IS_A or_gate;
	INTERFACE
	  sons
		= f_A48 i_A48;
	  fathers
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A17
		THEN required OF A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A17 AND (NOT S OF A17)
		THEN relevant_evt OF A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A48 <-- S OF A48;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A48 OR S OF i_A48
		THEN S OF A48 <-- TRUE;

OBJECT A49 IS_A or_gate;
	INTERFACE
	  sons
		= f_A49 i_A49;
	  fathers
		= A50;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A50
		THEN required OF A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A50 AND (NOT S OF A50)
		THEN relevant_evt OF A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A49 <-- S OF A49;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A49 OR S OF i_A49
		THEN S OF A49 <-- TRUE;

OBJECT A5 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A4 A44 A60 A85;
	  fathers
		= A69;
	  triggers
		= i_A43;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A69
		THEN required OF A5 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A69 AND (NOT S OF A69)) OR (NOT S OF i_A43)
		THEN relevant_evt OF A5 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A5 <-- S OF A5;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A107 OR S OF A4) OR S OF A44) OR S OF A60) OR S OF
		  A85
		THEN S OF A5 <-- TRUE;

OBJECT A50 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A49;
	  fathers
		= A74;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A74
		THEN required OF A50 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A74 AND (NOT S OF A74)
		THEN relevant_evt OF A50 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A50 <-- S OF A50;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A107 OR S OF A49
		THEN S OF A50 <-- TRUE;

OBJECT A51 IS_A or_gate;
	INTERFACE
	  sons
		= f_A51 i_A51;
	  fathers
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A8
		THEN required OF A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A8 AND (NOT S OF A8)
		THEN relevant_evt OF A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A51 <-- S OF A51;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A51 OR S OF i_A51
		THEN S OF A51 <-- TRUE;

OBJECT A52 IS_A or_gate;
	INTERFACE
	  sons
		= f_A52 i_A52;
	  fathers
		= A53;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A53
		THEN required OF A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A53 AND (NOT S OF A53)
		THEN relevant_evt OF A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A52 <-- S OF A52;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A52 OR S OF i_A52
		THEN S OF A52 <-- TRUE;

OBJECT A53 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A52;
	  fathers
		= A73;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A73
		THEN required OF A53 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A73 AND (NOT S OF A73)
		THEN relevant_evt OF A53 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A53 <-- S OF A53;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A107 OR S OF A52
		THEN S OF A53 <-- TRUE;

OBJECT A54 IS_A or_gate;
	INTERFACE
	  sons
		= f_A54 i_A54;
	  fathers
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A14
		THEN required OF A54 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A14 AND (NOT S OF A14)
		THEN relevant_evt OF A54 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A54 <-- S OF A54;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A54 OR S OF i_A54
		THEN S OF A54 <-- TRUE;

OBJECT A55 IS_A or_gate;
	INTERFACE
	  sons
		= f_A55 i_A55;
	  fathers
		= A56;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A56
		THEN required OF A55 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A56 AND (NOT S OF A56)
		THEN relevant_evt OF A55 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A55 <-- S OF A55;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A55 OR S OF i_A55
		THEN S OF A55 <-- TRUE;

OBJECT A56 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A55;
	  fathers
		= A73;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A73
		THEN required OF A56 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A73 AND (NOT S OF A73)
		THEN relevant_evt OF A56 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A56 <-- S OF A56;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A107 OR S OF A55
		THEN S OF A56 <-- TRUE;

OBJECT A57 IS_A or_gate;
	INTERFACE
	  sons
		= f_A57 i_A57;
	  fathers
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A20
		THEN required OF A57 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A20 AND (NOT S OF A20)
		THEN relevant_evt OF A57 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A57 <-- S OF A57;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A57 OR S OF i_A57
		THEN S OF A57 <-- TRUE;

OBJECT A58 IS_A or_gate;
	INTERFACE
	  sons
		= f_A58 i_A58;
	  fathers
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A26
		THEN required OF A58 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A26 AND (NOT S OF A26)
		THEN relevant_evt OF A58 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A58 <-- S OF A58;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A58 OR S OF i_A58
		THEN S OF A58 <-- TRUE;

OBJECT A59 IS_A or_gate;
	INTERFACE
	  sons
		= f_A59 i_A59;
	  fathers
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A23
		THEN required OF A59 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A23 AND (NOT S OF A23)
		THEN relevant_evt OF A59 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A59 <-- S OF A59;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A59 OR S OF i_A59
		THEN S OF A59 <-- TRUE;

OBJECT A60 IS_A or_gate;
	INTERFACE
	  sons
		= f_A60 i_A60;
	  fathers
		= A5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A5
		THEN required OF A60 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A5 AND (NOT S OF A5)
		THEN relevant_evt OF A60 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A60 <-- S OF A60;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A60 OR S OF i_A60
		THEN S OF A60 <-- TRUE;

OBJECT A61 IS_A or_gate;
	INTERFACE
	  sons
		= f_A61 i_A61;
	  fathers
		= A11;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A11
		THEN required OF A61 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A11 AND (NOT S OF A11)
		THEN relevant_evt OF A61 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A61 <-- S OF A61;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A61 OR S OF i_A61
		THEN S OF A61 <-- TRUE;

OBJECT A62 IS_A or_gate;
	INTERFACE
	  sons
		= f_A62 i_A62;
	  fathers
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A17
		THEN required OF A62 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A17 AND (NOT S OF A17)
		THEN relevant_evt OF A62 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A62 <-- S OF A62;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A62 OR S OF i_A62
		THEN S OF A62 <-- TRUE;

OBJECT A63 IS_A or_gate;
	INTERFACE
	  sons
		= f_A63 i_A63;
	  fathers
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A26
		THEN required OF A63 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A26 AND (NOT S OF A26)
		THEN relevant_evt OF A63 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A63 <-- S OF A63;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A63 OR S OF i_A63
		THEN S OF A63 <-- TRUE;

OBJECT A64 IS_A or_gate;
	INTERFACE
	  sons
		= f_A64 i_A64;
	  fathers
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A26
		THEN required OF A64 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A26 AND (NOT S OF A26)
		THEN relevant_evt OF A64 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A64 <-- S OF A64;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A64 OR S OF i_A64
		THEN S OF A64 <-- TRUE;

OBJECT A65 IS_A or_gate;
	INTERFACE
	  sons
		= f_A65 i_A65;
	  fathers
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A26
		THEN required OF A65 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A26 AND (NOT S OF A26)
		THEN relevant_evt OF A65 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A65 <-- S OF A65;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A65 OR S OF i_A65
		THEN S OF A65 <-- TRUE;

OBJECT A66 IS_A or_gate;
	INTERFACE
	  sons
		= f_A66 i_A66;
	  fathers
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A26
		THEN required OF A66 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A26 AND (NOT S OF A26)
		THEN relevant_evt OF A66 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A66 <-- S OF A66;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF f_A66 OR S OF i_A66
		THEN S OF A66 <-- TRUE;

OBJECT A67 IS_A f_leaf;
	INTERFACE
	  fathers
		= A30;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A30
		THEN required OF A67 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A30 AND (NOT S OF A30)
		THEN relevant_evt OF A67 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A67 <-- S OF A67;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A67 = TRUE
		THEN S OF A67 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A67 = FALSE) AND (required OF A67 AND relevant_evt
		  OF A67)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A67 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A67 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A67 <-- FALSE;

OBJECT A68 IS_A f_leaf;
	INTERFACE
	  fathers
		= A30;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A30
		THEN required OF A68 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A30 AND (NOT S OF A30)
		THEN relevant_evt OF A68 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A68 <-- S OF A68;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A68 = TRUE
		THEN S OF A68 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A68 = FALSE) AND (required OF A68 AND relevant_evt
		  OF A68)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A68 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A68 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A68 <-- FALSE;

OBJECT A69 IS_A or_gate;
	INTERFACE
	  sons
		= A5 A8;
	  fathers
		= A72;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A72
		THEN required OF A69 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A72 AND (NOT S OF A72)
		THEN relevant_evt OF A69 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A69 <-- S OF A69;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A5 OR S OF A8
		THEN S OF A69 <-- TRUE;

OBJECT A7 IS_A f_leaf;
	INTERFACE
	  fathers
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A8
		THEN required OF A7 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A8 AND (NOT S OF A8)
		THEN relevant_evt OF A7 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A7 <-- S OF A7;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A7 = TRUE
		THEN S OF A7 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A7 = FALSE) AND (required OF A7 AND relevant_evt
		  OF A7)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF A7 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A7 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A7 <-- FALSE;

OBJECT A70 IS_A or_gate;
	INTERFACE
	  sons
		= A11 A14;
	  fathers
		= A71;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A71
		THEN required OF A70 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A71 AND (NOT S OF A71)
		THEN relevant_evt OF A70 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A70 <-- S OF A70;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A11 OR S OF A14
		THEN S OF A70 <-- TRUE;

OBJECT A71 IS_A and_gate;
	INTERFACE
	  sons
		= A40 A70;
	  fathers
		= A72;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A72
		THEN required OF A71 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A72 AND (NOT S OF A72)
		THEN relevant_evt OF A71 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A71 <-- S OF A71;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A40 AND S OF A70
		THEN S OF A71 <-- TRUE;

OBJECT A72 IS_A and_gate;
	INTERFACE
	  sons
		= A69 A71;
	  fathers
		= A0;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A0
		THEN required OF A72 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A0 AND (NOT S OF A0)
		THEN relevant_evt OF A72 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A72 <-- S OF A72;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A69 AND S OF A71
		THEN S OF A72 <-- TRUE;

OBJECT A73 IS_A and_gate;
	INTERFACE
	  sons
		= A53 A56;
	  fathers
		= A74;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A74
		THEN required OF A73 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A74 AND (NOT S OF A74)
		THEN relevant_evt OF A73 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A73 <-- S OF A73;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A53 AND S OF A56
		THEN S OF A73 <-- TRUE;

OBJECT A74 IS_A and_gate;
	INTERFACE
	  sons
		= A50 A73;
	  fathers
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A23
		THEN required OF A74 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A23 AND (NOT S OF A23)
		THEN relevant_evt OF A74 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A74 <-- S OF A74;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A50 AND S OF A73
		THEN S OF A74 <-- TRUE;

OBJECT A75 IS_A f_leaf;
	INTERFACE
	  fathers
		= A78;
	  triggered_by
		= A77;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A77
		THEN required OF A75 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A78 AND (NOT S OF A78)
		THEN relevant_evt OF A75 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A75 <-- S OF A75;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A75 = TRUE
		THEN S OF A75 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A75 = FALSE) AND (required OF A75 AND relevant_evt
		  OF A75)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-05)
		  INDUCING failF OF A75 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A75 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A75 <-- FALSE;

OBJECT A76 IS_A f_leaf;
	INTERFACE
	  fathers
		= A85;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A85
		THEN required OF A76 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A85 AND (NOT S OF A85)
		THEN relevant_evt OF A76 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A76 <-- S OF A76;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A76 = TRUE
		THEN S OF A76 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A76 = FALSE) AND (required OF A76 AND relevant_evt
		  OF A76)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A76 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A76 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A76 <-- FALSE;

OBJECT A77 IS_A f_leaf;
	INTERFACE
	  fathers
		= A78;
	  triggers
		= A75;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A78
		THEN required OF A77 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A78 AND (NOT S OF A78)) OR (NOT S OF A75)
		THEN relevant_evt OF A77 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A77 <-- S OF A77;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A77 = TRUE
		THEN S OF A77 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A77 = FALSE) AND (required OF A77 AND relevant_evt
		  OF A77)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A77 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A77 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A77 <-- FALSE;

OBJECT A78 IS_A and_gate;
	INTERFACE
	  sons
		= A75 A77;
	  fathers
		= A85;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A85
		THEN required OF A78 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A85 AND (NOT S OF A85)
		THEN relevant_evt OF A78 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A78 <-- S OF A78;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A75 AND S OF A77
		THEN S OF A78 <-- TRUE;

OBJECT A8 IS_A or_gate;
	INTERFACE
	  sons
		= A107 A43 A51 A7 A85;
	  fathers
		= A69;
	  triggers
		= i_A44 i_A49;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A69
		THEN required OF A8 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A69 AND (NOT S OF A69)) OR ((NOT S OF i_A44)
		   OR (NOT S OF i_A49))
		THEN relevant_evt OF A8 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A8 <-- S OF A8;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF (((S OF A107 OR S OF A43) OR S OF A51) OR S OF A7) OR S OF
		  A85
		THEN S OF A8 <-- TRUE;

OBJECT A80 IS_A f_leaf;
	INTERFACE
	  fathers
		= A83;
	  triggered_by
		= A82;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A82
		THEN required OF A80 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A83 AND (NOT S OF A83)
		THEN relevant_evt OF A80 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A80 <-- S OF A80;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A80 = TRUE
		THEN S OF A80 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A80 = FALSE) AND (required OF A80 AND relevant_evt
		  OF A80)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-06)
		  INDUCING failF OF A80 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A80 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A80 <-- FALSE;

OBJECT A81 IS_A f_leaf;
	INTERFACE
	  fathers
		= A85;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A85
		THEN required OF A81 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A85 AND (NOT S OF A85)
		THEN relevant_evt OF A81 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A81 <-- S OF A81;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A81 = TRUE
		THEN S OF A81 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A81 = FALSE) AND (required OF A81 AND relevant_evt
		  OF A81)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A81 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A81 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A81 <-- FALSE;

OBJECT A82 IS_A f_leaf;
	INTERFACE
	  fathers
		= A83;
	  triggers
		= A80;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-05;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A83
		THEN required OF A82 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A83 AND (NOT S OF A83)) OR (NOT S OF A80)
		THEN relevant_evt OF A82 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A82 <-- S OF A82;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A82 = TRUE
		THEN S OF A82 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A82 = FALSE) AND (required OF A82 AND relevant_evt
		  OF A82)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-05)
		  INDUCING failF OF A82 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A82 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A82 <-- FALSE;

OBJECT A83 IS_A and_gate;
	INTERFACE
	  sons
		= A80 A82;
	  fathers
		= A85;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A85
		THEN required OF A83 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A85 AND (NOT S OF A85)
		THEN relevant_evt OF A83 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A83 <-- S OF A83;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A80 AND S OF A82
		THEN S OF A83 <-- TRUE;

OBJECT A85 IS_A or_gate;
	INTERFACE
	  sons
		= A76 A78 A81 A83;
	  fathers
		= A11 A14 A17 A20 A5 A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (((((NOT required OF A11) AND (NOT required OF A14)) AND (
		  NOT required OF A17)) AND (NOT required OF A20)) AND (NOT
		  required OF A5)) AND (NOT required OF A8)
		THEN required OF A85 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (((((relevant_evt OF A11 AND (NOT S OF A11)) OR (
		  relevant_evt OF A14 AND (NOT S OF A14))) OR (relevant_evt OF
		  A17 AND (NOT S OF A17))) OR (relevant_evt OF A20 AND (NOT S
		  OF A20))) OR (relevant_evt OF A5 AND (NOT S OF A5))) OR (
		  relevant_evt OF A8 AND (NOT S OF A8))
		THEN relevant_evt OF A85 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A85 <-- S OF A85;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A76 OR S OF A78) OR S OF A81) OR S OF A83
		THEN S OF A85 <-- TRUE;

OBJECT A86 IS_A f_leaf;
	INTERFACE
	  fathers
		= A89;
	  triggered_by
		= A88;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A88
		THEN required OF A86 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A89 AND (NOT S OF A89)
		THEN relevant_evt OF A86 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A86 <-- S OF A86;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A86 = TRUE
		THEN S OF A86 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A86 = FALSE) AND (required OF A86 AND relevant_evt
		  OF A86)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-06)
		  INDUCING failF OF A86 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A86 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A86 <-- FALSE;

OBJECT A87 IS_A f_leaf;
	INTERFACE
	  fathers
		= A96;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A96
		THEN required OF A87 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A96 AND (NOT S OF A96)
		THEN relevant_evt OF A87 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A87 <-- S OF A87;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A87 = TRUE
		THEN S OF A87 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A87 = FALSE) AND (required OF A87 AND relevant_evt
		  OF A87)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A87 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A87 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A87 <-- FALSE;

OBJECT A88 IS_A f_leaf;
	INTERFACE
	  fathers
		= A89;
	  triggers
		= A86;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A89
		THEN required OF A88 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A89 AND (NOT S OF A89)) OR (NOT S OF A86)
		THEN relevant_evt OF A88 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A88 <-- S OF A88;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A88 = TRUE
		THEN S OF A88 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A88 = FALSE) AND (required OF A88 AND relevant_evt
		  OF A88)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A88 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A88 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A88 <-- FALSE;

OBJECT A89 IS_A and_gate;
	INTERFACE
	  sons
		= A86 A88;
	  fathers
		= A96;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A96
		THEN required OF A89 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A96 AND (NOT S OF A96)
		THEN relevant_evt OF A89 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A89 <-- S OF A89;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A86 AND S OF A88
		THEN S OF A89 <-- TRUE;

OBJECT A91 IS_A f_leaf;
	INTERFACE
	  fathers
		= A94;
	  triggered_by
		= A93;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A93
		THEN required OF A91 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A94 AND (NOT S OF A94)
		THEN relevant_evt OF A91 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A91 <-- S OF A91;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A91 = TRUE
		THEN S OF A91 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A91 = FALSE) AND (required OF A91 AND relevant_evt
		  OF A91)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-07)
		  INDUCING failF OF A91 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A91 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A91 <-- FALSE;

OBJECT A92 IS_A f_leaf;
	INTERFACE
	  fathers
		= A96;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-08;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A96
		THEN required OF A92 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A96 AND (NOT S OF A96)
		THEN relevant_evt OF A92 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A92 <-- S OF A92;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A92 = TRUE
		THEN S OF A92 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A92 = FALSE) AND (required OF A92 AND relevant_evt
		  OF A92)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-08)
		  INDUCING failF OF A92 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A92 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A92 <-- FALSE;

OBJECT A93 IS_A f_leaf;
	INTERFACE
	  fathers
		= A94;
	  triggers
		= A91;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A94
		THEN required OF A93 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A94 AND (NOT S OF A94)) OR (NOT S OF A91)
		THEN relevant_evt OF A93 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A93 <-- S OF A93;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A93 = TRUE
		THEN S OF A93 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A93 = FALSE) AND (required OF A93 AND relevant_evt
		  OF A93)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A93 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A93 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A93 <-- FALSE;

OBJECT A94 IS_A and_gate;
	INTERFACE
	  sons
		= A91 A93;
	  fathers
		= A96;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A96
		THEN required OF A94 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A96 AND (NOT S OF A96)
		THEN relevant_evt OF A94 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A94 <-- S OF A94;
	  xx28
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A91 AND S OF A93
		THEN S OF A94 <-- TRUE;

OBJECT A96 IS_A or_gate;
	INTERFACE
	  sons
		= A87 A89 A92 A94;
	  fathers
		= A23 A26 A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((NOT required OF A23) AND (NOT required OF A26)) AND (NOT
		  required OF A31)
		THEN required OF A96 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF ((relevant_evt OF A23 AND (NOT S OF A23)) OR (relevant_evt
		  OF A26 AND (NOT S OF A26))) OR (relevant_evt OF A31 AND (NOT
		  S OF A31))
		THEN relevant_evt OF A96 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A96 <-- S OF A96;
	  xx29
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF ((S OF A87 OR S OF A89) OR S OF A92) OR S OF A94
		THEN S OF A96 <-- TRUE;

OBJECT A97 IS_A f_leaf;
	INTERFACE
	  fathers
		= A100;
	  triggered_by
		= A99;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 9.9e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT S OF A99
		THEN required OF A97 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A100 AND (NOT S OF A100)
		THEN relevant_evt OF A97 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A97 <-- S OF A97;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A97 = TRUE
		THEN S OF A97 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A97 = FALSE) AND (required OF A97 AND relevant_evt
		  OF A97)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (9.9e-06)
		  INDUCING failF OF A97 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A97 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A97 <-- FALSE;

OBJECT A98 IS_A f_leaf;
	INTERFACE
	  fathers
		= A107;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-07;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A107
		THEN required OF A98 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A107 AND (NOT S OF A107)
		THEN relevant_evt OF A98 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A98 <-- S OF A98;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A98 = TRUE
		THEN S OF A98 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A98 = FALSE) AND (required OF A98 AND relevant_evt
		  OF A98)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-07)
		  INDUCING failF OF A98 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A98 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A98 <-- FALSE;

OBJECT A99 IS_A f_leaf;
	INTERFACE
	  fathers
		= A100;
	  triggers
		= A97;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 1e-06;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A100
		THEN required OF A99 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (relevant_evt OF A100 AND (NOT S OF A100)) OR (NOT S OF A97)
		THEN relevant_evt OF A99 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF A99 <-- S OF A99;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF A99 = TRUE
		THEN S OF A99 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF A99 = FALSE) AND (required OF A99 AND relevant_evt
		  OF A99)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (1e-06)
		  INDUCING failF OF A99 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF A99 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF A99 <-- FALSE;

OBJECT UE_1 IS_A undes_event;
	INTERFACE
	  sons
		= A0;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= TRUE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	INTERACTION
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		THEN relevant_evt OF UE_1 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF UE_1 <-- S OF UE_1;
	  xx34
		GROUP V3_simu_group
		STEP propagate_effect_S
		IF S OF A0
		THEN S OF UE_1 <-- TRUE;

OBJECT f_A43 IS_A f_leaf;
	INTERFACE
	  fathers
		= A43;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A43
		THEN required OF f_A43 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A43 AND (NOT S OF A43)
		THEN relevant_evt OF f_A43 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A43 <-- S OF f_A43;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A43 = TRUE
		THEN S OF f_A43 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A43 = FALSE) AND (required OF f_A43 AND
		  relevant_evt OF f_A43)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A43 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A43 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A43 <-- FALSE;

OBJECT f_A44 IS_A f_leaf;
	INTERFACE
	  fathers
		= A44;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A44
		THEN required OF f_A44 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A44 AND (NOT S OF A44)
		THEN relevant_evt OF f_A44 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A44 <-- S OF f_A44;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A44 = TRUE
		THEN S OF f_A44 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A44 = FALSE) AND (required OF f_A44 AND
		  relevant_evt OF f_A44)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A44 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A44 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A44 <-- FALSE;

OBJECT f_A45 IS_A f_leaf;
	INTERFACE
	  fathers
		= A45;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A45
		THEN required OF f_A45 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A45 AND (NOT S OF A45)
		THEN relevant_evt OF f_A45 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A45 <-- S OF f_A45;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A45 = TRUE
		THEN S OF f_A45 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A45 = FALSE) AND (required OF f_A45 AND
		  relevant_evt OF f_A45)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A45 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A45 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A45 <-- FALSE;

OBJECT f_A46 IS_A f_leaf;
	INTERFACE
	  fathers
		= A46;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A46
		THEN required OF f_A46 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A46 AND (NOT S OF A46)
		THEN relevant_evt OF f_A46 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A46 <-- S OF f_A46;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A46 = TRUE
		THEN S OF f_A46 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A46 = FALSE) AND (required OF f_A46 AND
		  relevant_evt OF f_A46)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A46 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A46 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A46 <-- FALSE;

OBJECT f_A47 IS_A f_leaf;
	INTERFACE
	  fathers
		= A47;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A47
		THEN required OF f_A47 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A47 AND (NOT S OF A47)
		THEN relevant_evt OF f_A47 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A47 <-- S OF f_A47;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A47 = TRUE
		THEN S OF f_A47 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A47 = FALSE) AND (required OF f_A47 AND
		  relevant_evt OF f_A47)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A47 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A47 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A47 <-- FALSE;

OBJECT f_A48 IS_A f_leaf;
	INTERFACE
	  fathers
		= A48;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A48
		THEN required OF f_A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A48 AND (NOT S OF A48)
		THEN relevant_evt OF f_A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A48 <-- S OF f_A48;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A48 = TRUE
		THEN S OF f_A48 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A48 = FALSE) AND (required OF f_A48 AND
		  relevant_evt OF f_A48)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A48 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A48 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A48 <-- FALSE;

OBJECT f_A49 IS_A f_leaf;
	INTERFACE
	  fathers
		= A49;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A49
		THEN required OF f_A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A49 AND (NOT S OF A49)
		THEN relevant_evt OF f_A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A49 <-- S OF f_A49;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A49 = TRUE
		THEN S OF f_A49 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A49 = FALSE) AND (required OF f_A49 AND
		  relevant_evt OF f_A49)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A49 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A49 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A49 <-- FALSE;

OBJECT f_A51 IS_A f_leaf;
	INTERFACE
	  fathers
		= A51;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A51
		THEN required OF f_A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A51 AND (NOT S OF A51)
		THEN relevant_evt OF f_A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A51 <-- S OF f_A51;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A51 = TRUE
		THEN S OF f_A51 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A51 = FALSE) AND (required OF f_A51 AND
		  relevant_evt OF f_A51)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A51 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A51 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A51 <-- FALSE;

OBJECT f_A52 IS_A f_leaf;
	INTERFACE
	  fathers
		= A52;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A52
		THEN required OF f_A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A52 AND (NOT S OF A52)
		THEN relevant_evt OF f_A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A52 <-- S OF f_A52;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A52 = TRUE
		THEN S OF f_A52 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A52 = FALSE) AND (required OF f_A52 AND
		  relevant_evt OF f_A52)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A52 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A52 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A52 <-- FALSE;

OBJECT f_A54 IS_A f_leaf;
	INTERFACE
	  fathers
		= A54;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A54
		THEN required OF f_A54 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A54 AND (NOT S OF A54)
		THEN relevant_evt OF f_A54 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A54 <-- S OF f_A54;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A54 = TRUE
		THEN S OF f_A54 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A54 = FALSE) AND (required OF f_A54 AND
		  relevant_evt OF f_A54)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A54 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A54 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A54 <-- FALSE;

OBJECT f_A55 IS_A f_leaf;
	INTERFACE
	  fathers
		= A55;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A55
		THEN required OF f_A55 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A55 AND (NOT S OF A55)
		THEN relevant_evt OF f_A55 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A55 <-- S OF f_A55;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A55 = TRUE
		THEN S OF f_A55 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A55 = FALSE) AND (required OF f_A55 AND
		  relevant_evt OF f_A55)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A55 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A55 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A55 <-- FALSE;

OBJECT f_A57 IS_A f_leaf;
	INTERFACE
	  fathers
		= A57;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A57
		THEN required OF f_A57 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A57 AND (NOT S OF A57)
		THEN relevant_evt OF f_A57 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A57 <-- S OF f_A57;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A57 = TRUE
		THEN S OF f_A57 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A57 = FALSE) AND (required OF f_A57 AND
		  relevant_evt OF f_A57)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A57 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A57 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A57 <-- FALSE;

OBJECT f_A58 IS_A f_leaf;
	INTERFACE
	  fathers
		= A58;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A58
		THEN required OF f_A58 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A58 AND (NOT S OF A58)
		THEN relevant_evt OF f_A58 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A58 <-- S OF f_A58;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A58 = TRUE
		THEN S OF f_A58 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A58 = FALSE) AND (required OF f_A58 AND
		  relevant_evt OF f_A58)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A58 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A58 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A58 <-- FALSE;

OBJECT f_A59 IS_A f_leaf;
	INTERFACE
	  fathers
		= A59;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A59
		THEN required OF f_A59 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A59 AND (NOT S OF A59)
		THEN relevant_evt OF f_A59 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A59 <-- S OF f_A59;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A59 = TRUE
		THEN S OF f_A59 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A59 = FALSE) AND (required OF f_A59 AND
		  relevant_evt OF f_A59)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A59 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A59 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A59 <-- FALSE;

OBJECT f_A60 IS_A f_leaf;
	INTERFACE
	  fathers
		= A60;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A60
		THEN required OF f_A60 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A60 AND (NOT S OF A60)
		THEN relevant_evt OF f_A60 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A60 <-- S OF f_A60;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A60 = TRUE
		THEN S OF f_A60 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A60 = FALSE) AND (required OF f_A60 AND
		  relevant_evt OF f_A60)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A60 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A60 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A60 <-- FALSE;

OBJECT f_A61 IS_A f_leaf;
	INTERFACE
	  fathers
		= A61;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A61
		THEN required OF f_A61 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A61 AND (NOT S OF A61)
		THEN relevant_evt OF f_A61 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A61 <-- S OF f_A61;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A61 = TRUE
		THEN S OF f_A61 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A61 = FALSE) AND (required OF f_A61 AND
		  relevant_evt OF f_A61)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A61 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A61 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A61 <-- FALSE;

OBJECT f_A62 IS_A f_leaf;
	INTERFACE
	  fathers
		= A62;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A62
		THEN required OF f_A62 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A62 AND (NOT S OF A62)
		THEN relevant_evt OF f_A62 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A62 <-- S OF f_A62;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A62 = TRUE
		THEN S OF f_A62 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A62 = FALSE) AND (required OF f_A62 AND
		  relevant_evt OF f_A62)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A62 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A62 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A62 <-- FALSE;

OBJECT f_A63 IS_A f_leaf;
	INTERFACE
	  fathers
		= A63;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A63
		THEN required OF f_A63 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A63 AND (NOT S OF A63)
		THEN relevant_evt OF f_A63 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A63 <-- S OF f_A63;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A63 = TRUE
		THEN S OF f_A63 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A63 = FALSE) AND (required OF f_A63 AND
		  relevant_evt OF f_A63)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A63 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A63 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A63 <-- FALSE;

OBJECT f_A64 IS_A f_leaf;
	INTERFACE
	  fathers
		= A64;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A64
		THEN required OF f_A64 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A64 AND (NOT S OF A64)
		THEN relevant_evt OF f_A64 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A64 <-- S OF f_A64;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A64 = TRUE
		THEN S OF f_A64 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A64 = FALSE) AND (required OF f_A64 AND
		  relevant_evt OF f_A64)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A64 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A64 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A64 <-- FALSE;

OBJECT f_A65 IS_A f_leaf;
	INTERFACE
	  fathers
		= A65;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A65
		THEN required OF f_A65 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A65 AND (NOT S OF A65)
		THEN relevant_evt OF f_A65 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A65 <-- S OF f_A65;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A65 = TRUE
		THEN S OF f_A65 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A65 = FALSE) AND (required OF f_A65 AND
		  relevant_evt OF f_A65)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A65 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A65 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A65 <-- FALSE;

OBJECT f_A66 IS_A f_leaf;
	INTERFACE
	  fathers
		= A66;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  lambda
		DOMAIN REAL
		= 0;
	  failF_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failF
		LABEL "failure in operation %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF NOT required OF A66
		THEN required OF f_A66 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A66 AND (NOT S OF A66)
		THEN relevant_evt OF f_A66 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF f_A66 <-- S OF f_A66;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failF OF f_A66 = TRUE
		THEN S OF f_A66 <-- TRUE;
	OCCURRENCE
	  xx10
		GROUP V3_simu_group
		IF (failF OF f_A66 = FALSE) AND (required OF f_A66 AND
		  relevant_evt OF f_A66)
		MAY_OCCUR
		  FAULT failF
		  LABEL "failure in operation %OBJECT"
		  DIST EXP (0)
		  INDUCING failF OF f_A66 <-- TRUE;
	  xx11
		GROUP V3_simu_group
		IF failF OF f_A66 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failF OF f_A66 <-- FALSE;

OBJECT i_A43 IS_A i_leaf;
	INTERFACE
	  fathers
		= A43;
	  triggered_by
		= A5;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A43) OR (NOT S OF A5)
		THEN required OF i_A43 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A43 AND (NOT S OF A43)
		THEN relevant_evt OF i_A43 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A43 <-- S OF i_A43;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A43 = TRUE
		THEN S OF i_A43 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A43) AND ((NOT already_standby OF i_A43)
		  AND (NOT already_required OF i_A43))
		THEN already_standby OF i_A43 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A43 AND already_standby OF i_A43
		THEN to_be_fired OF i_A43 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A43 = FALSE) AND (to_be_fired OF i_A43 AND
		  relevant_evt OF i_A43)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A43 <-- TRUE,
			already_standby OF i_A43 <-- FALSE,
			already_required OF i_A43 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A43 <-- FALSE,
			already_required OF i_A43 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A43 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A43 <-- FALSE;

OBJECT i_A44 IS_A i_leaf;
	INTERFACE
	  fathers
		= A44;
	  triggered_by
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A44) OR (NOT S OF A8)
		THEN required OF i_A44 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A44 AND (NOT S OF A44)
		THEN relevant_evt OF i_A44 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A44 <-- S OF i_A44;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A44 = TRUE
		THEN S OF i_A44 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A44) AND ((NOT already_standby OF i_A44)
		  AND (NOT already_required OF i_A44))
		THEN already_standby OF i_A44 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A44 AND already_standby OF i_A44
		THEN to_be_fired OF i_A44 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A44 = FALSE) AND (to_be_fired OF i_A44 AND
		  relevant_evt OF i_A44)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A44 <-- TRUE,
			already_standby OF i_A44 <-- FALSE,
			already_required OF i_A44 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A44 <-- FALSE,
			already_required OF i_A44 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A44 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A44 <-- FALSE;

OBJECT i_A45 IS_A i_leaf;
	INTERFACE
	  fathers
		= A45;
	  triggered_by
		= A11;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A45) OR (NOT S OF A11)
		THEN required OF i_A45 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A45 AND (NOT S OF A45)
		THEN relevant_evt OF i_A45 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A45 <-- S OF i_A45;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A45 = TRUE
		THEN S OF i_A45 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A45) AND ((NOT already_standby OF i_A45)
		  AND (NOT already_required OF i_A45))
		THEN already_standby OF i_A45 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A45 AND already_standby OF i_A45
		THEN to_be_fired OF i_A45 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A45 = FALSE) AND (to_be_fired OF i_A45 AND
		  relevant_evt OF i_A45)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A45 <-- TRUE,
			already_standby OF i_A45 <-- FALSE,
			already_required OF i_A45 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A45 <-- FALSE,
			already_required OF i_A45 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A45 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A45 <-- FALSE;

OBJECT i_A46 IS_A i_leaf;
	INTERFACE
	  fathers
		= A46;
	  triggered_by
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A46) OR (NOT S OF A14)
		THEN required OF i_A46 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A46 AND (NOT S OF A46)
		THEN relevant_evt OF i_A46 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A46 <-- S OF i_A46;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A46 = TRUE
		THEN S OF i_A46 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A46) AND ((NOT already_standby OF i_A46)
		  AND (NOT already_required OF i_A46))
		THEN already_standby OF i_A46 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A46 AND already_standby OF i_A46
		THEN to_be_fired OF i_A46 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A46 = FALSE) AND (to_be_fired OF i_A46 AND
		  relevant_evt OF i_A46)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A46 <-- TRUE,
			already_standby OF i_A46 <-- FALSE,
			already_required OF i_A46 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A46 <-- FALSE,
			already_required OF i_A46 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A46 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A46 <-- FALSE;

OBJECT i_A47 IS_A i_leaf;
	INTERFACE
	  fathers
		= A47;
	  triggered_by
		= A17;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A47) OR (NOT S OF A17)
		THEN required OF i_A47 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A47 AND (NOT S OF A47)
		THEN relevant_evt OF i_A47 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A47 <-- S OF i_A47;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A47 = TRUE
		THEN S OF i_A47 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A47) AND ((NOT already_standby OF i_A47)
		  AND (NOT already_required OF i_A47))
		THEN already_standby OF i_A47 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A47 AND already_standby OF i_A47
		THEN to_be_fired OF i_A47 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A47 = FALSE) AND (to_be_fired OF i_A47 AND
		  relevant_evt OF i_A47)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A47 <-- TRUE,
			already_standby OF i_A47 <-- FALSE,
			already_required OF i_A47 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A47 <-- FALSE,
			already_required OF i_A47 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A47 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A47 <-- FALSE;

OBJECT i_A48 IS_A i_leaf;
	INTERFACE
	  fathers
		= A48;
	  triggered_by
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A48) OR (NOT S OF A20)
		THEN required OF i_A48 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A48 AND (NOT S OF A48)
		THEN relevant_evt OF i_A48 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A48 <-- S OF i_A48;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A48 = TRUE
		THEN S OF i_A48 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A48) AND ((NOT already_standby OF i_A48)
		  AND (NOT already_required OF i_A48))
		THEN already_standby OF i_A48 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A48 AND already_standby OF i_A48
		THEN to_be_fired OF i_A48 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A48 = FALSE) AND (to_be_fired OF i_A48 AND
		  relevant_evt OF i_A48)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A48 <-- TRUE,
			already_standby OF i_A48 <-- FALSE,
			already_required OF i_A48 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A48 <-- FALSE,
			already_required OF i_A48 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A48 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A48 <-- FALSE;

OBJECT i_A49 IS_A i_leaf;
	INTERFACE
	  fathers
		= A49;
	  triggered_by
		= A8;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A49) OR (NOT S OF A8)
		THEN required OF i_A49 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A49 AND (NOT S OF A49)
		THEN relevant_evt OF i_A49 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A49 <-- S OF i_A49;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A49 = TRUE
		THEN S OF i_A49 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A49) AND ((NOT already_standby OF i_A49)
		  AND (NOT already_required OF i_A49))
		THEN already_standby OF i_A49 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A49 AND already_standby OF i_A49
		THEN to_be_fired OF i_A49 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A49 = FALSE) AND (to_be_fired OF i_A49 AND
		  relevant_evt OF i_A49)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A49 <-- TRUE,
			already_standby OF i_A49 <-- FALSE,
			already_required OF i_A49 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A49 <-- FALSE,
			already_required OF i_A49 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A49 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A49 <-- FALSE;

OBJECT i_A51 IS_A i_leaf;
	INTERFACE
	  fathers
		= A51;
	  triggered_by
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A51) OR (NOT S OF A23)
		THEN required OF i_A51 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A51 AND (NOT S OF A51)
		THEN relevant_evt OF i_A51 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A51 <-- S OF i_A51;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A51 = TRUE
		THEN S OF i_A51 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A51) AND ((NOT already_standby OF i_A51)
		  AND (NOT already_required OF i_A51))
		THEN already_standby OF i_A51 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A51 AND already_standby OF i_A51
		THEN to_be_fired OF i_A51 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A51 = FALSE) AND (to_be_fired OF i_A51 AND
		  relevant_evt OF i_A51)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A51 <-- TRUE,
			already_standby OF i_A51 <-- FALSE,
			already_required OF i_A51 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A51 <-- FALSE,
			already_required OF i_A51 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A51 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A51 <-- FALSE;

OBJECT i_A52 IS_A i_leaf;
	INTERFACE
	  fathers
		= A52;
	  triggered_by
		= A14;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A52) OR (NOT S OF A14)
		THEN required OF i_A52 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A52 AND (NOT S OF A52)
		THEN relevant_evt OF i_A52 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A52 <-- S OF i_A52;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A52 = TRUE
		THEN S OF i_A52 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A52) AND ((NOT already_standby OF i_A52)
		  AND (NOT already_required OF i_A52))
		THEN already_standby OF i_A52 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A52 AND already_standby OF i_A52
		THEN to_be_fired OF i_A52 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A52 = FALSE) AND (to_be_fired OF i_A52 AND
		  relevant_evt OF i_A52)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A52 <-- TRUE,
			already_standby OF i_A52 <-- FALSE,
			already_required OF i_A52 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A52 <-- FALSE,
			already_required OF i_A52 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A52 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A52 <-- FALSE;

OBJECT i_A54 IS_A i_leaf;
	INTERFACE
	  fathers
		= A54;
	  triggered_by
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A54) OR (NOT S OF A23)
		THEN required OF i_A54 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A54 AND (NOT S OF A54)
		THEN relevant_evt OF i_A54 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A54 <-- S OF i_A54;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A54 = TRUE
		THEN S OF i_A54 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A54) AND ((NOT already_standby OF i_A54)
		  AND (NOT already_required OF i_A54))
		THEN already_standby OF i_A54 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A54 AND already_standby OF i_A54
		THEN to_be_fired OF i_A54 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A54 = FALSE) AND (to_be_fired OF i_A54 AND
		  relevant_evt OF i_A54)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A54 <-- TRUE,
			already_standby OF i_A54 <-- FALSE,
			already_required OF i_A54 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A54 <-- FALSE,
			already_required OF i_A54 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A54 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A54 <-- FALSE;

OBJECT i_A55 IS_A i_leaf;
	INTERFACE
	  fathers
		= A55;
	  triggered_by
		= A20;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A55) OR (NOT S OF A20)
		THEN required OF i_A55 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A55 AND (NOT S OF A55)
		THEN relevant_evt OF i_A55 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A55 <-- S OF i_A55;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A55 = TRUE
		THEN S OF i_A55 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A55) AND ((NOT already_standby OF i_A55)
		  AND (NOT already_required OF i_A55))
		THEN already_standby OF i_A55 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A55 AND already_standby OF i_A55
		THEN to_be_fired OF i_A55 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A55 = FALSE) AND (to_be_fired OF i_A55 AND
		  relevant_evt OF i_A55)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A55 <-- TRUE,
			already_standby OF i_A55 <-- FALSE,
			already_required OF i_A55 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A55 <-- FALSE,
			already_required OF i_A55 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A55 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A55 <-- FALSE;

OBJECT i_A57 IS_A i_leaf;
	INTERFACE
	  fathers
		= A57;
	  triggered_by
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A57) OR (NOT S OF A23)
		THEN required OF i_A57 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A57 AND (NOT S OF A57)
		THEN relevant_evt OF i_A57 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A57 <-- S OF i_A57;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A57 = TRUE
		THEN S OF i_A57 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A57) AND ((NOT already_standby OF i_A57)
		  AND (NOT already_required OF i_A57))
		THEN already_standby OF i_A57 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A57 AND already_standby OF i_A57
		THEN to_be_fired OF i_A57 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A57 = FALSE) AND (to_be_fired OF i_A57 AND
		  relevant_evt OF i_A57)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A57 <-- TRUE,
			already_standby OF i_A57 <-- FALSE,
			already_required OF i_A57 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A57 <-- FALSE,
			already_required OF i_A57 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A57 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A57 <-- FALSE;

OBJECT i_A58 IS_A i_leaf;
	INTERFACE
	  fathers
		= A58;
	  triggered_by
		= A23;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A58) OR (NOT S OF A23)
		THEN required OF i_A58 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A58 AND (NOT S OF A58)
		THEN relevant_evt OF i_A58 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A58 <-- S OF i_A58;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A58 = TRUE
		THEN S OF i_A58 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A58) AND ((NOT already_standby OF i_A58)
		  AND (NOT already_required OF i_A58))
		THEN already_standby OF i_A58 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A58 AND already_standby OF i_A58
		THEN to_be_fired OF i_A58 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A58 = FALSE) AND (to_be_fired OF i_A58 AND
		  relevant_evt OF i_A58)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A58 <-- TRUE,
			already_standby OF i_A58 <-- FALSE,
			already_required OF i_A58 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A58 <-- FALSE,
			already_required OF i_A58 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A58 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A58 <-- FALSE;

OBJECT i_A59 IS_A i_leaf;
	INTERFACE
	  fathers
		= A59;
	  triggered_by
		= A26;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A59) OR (NOT S OF A26)
		THEN required OF i_A59 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A59 AND (NOT S OF A59)
		THEN relevant_evt OF i_A59 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A59 <-- S OF i_A59;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A59 = TRUE
		THEN S OF i_A59 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A59) AND ((NOT already_standby OF i_A59)
		  AND (NOT already_required OF i_A59))
		THEN already_standby OF i_A59 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A59 AND already_standby OF i_A59
		THEN to_be_fired OF i_A59 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A59 = FALSE) AND (to_be_fired OF i_A59 AND
		  relevant_evt OF i_A59)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A59 <-- TRUE,
			already_standby OF i_A59 <-- FALSE,
			already_required OF i_A59 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A59 <-- FALSE,
			already_required OF i_A59 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A59 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A59 <-- FALSE;

OBJECT i_A60 IS_A i_leaf;
	INTERFACE
	  fathers
		= A60;
	  triggered_by
		= A2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A60) OR (NOT S OF A2)
		THEN required OF i_A60 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A60 AND (NOT S OF A60)
		THEN relevant_evt OF i_A60 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A60 <-- S OF i_A60;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A60 = TRUE
		THEN S OF i_A60 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A60) AND ((NOT already_standby OF i_A60)
		  AND (NOT already_required OF i_A60))
		THEN already_standby OF i_A60 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A60 AND already_standby OF i_A60
		THEN to_be_fired OF i_A60 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A60 = FALSE) AND (to_be_fired OF i_A60 AND
		  relevant_evt OF i_A60)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A60 <-- TRUE,
			already_standby OF i_A60 <-- FALSE,
			already_required OF i_A60 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A60 <-- FALSE,
			already_required OF i_A60 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A60 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A60 <-- FALSE;

OBJECT i_A61 IS_A i_leaf;
	INTERFACE
	  fathers
		= A61;
	  triggered_by
		= A2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A61) OR (NOT S OF A2)
		THEN required OF i_A61 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A61 AND (NOT S OF A61)
		THEN relevant_evt OF i_A61 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A61 <-- S OF i_A61;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A61 = TRUE
		THEN S OF i_A61 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A61) AND ((NOT already_standby OF i_A61)
		  AND (NOT already_required OF i_A61))
		THEN already_standby OF i_A61 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A61 AND already_standby OF i_A61
		THEN to_be_fired OF i_A61 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A61 = FALSE) AND (to_be_fired OF i_A61 AND
		  relevant_evt OF i_A61)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A61 <-- TRUE,
			already_standby OF i_A61 <-- FALSE,
			already_required OF i_A61 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A61 <-- FALSE,
			already_required OF i_A61 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A61 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A61 <-- FALSE;

OBJECT i_A62 IS_A i_leaf;
	INTERFACE
	  fathers
		= A62;
	  triggered_by
		= A2;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A62) OR (NOT S OF A2)
		THEN required OF i_A62 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A62 AND (NOT S OF A62)
		THEN relevant_evt OF i_A62 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A62 <-- S OF i_A62;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A62 = TRUE
		THEN S OF i_A62 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A62) AND ((NOT already_standby OF i_A62)
		  AND (NOT already_required OF i_A62))
		THEN already_standby OF i_A62 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A62 AND already_standby OF i_A62
		THEN to_be_fired OF i_A62 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A62 = FALSE) AND (to_be_fired OF i_A62 AND
		  relevant_evt OF i_A62)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A62 <-- TRUE,
			already_standby OF i_A62 <-- FALSE,
			already_required OF i_A62 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A62 <-- FALSE,
			already_required OF i_A62 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A62 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A62 <-- FALSE;

OBJECT i_A63 IS_A i_leaf;
	INTERFACE
	  fathers
		= A63;
	  triggered_by
		= A31;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A63) OR (NOT S OF A31)
		THEN required OF i_A63 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A63 AND (NOT S OF A63)
		THEN relevant_evt OF i_A63 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A63 <-- S OF i_A63;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A63 = TRUE
		THEN S OF i_A63 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A63) AND ((NOT already_standby OF i_A63)
		  AND (NOT already_required OF i_A63))
		THEN already_standby OF i_A63 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A63 AND already_standby OF i_A63
		THEN to_be_fired OF i_A63 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A63 = FALSE) AND (to_be_fired OF i_A63 AND
		  relevant_evt OF i_A63)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A63 <-- TRUE,
			already_standby OF i_A63 <-- FALSE,
			already_required OF i_A63 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A63 <-- FALSE,
			already_required OF i_A63 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A63 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A63 <-- FALSE;

OBJECT i_A64 IS_A i_leaf;
	INTERFACE
	  fathers
		= A64;
	  triggered_by
		= A34;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A64) OR (NOT S OF A34)
		THEN required OF i_A64 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A64 AND (NOT S OF A64)
		THEN relevant_evt OF i_A64 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A64 <-- S OF i_A64;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A64 = TRUE
		THEN S OF i_A64 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A64) AND ((NOT already_standby OF i_A64)
		  AND (NOT already_required OF i_A64))
		THEN already_standby OF i_A64 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A64 AND already_standby OF i_A64
		THEN to_be_fired OF i_A64 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A64 = FALSE) AND (to_be_fired OF i_A64 AND
		  relevant_evt OF i_A64)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A64 <-- TRUE,
			already_standby OF i_A64 <-- FALSE,
			already_required OF i_A64 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A64 <-- FALSE,
			already_required OF i_A64 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A64 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A64 <-- FALSE;

OBJECT i_A65 IS_A i_leaf;
	INTERFACE
	  fathers
		= A65;
	  triggered_by
		= A37;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A65) OR (NOT S OF A37)
		THEN required OF i_A65 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A65 AND (NOT S OF A65)
		THEN relevant_evt OF i_A65 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A65 <-- S OF i_A65;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A65 = TRUE
		THEN S OF i_A65 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A65) AND ((NOT already_standby OF i_A65)
		  AND (NOT already_required OF i_A65))
		THEN already_standby OF i_A65 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A65 AND already_standby OF i_A65
		THEN to_be_fired OF i_A65 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A65 = FALSE) AND (to_be_fired OF i_A65 AND
		  relevant_evt OF i_A65)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A65 <-- TRUE,
			already_standby OF i_A65 <-- FALSE,
			already_required OF i_A65 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A65 <-- FALSE,
			already_required OF i_A65 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A65 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A65 <-- FALSE;

OBJECT i_A66 IS_A i_leaf;
	INTERFACE
	  fathers
		= A66;
	  triggered_by
		= A41;
	ATTRIBUTE
	  required
		DOMAIN BOOLEAN
		REINITIALISATION TRUE;
	  already_S
		DOMAIN BOOLEAN
		= FALSE;
	CONSTANT
	  calculate_required
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';
	  force_relevant_events
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  S
		LABEL "%OBJECT"
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  relevant_evt
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	CONSTANT
	  mu
		DOMAIN REAL
		= 0.1;
	  when_to_check
		DOMAIN 'not_req_to_req' 'req_to_not_req'
		= 'not_req_to_req';
	  gamma
		DOMAIN REAL
		= 1;
	  failI_FROZEN
		DOMAIN BOOLEAN
		= FALSE;
	(*FAILURE*)
	ATTRIBUTE
	  failI
		LABEL "instantaneous failure %OBJECT"
		DOMAIN BOOLEAN
		= FALSE;
	ATTRIBUTE
	  to_be_fired
		DOMAIN BOOLEAN
		REINITIALISATION FALSE;
	  already_standby
		DOMAIN BOOLEAN
		= FALSE;
	  already_required
		DOMAIN BOOLEAN
		= FALSE;
	INTERACTION
	  xx3
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF (NOT required OF A66) OR (NOT S OF A41)
		THEN required OF i_A66 <-- FALSE;
	  xx4
		GROUP V3_simu_group
		STEP propagate_effect_required
		IF relevant_evt OF A66 AND (NOT S OF A66)
		THEN relevant_evt OF i_A66 <-- TRUE;
	  xx5
		GROUP V3_simu_group
		STEP propagate_leaves
		THEN already_S OF i_A66 <-- S OF i_A66;
	  xx6
		GROUP V3_simu_group
		STEP initialization
		IF failI OF i_A66 = TRUE
		THEN S OF i_A66 <-- TRUE;
	  xx20
		GROUP V3_simu_group
		STEP propagate_leaves
		IF (NOT required OF i_A66) AND ((NOT already_standby OF i_A66)
		  AND (NOT already_required OF i_A66))
		THEN already_standby OF i_A66 <-- TRUE;
	  xx22
		GROUP V3_simu_group
		STEP tops
		IF required OF i_A66 AND already_standby OF i_A66
		THEN to_be_fired OF i_A66 <-- TRUE;
	OCCURRENCE
	  xx23
		GROUP V3_simu_group
		IF (failI OF i_A66 = FALSE) AND (to_be_fired OF i_A66 AND
		  relevant_evt OF i_A66)
		MAY_OCCUR
		  FAULT failI
		  LABEL "instantaneous failure %OBJECT"
		  DIST INS (1)
		  INDUCING failI OF i_A66 <-- TRUE,
			already_standby OF i_A66 <-- FALSE,
			already_required OF i_A66 <-- FALSE
		OR_ELSE
		  TRANSITION good
		  DIST INS (0)
		  INDUCING already_standby OF i_A66 <-- FALSE,
			already_required OF i_A66 <-- FALSE;
	  xx24
		GROUP V3_simu_group
		IF failI OF i_A66 = TRUE
		MAY_OCCUR
		  REPAIR rep
		  DIST EXP (0.1)
		  INDUCING failI OF i_A66 <-- FALSE;

OBJECT logic_0 IS_A logic_link;

OBJECT logic_1 IS_A logic_link;

OBJECT logic_10 IS_A logic_link;

OBJECT logic_100 IS_A logic_link;

OBJECT logic_101 IS_A logic_link;

OBJECT logic_102 IS_A logic_link;

OBJECT logic_103 IS_A logic_link;

OBJECT logic_104 IS_A logic_link;

OBJECT logic_105 IS_A logic_link;

OBJECT logic_106 IS_A logic_link;

OBJECT logic_107 IS_A logic_link;

OBJECT logic_108 IS_A logic_link;

OBJECT logic_109 IS_A logic_link;

OBJECT logic_11 IS_A logic_link;

OBJECT logic_110 IS_A logic_link;

OBJECT logic_111 IS_A logic_link;

OBJECT logic_112 IS_A logic_link;

OBJECT logic_113 IS_A logic_link;

OBJECT logic_114 IS_A logic_link;

OBJECT logic_115 IS_A logic_link;

OBJECT logic_116 IS_A logic_link;

OBJECT logic_117 IS_A logic_link;

OBJECT logic_118 IS_A logic_link;

OBJECT logic_119 IS_A logic_link;

OBJECT logic_12 IS_A logic_link;

OBJECT logic_120 IS_A logic_link;

OBJECT logic_121 IS_A logic_link;

OBJECT logic_122 IS_A logic_link;

OBJECT logic_123 IS_A logic_link;

OBJECT logic_124 IS_A logic_link;

OBJECT logic_125 IS_A logic_link;

OBJECT logic_126 IS_A logic_link;

OBJECT logic_127 IS_A logic_link;

OBJECT logic_128 IS_A logic_link;

OBJECT logic_129 IS_A logic_link;

OBJECT logic_13 IS_A logic_link;

OBJECT logic_130 IS_A logic_link;

OBJECT logic_131 IS_A logic_link;

OBJECT logic_132 IS_A logic_link;

OBJECT logic_133 IS_A logic_link;

OBJECT logic_134 IS_A logic_link;

OBJECT logic_135 IS_A logic_link;

OBJECT logic_136 IS_A logic_link;

OBJECT logic_137 IS_A logic_link;

OBJECT logic_138 IS_A logic_link;

OBJECT logic_139 IS_A logic_link;

OBJECT logic_14 IS_A logic_link;

OBJECT logic_140 IS_A logic_link;

OBJECT logic_141 IS_A logic_link;

OBJECT logic_142 IS_A logic_link;

OBJECT logic_143 IS_A logic_link;

OBJECT logic_144 IS_A logic_link;

OBJECT logic_145 IS_A logic_link;

OBJECT logic_146 IS_A logic_link;

OBJECT logic_15 IS_A logic_link;

OBJECT logic_16 IS_A logic_link;

OBJECT logic_17 IS_A logic_link;

OBJECT logic_18 IS_A logic_link;

OBJECT logic_19 IS_A logic_link;

OBJECT logic_2 IS_A logic_link;

OBJECT logic_20 IS_A logic_link;

OBJECT logic_21 IS_A logic_link;

OBJECT logic_22 IS_A logic_link;

OBJECT logic_23 IS_A logic_link;

OBJECT logic_24 IS_A logic_link;

OBJECT logic_25 IS_A logic_link;

OBJECT logic_26 IS_A logic_link;

OBJECT logic_27 IS_A logic_link;

OBJECT logic_28 IS_A logic_link;

OBJECT logic_29 IS_A logic_link;

OBJECT logic_3 IS_A logic_link;

OBJECT logic_30 IS_A logic_link;

OBJECT logic_31 IS_A logic_link;

OBJECT logic_32 IS_A logic_link;

OBJECT logic_33 IS_A logic_link;

OBJECT logic_34 IS_A logic_link;

OBJECT logic_35 IS_A logic_link;

OBJECT logic_36 IS_A logic_link;

OBJECT logic_37 IS_A logic_link;

OBJECT logic_38 IS_A logic_link;

OBJECT logic_39 IS_A logic_link;

OBJECT logic_4 IS_A logic_link;

OBJECT logic_40 IS_A logic_link;

OBJECT logic_41 IS_A logic_link;

OBJECT logic_42 IS_A logic_link;

OBJECT logic_43 IS_A logic_link;

OBJECT logic_44 IS_A logic_link;

OBJECT logic_45 IS_A logic_link;

OBJECT logic_46 IS_A logic_link;

OBJECT logic_47 IS_A logic_link;

OBJECT logic_48 IS_A logic_link;

OBJECT logic_49 IS_A logic_link;

OBJECT logic_5 IS_A logic_link;

OBJECT logic_50 IS_A logic_link;

OBJECT logic_51 IS_A logic_link;

OBJECT logic_52 IS_A logic_link;

OBJECT logic_53 IS_A logic_link;

OBJECT logic_54 IS_A logic_link;

OBJECT logic_55 IS_A logic_link;

OBJECT logic_56 IS_A logic_link;

OBJECT logic_57 IS_A logic_link;

OBJECT logic_58 IS_A logic_link;

OBJECT logic_59 IS_A logic_link;

OBJECT logic_6 IS_A logic_link;

OBJECT logic_60 IS_A logic_link;

OBJECT logic_61 IS_A logic_link;

OBJECT logic_62 IS_A logic_link;

OBJECT logic_63 IS_A logic_link;

OBJECT logic_64 IS_A logic_link;

OBJECT logic_65 IS_A logic_link;

OBJECT logic_66 IS_A logic_link;

OBJECT logic_67 IS_A logic_link;

OBJECT logic_68 IS_A logic_link;

OBJECT logic_69 IS_A logic_link;

OBJECT logic_7 IS_A logic_link;

OBJECT logic_70 IS_A logic_link;

OBJECT logic_71 IS_A logic_link;

OBJECT logic_72 IS_A logic_link;

OBJECT logic_73 IS_A logic_link;

OBJECT logic_74 IS_A logic_link;

OBJECT logic_75 IS_A logic_link;

OBJECT logic_76 IS_A logic_link;

OBJECT logic_77 IS_A logic_link;

OBJECT logic_78 IS_A logic_link;

OBJECT logic_79 IS_A logic_link;

OBJECT logic_8 IS_A logic_link;

OBJECT logic_80 IS_A logic_link;

OBJECT logic_81 IS_A logic_link;

OBJECT logic_82 IS_A logic_link;

OBJECT logic_83 IS_A logic_link;

OBJECT logic_84 IS_A logic_link;

OBJECT logic_85 IS_A logic_link;

OBJECT logic_86 IS_A logic_link;

OBJECT logic_87 IS_A logic_link;

OBJECT logic_88 IS_A logic_link;

OBJECT logic_89 IS_A logic_link;

OBJECT logic_9 IS_A logic_link;

OBJECT logic_90 IS_A logic_link;

OBJECT logic_91 IS_A logic_link;

OBJECT logic_92 IS_A logic_link;

OBJECT logic_93 IS_A logic_link;

OBJECT logic_94 IS_A logic_link;

OBJECT logic_95 IS_A logic_link;

OBJECT logic_96 IS_A logic_link;

OBJECT logic_97 IS_A logic_link;

OBJECT logic_98 IS_A logic_link;

OBJECT logic_99 IS_A logic_link;

OBJECT t_dep_0 IS_A trigger_link;
	INTERFACE
	  target
		= i_A60;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_1 IS_A trigger_link;
	INTERFACE
	  target
		= i_A61;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_10 IS_A trigger_link;
	INTERFACE
	  target
		= i_A48;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_11 IS_A trigger_link;
	INTERFACE
	  target
		= i_A55;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_12 IS_A trigger_link;
	INTERFACE
	  target
		= i_A51;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_13 IS_A trigger_link;
	INTERFACE
	  target
		= i_A54;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_14 IS_A trigger_link;
	INTERFACE
	  target
		= i_A57;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_15 IS_A trigger_link;
	INTERFACE
	  target
		= i_A58;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_16 IS_A trigger_link;
	INTERFACE
	  target
		= i_A59;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_17 IS_A trigger_link;
	INTERFACE
	  target
		= i_A63;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_18 IS_A trigger_link;
	INTERFACE
	  target
		= i_A64;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_19 IS_A trigger_link;
	INTERFACE
	  target
		= i_A65;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_2 IS_A trigger_link;
	INTERFACE
	  target
		= i_A62;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_20 IS_A trigger_link;
	INTERFACE
	  target
		= i_A66;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_3 IS_A trigger_link;
	INTERFACE
	  target
		= i_A43;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_4 IS_A trigger_link;
	INTERFACE
	  target
		= i_A44;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_5 IS_A trigger_link;
	INTERFACE
	  target
		= i_A49;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_6 IS_A trigger_link;
	INTERFACE
	  target
		= i_A45;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_7 IS_A trigger_link;
	INTERFACE
	  target
		= i_A46;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_8 IS_A trigger_link;
	INTERFACE
	  target
		= i_A52;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_dep_9 IS_A trigger_link;
	INTERFACE
	  target
		= i_A47;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'fn_fathers_and_trig';

OBJECT t_seq_0 IS_A trigger_link;
	INTERFACE
	  target
		= A75;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_1 IS_A trigger_link;
	INTERFACE
	  target
		= A80;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_2 IS_A trigger_link;
	INTERFACE
	  target
		= A86;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_3 IS_A trigger_link;
	INTERFACE
	  target
		= A91;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_4 IS_A trigger_link;
	INTERFACE
	  target
		= A97;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT t_seq_5 IS_A trigger_link;
	INTERFACE
	  target
		= A102;
	CONSTANT
	  trigger_kind
		DOMAIN 'fn_fathers_and_trig' 'fn_fathers_opp_trig' 'always_true' 'always_false' 'equal_to_S_trig' 'opposite_to_S_trig'
		= 'equal_to_S_trig';

OBJECT __ARBRE__EIRM IS_A FIGARO;
	CONSTANT
	  Profil1
		DOMAIN BOOLEAN
		= TRUE;
	  no_trim
		DOMAIN BOOLEAN
		= FALSE;
	  trim_article
		DOMAIN BOOLEAN
		= TRUE;
	  no_repair
		DOMAIN BOOLEAN
		= FALSE;

